{
	"id": "232f375c6debe4ccb73145683b9c5e1a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"METH_unflattned.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\n////////////////////////////////////////////////\r\n//                                            //\r\n//    ███╗   ███╗███████╗████████╗██╗  ██╗    //\r\n//    ████╗ ████║██╔════╝╚══██╔══╝██║  ██║    //\r\n//    ██╔████╔██║█████╗     ██║   ███████║    //\r\n//    ██║╚██╔╝██║██╔══╝     ██║   ██╔══██║    //\r\n//    ██║ ╚═╝ ██║███████╗   ██║   ██║  ██║    //\r\n//    ╚═╝     ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝    //\r\n//                                            //\r\n////////////////////////////////////////////////\r\n                                    \r\n                                                                                                                                                                                                \r\n// $METH Token (crystalmeth.xyz) is a Blast Blockchain token where you cannot ever sell \r\n// more than 10% of your tokens in any SINGLE TRANSACTION. The transaction \r\n// will revert if you attempt to sell more than 10% at once.\r\n\r\n// For example, if you had 1000 $METH tokens in your wallet, and attempt to \r\n// sell more than 100 tokens to the DEX, then the transaction will either \r\n// revert, produce an error, or simply not allow you to proceed.\r\n\r\n// If you did sell 100 tokens (10%), then you'd be left with 900 METH in your \r\n// wallet, which means for your next sell, you wouldn't be able to sell more \r\n// than 90 METH tokens, and so on.\r\n\r\n// Benefits: METH massively reduces sell pressure. You would need to generate \r\n// multiple transactions to sell large numbers. The mechanism also stops bots \r\n// instantly trying to dump tokens after a price spike. \r\n\r\n//////////////////////     Important notes:     ////////////////////////////// \r\n\r\n// METH is designed to work with all UniswapV2 DEX clones that support \"fee-on-transfer\".\r\n// Note that the transfer (and transferFrom) functions are unable to distinguish \r\n// between a \"sell\" (swap) on a DEX and the process of adding liquidity, as both \r\n// processes involve the recipient of tokens being a DEX, therefor, the limitation \r\n// of sending 10% of your stash to a liquidity pool also applies. Technically, \r\n// there are ways to capture the addLiquidity and addLiquidityETH method calls, \r\n// which could be used to differentiate between a swap and just adding liquidity,\r\n// however this could then become an attack vector if a function was crafted in another\r\n// contract to mimic these Uniswap V2 methods. \r\n\r\n// Note that the following trnasactions have NO LIMITS:\r\n// 1. Wallet-to-Wallet transfers (although you must retain 1 METH!)\r\n// 2. BUYING METH tokens from the DEX (Temporary taxes apply for launch)\r\n// 3. Removing Liquidity from the DEX\r\n\r\n// For more information visit https://crystalmeth.xyz \r\n// or our Telegram group: https://t.me/crystalmethtoken\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\";\r\n\r\n\r\n/// @title An ERC20 contract named METH\r\n/// @author METH Token developer team (info@crystalmeth.xyz)\r\n/// @notice Serves as a dynamic reflection token\r\n/// @dev Inherits multiple OpenZeppelin standards \r\ncontract METH is Initializable, IERC20Upgradeable, OwnableUpgradeable {\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /// array of address which are excluded from rewards\r\n    address[] public _excluded;\r\n\r\n    /// maps an address to an amount owned in tSpace\r\n    mapping(address => uint256) private _tOwned;\r\n    /// maps an address to an amount owned in rSpace\r\n    mapping(address => uint256) private _rOwned;\r\n    \r\n    /**\r\n    /// maps an owner to a spender, and the amount of tokens that the spender is \r\n    /// approved to spend on behalf of the owner. Used in the custom _approve function \r\n    */\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    /// maps addresses to whether they are excluded from Fees/Rewards or not\r\n    mapping(address => bool) private _isExcluded;\r\n\r\n    /// maps addresses to whether they are excluded from the Max Tx or not\r\n    mapping(address => bool) private _isExcludedFromMaxTx;\r\n\r\n    /// fixed value representing MAX which is 2**256-1\r\n    uint256 private _MAX;\r\n\r\n    /// @notice the total fixed supply of METH tokens\r\n    uint256 public _tTotal;\r\n\r\n    /**\r\n    /// rTotal is a calculated value - rTotal = MAX − (MAX mod tTotal)\r\n    /// (Note: value will go down after each buy/sell transaction)  \r\n    */\r\n    uint256 public _rTotal;\r\n\r\n    /// maximum transation amount\r\n    uint256 public maxTxAmount;\r\n\r\n    bool public antiWhale;\r\n\r\n    /////////////////////////////////////////////////////////////\r\n    ////                                                     ////\r\n    ////    Initializer - part of upgradeable ERC20 token    ////\r\n    ////                                                     ////\r\n    /////////////////////////////////////////////////////////////\r\n\r\n    function initialize(\r\n        // bool initialTestingFunctionsAllowed\r\n\r\n        ) initializer external {\r\n\r\n\r\n        /// ownableUpgradeble call __Ownable_init function\r\n        OwnableUpgradeable.__Ownable_init();\r\n\r\n        /// sets token details\r\n        _name = \"MTESTF\";\r\n        _symbol = \"MTESTF\";\r\n        _decimals = 18;\r\n\r\n        /// total token supply is assigned to _tTotal, expressed in wei (10 Billion)\r\n        _tTotal = 10000000000000000000000000000;\r\n\r\n        // /// used for rSpace\r\n        _MAX = ~uint256(0);\r\n\r\n        /// rTotal calculated based on tTotal\r\n        _rTotal = (_MAX - (_MAX % _tTotal));\r\n\r\n        /// adds the rTotal value to owner array mapping which effectively gives owner initial supply\r\n        _rOwned[owner()] = _rTotal;\r\n\r\n         maxTxAmount = _tTotal;\r\n\r\n\r\n        /// exclude These contracts from fees and rewards\r\n        _isExcluded[address(0)] = true;\r\n        _isExcluded[address(0x000000000000000000000000000000000000dEaD)] = true;\r\n        _isExcluded[address(0x0000000000000000000000000000000000000369)] = true;\r\n\r\n        /// exclude These contracts from maxTxAmount\r\n        _isExcluded[address(0)] = true;\r\n        _isExcluded[address(0x000000000000000000000000000000000000dEaD)] = true;\r\n        _isExcluded[address(0x0000000000000000000000000000000000000369)] = true;\r\n\r\n        antiWhale = true;\r\n\r\n        emit Transfer(address(0), owner(), _tTotal);\r\n        \r\n    }\r\n\r\n    ////////    ERC20 Token functions    ////////\r\n\r\n    /// @notice token name\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /// @notice token symbol\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /// @notice token decimals\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /// @notice uses \"override\" to return value from _tTotal (tSpace)\r\n    function totalSupply() public view override (IERC20Upgradeable) returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    /// @notice uses \"override\" - returns tOwned amounts for excluded addresses and rOwned amounts for all others\r\n    function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {\r\n        // if account is excluded, return balance in tSpace\r\n        if (_isExcluded[account]) {\r\n            return _tOwned[account];\r\n        } else {\r\n            // if account is NOT excluded, return balance in rSpace\r\n            return rBalanceOf(account);\r\n        }\r\n    }\r\n\r\n    /// @notice uses \"override\" to call the _transfer function\r\n    function transfer(address recipient, uint256 amount) public override (IERC20Upgradeable) returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /// @notice uses \"override\" and calls the  _transfer and the _approve functions\r\n    function transferFrom(\r\n        address sender, \r\n        address recipient, \r\n        uint256 amount\r\n        ) \r\n        public override (IERC20Upgradeable) returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount);\r\n        return true;\r\n    }\r\n\r\n    /// @notice uses \"override\" and returns the value from the _allowances function\r\n    function allowance(address owner, address spender) public view override (IERC20Upgradeable) returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /// @notice uses \"override\" and returns the custom _approve function\r\n    function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /// @notice uses \"override\" and calls the _approve function\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /// @notice uses \"override\" and calls the _approve function\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] - subtractedValue);\r\n        return true;\r\n    }\r\n\r\n    /////////////////////////////////////////////////////\r\n    ////    METH token-specific custom Functions     ////\r\n    /////////////////////////////////////////////////////\r\n\r\n\r\n    function setAntiWhaleStatus(bool _status) external onlyOwner {\r\n        antiWhale = _status;\r\n    }\r\n\r\n\r\n    /**\r\n    /// @notice checks if address is DEX-related smart contract\r\n    */\r\n    bytes4 private constant SELECTOR = bytes4(keccak256(\"factory()\"));\r\n\r\n    function isRouter(address _address) internal view returns (bool) {\r\n        (bool success, bytes memory data) = _address.staticcall(abi.encodeWithSelector(SELECTOR));\r\n        return success && data.length > 0;\r\n    }\r\n\r\n    /**\r\n    /// @notice as address as being excluded from Max Tx (usually DEX)\r\n    /// IMPORTANT: once an address is marked excluded it becomes PERMANENTLY excluded\r\n    */\r\n    function excludeFromMaxTx(address account) private {\r\n        require(!_isExcludedFromMaxTx[account], \"Account is already excluded\");\r\n        _isExcludedFromMaxTx[account] = true;\r\n    }\r\n\r\n    /**\r\n    /// @notice marks an address as being excluded from rewards (usually DEX)\r\n    /// and then adds the address the excluded address array\r\n    /// IMPORTANT: once an address is marked excluded it becomes PERMANENTLY excluded\r\n    */\r\n    function excludeAddress(address account) private {\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n\r\n        /// if address is not a null address..\r\n        if (_rOwned[account] > 0) {\r\n            /// then set tOwned value for account to be value based on \r\n            /// caling the rBalanceOf() function\r\n            _tOwned[account] = rBalanceOf(account);\r\n        }\r\n\r\n        /// also set address as excluded\r\n        _isExcluded[account] = true;\r\n        /// also add address to the array of excluded addresses\r\n        _excluded.push(account);\r\n    }\r\n\r\n    /**\r\n    /// @notice Used by the standard ERC20 \"balanceOf()\" function\r\n    /// returns the rAmount divided by the current rate value. \r\n    */\r\n    function rBalanceOf(address account) public view returns (uint256) {\r\n        uint256 rOwned = _rOwned[account];\r\n        \r\n        /// first check that rOwned balance is less than the rTotal\r\n        require(rOwned <= _rTotal, \"Amount must be less than total reflections\");\r\n        /// set the currentRate value from the _getRate function\r\n        uint256 currentRate = _getRate();\r\n        if (rOwned == 0) {\r\n            return 0;\r\n        } else {\r\n            /// displays the rOwned amount expressed in tSpace\r\n            return rOwned / currentRate;\r\n        }\r\n    }\r\n\r\n\r\n    /// @notice function used by the getValues function\r\n    function _getRate() public view returns (uint256) {\r\n        /// retrieve values from _getCurrentSupply function\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        /// rsupply divided by tsupply\r\n        return rSupply / tSupply;\r\n    }\r\n\r\n    /// @notice used by the _getRate function to return two values: rSupply and tSupply\r\n    function _getCurrentSupply() public view returns (uint256, uint256) {\r\n        /// firstly set the values to _rTotal and _tTotal\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n\r\n        /// loop for each excluded address:          \r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            /// set rSupply to be rSupply minus excluded _rOwned value        \r\n            rSupply = rSupply - _rOwned[_excluded[i]];\r\n            /// set tSupply to be tSupply minus excluded _tOwned value    \r\n            tSupply = tSupply - _tOwned[_excluded[i]];\r\n        }\r\n\r\n        return (rSupply, tSupply);\r\n    }\r\n\r\n    /// @notice CUSTOM approve function to override ERC20 approve function\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) private {\r\n\r\n        /// check that owner and spender are not 0 addresses\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        /// adds the amount to the owner->spender _allowances mapping\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n\r\n    bool private mutex = false;\r\n\r\n    /// @notice CUSTOM transfer function to override ERC20 transfer function\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n\r\n        // re-entrancy protection\r\n        require(mutex == false);\r\n        mutex = true;\r\n\r\n        /// checks all inputs are greater than 0\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n\r\n        /// checks if the \"from\" address or the \"to\" address is a V2 Router\r\n        /// If it is, and it's not already in the  _isExcluded and _isExcludedFromMaxTx arrays,\r\n        /// then it should be added.\r\n\r\n        if (\r\n            isRouter(from) == true && \r\n            !_isExcludedFromMaxTx[from] &&\r\n            !_isExcluded[from]\r\n            ) {\r\n                excludeFromMaxTx(from);\r\n                excludeAddress(from);\r\n        }\r\n\r\n        if (\r\n            isRouter(to) == true && \r\n            !_isExcludedFromMaxTx[to] &&\r\n            !_isExcluded[to]\r\n            ) {\r\n                excludeFromMaxTx(to);\r\n                excludeAddress(to);\r\n        }\r\n\r\n        /// checks if contract owner is either the \"from\" or the \"to\" address\r\n        if (from != owner() && to != owner()) {\r\n            /**\r\n            /// assuming neither addresses are owner, \r\n            /// then if the from AND to addresses are NOT excluded from MAX Tx\r\n            */\r\n            if (!_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to]) {\r\n                /// check amount is less than maxTxAmount\r\n                require(amount <= maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\");\r\n            }\r\n        }\r\n\r\n        /// checks if from AND to addresses are NOT owner\r\n        if (from != owner() && to != owner()) {\r\n            /**\r\n            /// assuming neither addresses are owner...\r\n            /// then if the from and to addresses are not excluded\r\n            */\r\n            if (!_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to]) {\r\n                /// check amount is less than maxTxAmount\r\n                require(amount <= maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\");\r\n            }\r\n        }\r\n\r\n        /**\r\n        /// transfer amount, by calling the _tokenTransfer function. It will also pass in takeFee boolean\r\n        /// (part of custom \"_transfer\" function)\r\n        */    \r\n        _tokenTransfer(from, to, amount);\r\n\r\n        mutex = false;\r\n    }\r\n\r\n\r\n    /// @notice CUSTOM token transfer function called by _transfer()\r\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\r\n\r\n        /// SENDER EXCLUDED ADDRESS - (Token buy)\r\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\r\n             _transferFromExcluded(sender, recipient, amount);\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////\r\n        /// RECEIVER EXCLUDED ADDRESS - (Token sell)\r\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferToExcluded(sender, recipient, amount);\r\n        ///////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /// BOTH SENDER AND RECEIVER ARE EXCLUDED ADDRESSES\r\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\r\n             _transferBothExcluded(sender, recipient, amount);\r\n\r\n\r\n        /// STANDARD TRANSFER  (Wallet-to-Wallet)\r\n        } else {\r\n            _transferStandard(sender, recipient, amount);\r\n        }\r\n    }\r\n\r\n\r\n    /// @notice struct used for transfer functions\r\n    struct TransferData {\r\n        uint256 tAmountSent;\r\n        uint256 rAmountSent;\r\n        uint256 totalBuyTaxBps;\r\n        uint256 totalSellTaxBps;\r\n        uint256 tBuyFeeTotal;\r\n        uint256 rBuyFeeTotal;\r\n        uint256 tSellFeeTotal;\r\n        uint256 rSellFeeTotal;\r\n        uint256 reflectedAmount;\r\n    }\r\n\r\n    event TransferToExcluded(uint256 amountSent, uint256 amountReceived);\r\n\r\n    /// @notice allow holder to obtain the max value they can sell in a single transaction\r\n    function getTenPercentOfBalance() public view returns(uint256) {\r\n        return (balanceOf(msg.sender) / 10);\r\n    }\r\n\r\n\r\n    /// @notice RECIPIENT excluded (usually a token sell)\r\n    function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        TransferData memory data;\r\n\r\n        // Permanent - require that seller can only ever sell a maximum of 10% of their balance in a single transaction\r\n        require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\");\r\n\r\n\r\n        // amount sent from excluded address\r\n        data.tAmountSent = tAmount;\r\n        data.rAmountSent = tAmount * _getRate();\r\n\r\n        data.totalSellTaxBps = 0;\r\n\r\n        // TOTAL fee as token amount expressed in wei\r\n        data.tSellFeeTotal = (tAmount * data.totalSellTaxBps) / 10000;\r\n        data.rSellFeeTotal = data.tSellFeeTotal * _getRate();\r\n\r\n        // fee amount available for reflection, expressed in rSpace\r\n        if (data.rSellFeeTotal > 0 ) {\r\n            data.reflectedAmount = data.rSellFeeTotal;\r\n        }\r\n\r\n\r\n        // Now distribute fees and amounts //\r\n\r\n        /// rOwned values reduced for the SENDER by the FULL amount\r\n        _rOwned[sender] -= data.rAmountSent;\r\n\r\n        /// tOwned and rOwned value updated for the recipient (non-excluded address) increased by the amount minus the fee\r\n        _tOwned[recipient] += (data.tAmountSent - data.tSellFeeTotal);\r\n        _rOwned[recipient] += (data.rAmountSent - data.rSellFeeTotal);\r\n\r\n        // now reflect the remainder to token holders by subtracting from rTotal\r\n        _rTotal -= data.reflectedAmount;\r\n\r\n        // emit Transfer(sender, recipient, tAmountSent);\r\n        emit Transfer(sender, recipient, (data.tAmountSent - data.tSellFeeTotal));\r\n\r\n        emit TransferToExcluded(\r\n            data.tAmountSent,\r\n            (data.tAmountSent - data.tSellFeeTotal)\r\n            );\r\n    }\r\n\r\n    event TransferFromExcluded(uint256 amountSent, uint256 amountReceived);\r\n\r\n    /// @notice SENDER excluded (usually a token buy)\r\n    function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        TransferData memory data;\r\n\r\n        // temporary antiwhale measure during initial launch\r\n        if(antiWhale == true) {\r\n            require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\");\r\n        }\r\n\r\n        // amount sent from excluded address\r\n        data.tAmountSent = tAmount;\r\n        data.rAmountSent = tAmount * _getRate();\r\n\r\n        // retrieve all values that will be relevant \r\n        data.totalBuyTaxBps = 0;\r\n\r\n        // TOTAL fee as token amount expressed in wei\r\n        data.tBuyFeeTotal = (tAmount * data.totalBuyTaxBps) / 10000;\r\n        data.rBuyFeeTotal = data.tBuyFeeTotal * _getRate();\r\n\r\n        // fee amount available for reflection, expressed in rSpace\r\n        if (\r\n            data.rBuyFeeTotal > 0) {\r\n            data.reflectedAmount = data.rBuyFeeTotal;\r\n        }\r\n\r\n        // Now distribute fees and amounts //\r\n\r\n        /// both tOwned AND rOwned values reduced for the SENDER by the FULL amount\r\n        _tOwned[sender] -= data.tAmountSent;\r\n        _rOwned[sender] -= data.rAmountSent;\r\n\r\n        /// rOwned value updated for the recipient (non-excluded address) increased by the amount minus the fee\r\n        _rOwned[recipient] += (data.rAmountSent - data.rBuyFeeTotal);\r\n\r\n        // now reflect the remainder to token holders by subtracting from rTotal\r\n        _rTotal -= data.reflectedAmount;\r\n\r\n        // emit Transfer(sender, recipient, tAmountSent);\r\n        emit Transfer(sender, recipient, (data.tAmountSent - data.tBuyFeeTotal));\r\n        \r\n        emit TransferFromExcluded(\r\n            data.tAmountSent,\r\n            (data.tAmountSent - data.tBuyFeeTotal)\r\n            );\r\n    }\r\n\r\n    event TransferBothExcluded(uint256 amountSent, uint256 amountReceived);\r\n\r\n\r\n\r\n    /// @notice both excluded (token transfer from DEX to DEX) - no fees applied\r\n    function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        TransferData memory data;\r\n        // retrieve all values that will be relevant \r\n\r\n        // amount sent from excluded address\r\n        data.tAmountSent = tAmount;\r\n        data.rAmountSent = tAmount * _getRate();\r\n\r\n        /// both tOwned AND rOwned values reduced for the SENDER by the FULL amount\r\n        _tOwned[sender] -= data.tAmountSent;\r\n        _rOwned[sender] -= data.rAmountSent;\r\n\r\n        /// both tOwned AND rOwned values are updated for recipient\r\n        _tOwned[recipient] += data.tAmountSent;\r\n        _rOwned[recipient] += data.rAmountSent;\r\n\r\n        // emit Transfer(sender, recipient, tAmountSent);\r\n        emit Transfer(sender, recipient, data.tAmountSent);\r\n\r\n        emit TransferBothExcluded(\r\n            data.tAmountSent,\r\n            data.tAmountSent // same as received amount\r\n            );\r\n    }\r\n\r\n    event TransferStandard(uint256 amountSent, uint256 amountReceived);\r\n\r\n\r\n\r\n    /// @notice standard transfer (wallet to wallet)\r\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\r\n        TransferData memory data;\r\n        // retrieve all values that will be relevant \r\n\r\n        // you can never leave METH!\r\n        require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\");\r\n\r\n        // amount sent from excluded address\r\n        data.tAmountSent = tAmount;\r\n        data.rAmountSent = tAmount * _getRate();      \r\n\r\n        // distribution //\r\n\r\n        /// rOwned value reduced for the SENDER by the FULL amount\r\n        _rOwned[sender] -= data.rAmountSent;\r\n\r\n        // rOwned value increased for the RECEIVER, by rAmount minus the grill fee\r\n        _rOwned[recipient] += data.rAmountSent;\r\n\r\n        emit Transfer(sender, recipient, (data.tAmountSent));\r\n\r\n        emit TransferStandard(\r\n            data.tAmountSent,\r\n            data.tAmountSent\r\n            );\r\n    }\r\n\r\n\r\n    /// @notice checks if address is excluded from Max Tx\r\n    function isExcludedFromMaxTx(address account) public view returns (bool) {\r\n        return _isExcludedFromMaxTx[account];\r\n    }\r\n\r\n    /// @notice checks if address is excluded from reflection rewards\r\n    function isExcluded(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n    \r\n/////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // Reflection-related values for potential API\r\n\r\n    /// @notice verify account balance in both tSpace and rSpace\r\n    function viewTBalanceRBalance(address _address) public view returns (uint256, uint256) {\r\n        uint256 tBalance = _tOwned[_address];\r\n        uint256 rBalance = _rOwned[_address];\r\n        return(tBalance, rBalance);\r\n    }\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"METH_unflattned.sol": {
				"METH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSent",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "TransferBothExcluded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSent",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "TransferFromExcluded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSent",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "TransferStandard",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSent",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "TransferToExcluded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_excluded",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_getCurrentSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_getRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_rTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_tTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antiWhale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTenPercentOfBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcluded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromMaxTx",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "rBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "setAntiWhaleStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "viewTBalanceRBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "METH Token developer team (info@crystalmeth.xyz)",
						"details": "Inherits multiple OpenZeppelin standards ",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "An ERC20 contract named METH",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"METH_unflattned.sol\":3954:25611  contract METH is Initializable, IERC20Upgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n    /* \"METH_unflattned.sol\":14379:14405  bool private mutex = false */\n  0x72\n  dup1\n  sload\n  not(0xff00)\n  and\n  swap1\n  sstore\n    /* \"METH_unflattned.sol\":3954:25611  contract METH is Initializable, IERC20Upgradeable, OwnableUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"METH_unflattned.sol\":3954:25611  contract METH is Initializable, IERC20Upgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8129fc1c\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xaf465a27\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xaf465a27\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcba0e996\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xa457c2d7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xaae5ddd2\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x94e10784\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x97a9d560\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8129fc1c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x83f24c09\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8c0b5e22\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x4d09deb3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x658c27a9\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x658c27a9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x80da2287\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x4d09deb3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4dacf3f5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5319e78f\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x23b872dd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x45e0b9d4\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"METH_unflattned.sol\":7284:7367  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"METH_unflattned.sol\":9336:9517  function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_4:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":1272:1286   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1265:1287   */\n      iszero\n        /* \"#utility.yul\":1247:1288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1235:1237   */\n      0x20\n        /* \"#utility.yul\":1220:1238   */\n      add\n        /* \"METH_unflattned.sol\":9336:9517  function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n      tag_40\n        /* \"#utility.yul\":1107:1294   */\n      jump\n        /* \"METH_unflattned.sol\":7694:7809  function totalSupply() public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_5:\n        /* \"METH_unflattned.sol\":7794:7801  _tTotal */\n      sload(0x6f)\n        /* \"METH_unflattned.sol\":7694:7809  function totalSupply() public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH_unflattned.sol\":7694:7809  function totalSupply() public view override (IERC20Upgradeable) returns (uint256) {... */\n      tag_40\n        /* \"#utility.yul\":1299:1476   */\n      jump\n        /* \"METH_unflattned.sol\":8662:8998  function transferFrom(... */\n    tag_6:\n      tag_42\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"METH_unflattned.sol\":7532:7615  function decimals() public view returns (uint8) {... */\n    tag_7:\n        /* \"METH_unflattned.sol\":7598:7607  _decimals */\n      sload(0x67)\n        /* \"METH_unflattned.sol\":7532:7615  function decimals() public view returns (uint8) {... */\n      mload(0x40)\n        /* \"METH_unflattned.sol\":7598:7607  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1956:1992   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1944:1946   */\n      0x20\n        /* \"#utility.yul\":1929:1947   */\n      add\n        /* \"METH_unflattned.sol\":7532:7615  function decimals() public view returns (uint8) {... */\n      tag_40\n        /* \"#utility.yul\":1814:1998   */\n      jump\n        /* \"METH_unflattned.sol\":9590:9805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_42\n      tag_62\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"METH_unflattned.sol\":5294:5316  uint256 public _rTotal */\n    tag_9:\n      tag_48\n      sload(0x70)\n      dup2\n      jump\n        /* \"METH_unflattned.sol\":4179:4205  address[] public _excluded */\n    tag_10:\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2352:2384   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2334:2385   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2322:2324   */\n      0x20\n        /* \"#utility.yul\":2307:2325   */\n      add\n        /* \"METH_unflattned.sol\":4179:4205  address[] public _excluded */\n      tag_40\n        /* \"#utility.yul\":2188:2391   */\n      jump\n        /* \"METH_unflattned.sol\":5395:5416  bool public antiWhale */\n    tag_11:\n      sload(0x72)\n      tag_42\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"METH_unflattned.sol\":12139:12715  function rBalanceOf(address account) public view returns (uint256) {... */\n    tag_12:\n      tag_48\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"METH_unflattned.sol\":24717:24845  function isExcludedFromMaxTx(address account) public view returns (bool) {... */\n    tag_13:\n      tag_42\n      tag_83\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":24808:24837  _isExcludedFromMaxTx[account] */\n      and\n        /* \"METH_unflattned.sol\":24784:24788  bool */\n      0x00\n        /* \"METH_unflattned.sol\":24808:24837  _isExcludedFromMaxTx[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":24808:24828  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":24808:24837  _isExcludedFromMaxTx[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"METH_unflattned.sol\":24717:24845  function isExcludedFromMaxTx(address account) public view returns (bool) {... */\n      jump\n        /* \"METH_unflattned.sol\":7932:8310  function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_14:\n      tag_48\n      tag_87\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"METH_unflattned.sol\":25271:25497  function viewTBalanceRBalance(address _address) public view returns (uint256, uint256) {... */\n    tag_16:\n      tag_92\n      tag_93\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":25388:25405  _tOwned[_address] */\n      and\n        /* \"METH_unflattned.sol\":25340:25347  uint256 */\n      0x00\n        /* \"METH_unflattned.sol\":25388:25405  _tOwned[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":25388:25395  _tOwned */\n      0x69\n        /* \"METH_unflattned.sol\":25388:25405  _tOwned[_address] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":25435:25442  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":25435:25452  _rOwned[_address] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":25388:25405  _tOwned[_address] */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":25271:25497  function viewTBalanceRBalance(address _address) public view returns (uint256, uint256) {... */\n      jump\n    tag_92:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2761:2786   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2802:2820   */\n      dup4\n      add\n        /* \"#utility.yul\":2795:2829   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"METH_unflattned.sol\":25271:25497  function viewTBalanceRBalance(address _address) public view returns (uint256, uint256) {... */\n      tag_40\n        /* \"#utility.yul\":2587:2835   */\n      jump\n        /* \"METH_unflattned.sol\":5762:7195  function initialize(... */\n    tag_17:\n      tag_90\n      tag_98\n      jump\t// in\n        /* \"METH_unflattned.sol\":10292:10391  function setAntiWhaleStatus(bool _status) external onlyOwner {... */\n    tag_18:\n      tag_90\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"METH_unflattned.sol\":5360:5386  uint256 public maxTxAmount */\n    tag_19:\n      tag_48\n      sload(0x71)\n      dup2\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n      jump(tag_68)\n        /* \"METH_unflattned.sol\":12782:13043  function _getRate() public view returns (uint256) {... */\n    tag_21:\n      tag_48\n      tag_110\n      jump\t// in\n        /* \"METH_unflattned.sol\":7405:7492  function symbol() public view returns (string memory) {... */\n    tag_22:\n      tag_38\n      tag_113\n      jump\t// in\n        /* \"METH_unflattned.sol\":13140:13779  function _getCurrentSupply() public view returns (uint256, uint256) {... */\n    tag_23:\n      tag_92\n      tag_116\n      jump\t// in\n        /* \"METH_unflattned.sol\":9878:10103  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_24:\n      tag_42\n      tag_119\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"METH_unflattned.sol\":8382:8569  function transfer(address recipient, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_25:\n      tag_42\n      tag_123\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"METH_unflattned.sol\":18586:18703  function getTenPercentOfBalance() public view returns(uint256) {... */\n    tag_26:\n      tag_48\n      tag_127\n      jump\t// in\n        /* \"METH_unflattned.sol\":5102:5124  uint256 public _tTotal */\n    tag_27:\n      tag_48\n      sload(0x6f)\n      dup2\n      jump\n        /* \"METH_unflattned.sol\":24924:25034  function isExcluded(address account) public view returns (bool) {... */\n    tag_28:\n      tag_42\n      tag_133\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":25006:25026  _isExcluded[account] */\n      and\n        /* \"METH_unflattned.sol\":24982:24986  bool */\n      0x00\n        /* \"METH_unflattned.sol\":25006:25026  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":25006:25017  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":25006:25026  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"METH_unflattned.sol\":24924:25034  function isExcluded(address account) public view returns (bool) {... */\n      jump\n        /* \"METH_unflattned.sol\":9091:9254  function allowance(address owner, address spender) public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_29:\n      tag_48\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":9219:9237  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"METH_unflattned.sol\":9192:9199  uint256 */\n      0x00\n        /* \"METH_unflattned.sol\":9219:9237  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":9219:9230  _allowances */\n      0x6b\n        /* \"METH_unflattned.sol\":9219:9237  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"METH_unflattned.sol\":9219:9246  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"METH_unflattned.sol\":9091:9254  function allowance(address owner, address spender) public view override (IERC20Upgradeable) returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2335:2533  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_90\n      tag_142\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"METH_unflattned.sol\":7284:7367  function name() public view returns (string memory) {... */\n    tag_39:\n        /* \"METH_unflattned.sol\":7321:7334  string memory */\n      0x60\n        /* \"METH_unflattned.sol\":7354:7359  _name */\n      0x65\n        /* \"METH_unflattned.sol\":7347:7359  return _name */\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_146\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"METH_unflattned.sol\":7284:7367  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"METH_unflattned.sol\":9336:9517  function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_45:\n        /* \"METH_unflattned.sol\":9431:9435  bool */\n      0x00\n        /* \"METH_unflattned.sol\":9448:9487  _approve(_msgSender(), spender, amount) */\n      tag_152\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"METH_unflattned.sol\":9471:9478  spender */\n      dup5\n        /* \"METH_unflattned.sol\":9480:9486  amount */\n      dup5\n        /* \"METH_unflattned.sol\":9448:9456  _approve */\n      tag_155\n        /* \"METH_unflattned.sol\":9448:9487  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_152:\n      pop\n        /* \"METH_unflattned.sol\":9505:9509  true */\n      0x01\n        /* \"METH_unflattned.sol\":9336:9517  function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_151:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"METH_unflattned.sol\":8662:8998  function transferFrom(... */\n    tag_55:\n        /* \"METH_unflattned.sol\":8830:8834  bool */\n      0x00\n        /* \"METH_unflattned.sol\":8847:8883  _transfer(sender, recipient, amount) */\n      tag_158\n        /* \"METH_unflattned.sol\":8857:8863  sender */\n      dup5\n        /* \"METH_unflattned.sol\":8865:8874  recipient */\n      dup5\n        /* \"METH_unflattned.sol\":8876:8882  amount */\n      dup5\n        /* \"METH_unflattned.sol\":8847:8856  _transfer */\n      tag_159\n        /* \"METH_unflattned.sol\":8847:8883  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":8925:8944  _allowances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":8925:8936  _allowances */\n      0x6b\n        /* \"METH_unflattned.sol\":8925:8944  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"METH_unflattned.sol\":8925:8958  _allowances[sender][_msgSender()] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":8894:8968  _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount) */\n      tag_160\n      swap2\n        /* \"METH_unflattned.sol\":8903:8909  sender */\n      dup7\n      swap2\n        /* \"METH_unflattned.sol\":8925:8967  _allowances[sender][_msgSender()] - amount */\n      tag_163\n      swap1\n        /* \"METH_unflattned.sol\":8961:8967  amount */\n      dup7\n      swap1\n        /* \"METH_unflattned.sol\":8925:8967  _allowances[sender][_msgSender()] - amount */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"METH_unflattned.sol\":8894:8902  _approve */\n      tag_155\n        /* \"METH_unflattned.sol\":8894:8968  _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount) */\n      jump\t// in\n    tag_160:\n      pop\n        /* \"METH_unflattned.sol\":8986:8990  true */\n      0x01\n        /* \"METH_unflattned.sol\":8662:8998  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH_unflattned.sol\":9590:9805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"METH_unflattned.sol\":9678:9682  bool */\n      0x00\n        /* \"METH_unflattned.sol\":9727:9752  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":9727:9738  _allowances */\n      0x6b\n        /* \"METH_unflattned.sol\":9727:9752  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":9727:9761  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":9678:9682  bool */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":9695:9775  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_152\n      swap2\n        /* \"METH_unflattned.sol\":9718:9725  spender */\n      dup6\n      swap1\n        /* \"METH_unflattned.sol\":9727:9774  _allowances[_msgSender()][spender] + addedValue */\n      tag_163\n      swap1\n        /* \"METH_unflattned.sol\":9764:9774  addedValue */\n      dup7\n      swap1\n        /* \"METH_unflattned.sol\":9727:9774  _allowances[_msgSender()][spender] + addedValue */\n      tag_171\n      jump\t// in\n        /* \"METH_unflattned.sol\":4179:4205  address[] public _excluded */\n    tag_71:\n      0x68\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"METH_unflattned.sol\":12139:12715  function rBalanceOf(address account) public view returns (uint256) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":12234:12250  _rOwned[account] */\n      dup2\n      and\n        /* \"METH_unflattned.sol\":12197:12204  uint256 */\n      0x00\n        /* \"METH_unflattned.sol\":12234:12250  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":12234:12241  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":12234:12250  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":12358:12365  _rTotal */\n      sload(0x70)\n        /* \"METH_unflattned.sol\":12348:12365  rOwned <= _rTotal */\n      dup2\n      gt\n      iszero\n        /* \"METH_unflattned.sol\":12340:12412  require(rOwned <= _rTotal, \"Amount must be less than total reflections\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4365:4367   */\n      0x20\n        /* \"METH_unflattned.sol\":12340:12412  require(rOwned <= _rTotal, \"Amount must be less than total reflections\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4347:4368   */\n      mstore\n        /* \"#utility.yul\":4404:4406   */\n      0x2a\n        /* \"#utility.yul\":4384:4402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4377:4407   */\n      mstore\n        /* \"#utility.yul\":4443:4477   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":4423:4441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4416:4478   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":4494:4512   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4487:4527   */\n      mstore\n        /* \"#utility.yul\":4544:4563   */\n      0x84\n      add\n        /* \"METH_unflattned.sol\":12340:12412  require(rOwned <= _rTotal, \"Amount must be less than total reflections\") */\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"METH_unflattned.sol\":12489:12508  uint256 currentRate */\n      0x00\n        /* \"METH_unflattned.sol\":12511:12521  _getRate() */\n      tag_178\n        /* \"METH_unflattned.sol\":12511:12519  _getRate */\n      tag_110\n        /* \"METH_unflattned.sol\":12511:12521  _getRate() */\n      jump\t// in\n    tag_178:\n        /* \"METH_unflattned.sol\":12489:12521  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"METH_unflattned.sol\":12536:12542  rOwned */\n      dup2\n        /* \"METH_unflattned.sol\":12546:12547  0 */\n      0x00\n        /* \"METH_unflattned.sol\":12536:12547  rOwned == 0 */\n      sub\n        /* \"METH_unflattned.sol\":12532:12708  if (rOwned == 0) {... */\n      tag_179\n      jumpi\n      pop\n        /* \"METH_unflattned.sol\":12571:12572  0 */\n      0x00\n      swap4\n        /* \"METH_unflattned.sol\":12139:12715  function rBalanceOf(address account) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH_unflattned.sol\":12532:12708  if (rOwned == 0) {... */\n    tag_179:\n        /* \"METH_unflattned.sol\":12676:12696  rOwned / currentRate */\n      tag_181\n        /* \"METH_unflattned.sol\":12685:12696  currentRate */\n      dup2\n        /* \"METH_unflattned.sol\":12676:12682  rOwned */\n      dup4\n        /* \"METH_unflattned.sol\":12676:12696  rOwned / currentRate */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"METH_unflattned.sol\":12669:12696  return rOwned / currentRate */\n      swap5\n        /* \"METH_unflattned.sol\":12139:12715  function rBalanceOf(address account) public view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH_unflattned.sol\":7932:8310  function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":8103:8123  _isExcluded[account] */\n      dup2\n      and\n        /* \"METH_unflattned.sol\":8018:8025  uint256 */\n      0x00\n        /* \"METH_unflattned.sol\":8103:8123  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":8103:8114  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":8103:8123  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":8099:8303  if (_isExcluded[account]) {... */\n      iszero\n      tag_185\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":8147:8163  _tOwned[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":8147:8154  _tOwned */\n      0x69\n        /* \"METH_unflattned.sol\":8147:8163  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"METH_unflattned.sol\":7932:8310  function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {... */\n      jump\t// out\n        /* \"METH_unflattned.sol\":8099:8303  if (_isExcluded[account]) {... */\n    tag_185:\n        /* \"METH_unflattned.sol\":8272:8291  rBalanceOf(account) */\n      tag_151\n        /* \"METH_unflattned.sol\":8283:8290  account */\n      dup3\n        /* \"METH_unflattned.sol\":8272:8282  rBalanceOf */\n      tag_80\n        /* \"METH_unflattned.sol\":8272:8291  rBalanceOf(account) */\n      jump\t// in\n        /* \"METH_unflattned.sol\":8099:8303  if (_isExcluded[account]) {... */\n    tag_186:\n        /* \"METH_unflattned.sol\":7932:8310  function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_189\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_190\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2149:2179  _transferOwnership(address(0)) */\n      tag_192\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2176:2177  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2149:2167  _transferOwnership */\n      tag_193\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2149:2179  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_192:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"METH_unflattned.sol\":5762:7195  function initialize(... */\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_200\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_200\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_200:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5033:5035   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5015:5036   */\n      mstore\n        /* \"#utility.yul\":5072:5074   */\n      0x2e\n        /* \"#utility.yul\":5052:5070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5045:5075   */\n      mstore\n        /* \"#utility.yul\":5111:5145   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":5091:5109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5084:5146   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5162:5180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5155:5199   */\n      mstore\n        /* \"#utility.yul\":5216:5235   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_176\n        /* \"#utility.yul\":4831:5241   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_201:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_204\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_204:\n        /* \"METH_unflattned.sol\":5940:5975  OwnableUpgradeable.__Ownable_init() */\n      tag_206\n        /* \"METH_unflattned.sol\":5940:5973  OwnableUpgradeable.__Ownable_init */\n      tag_207\n        /* \"METH_unflattned.sol\":5940:5975  OwnableUpgradeable.__Ownable_init() */\n      jump\t// in\n    tag_206:\n        /* \"METH_unflattned.sol\":6020:6036  _name = \"MTESTF\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x06\n      dup2\n      mstore\n      shl(0xd1, 0x26aa22a9aa23)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"METH_unflattned.sol\":6020:6025  _name */\n      0x65\n      swap1\n        /* \"METH_unflattned.sol\":6020:6036  _name = \"MTESTF\" */\n      tag_208\n      swap1\n        /* \"METH_unflattned.sol\":6020:6025  _name */\n      dup3\n        /* \"METH_unflattned.sol\":6020:6036  _name = \"MTESTF\" */\n      tag_209\n      jump\t// in\n    tag_208:\n      pop\n        /* \"METH_unflattned.sol\":6047:6065  _symbol = \"MTESTF\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x06\n      dup2\n      mstore\n      shl(0xd1, 0x26aa22a9aa23)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"METH_unflattned.sol\":6047:6054  _symbol */\n      0x66\n      swap1\n        /* \"METH_unflattned.sol\":6047:6065  _symbol = \"MTESTF\" */\n      tag_210\n      swap1\n        /* \"METH_unflattned.sol\":6047:6054  _symbol */\n      dup3\n        /* \"METH_unflattned.sol\":6047:6065  _symbol = \"MTESTF\" */\n      tag_209\n      jump\t// in\n    tag_210:\n      pop\n        /* \"METH_unflattned.sol\":6076:6085  _decimals */\n      0x67\n        /* \"METH_unflattned.sol\":6076:6090  _decimals = 18 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"METH_unflattned.sol\":6088:6090  18 */\n      0x12\n        /* \"METH_unflattned.sol\":6076:6090  _decimals = 18 */\n      or\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":6199:6228  10000000000000000000000000000 */\n      0x204fce5e3e25026110000000\n        /* \"METH_unflattned.sol\":6189:6196  _tTotal */\n      0x6f\n        /* \"METH_unflattned.sol\":6189:6228  _tTotal = 10000000000000000000000000000 */\n      dup2\n      swap1\n      sstore\n      not(0x00)\n        /* \"METH_unflattned.sol\":6273:6277  _MAX */\n      0x6e\n        /* \"METH_unflattned.sol\":6273:6291  _MAX = ~uint256(0) */\n      dup2\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":6370:6384  _MAX % _tTotal */\n      tag_211\n      swap2\n        /* \"METH_unflattned.sol\":6199:6228  10000000000000000000000000000 */\n      swap1\n        /* \"METH_unflattned.sol\":6370:6384  _MAX % _tTotal */\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"METH_unflattned.sol\":6362:6366  _MAX */\n      sload(0x6e)\n        /* \"METH_unflattned.sol\":6362:6385  _MAX - (_MAX % _tTotal) */\n      tag_213\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_213:\n        /* \"METH_unflattned.sol\":6351:6358  _rTotal */\n      0x70\n        /* \"METH_unflattned.sol\":6351:6386  _rTotal = (_MAX - (_MAX % _tTotal)) */\n      dup2\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":6502:6509  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":6502:6518  _rOwned[owner()] */\n      0x00\n        /* \"METH_unflattned.sol\":6510:6517  owner() */\n      tag_214\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"METH_unflattned.sol\":6510:6517  owner() */\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":6502:6518  _rOwned[owner()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"METH_unflattned.sol\":6502:6528  _rOwned[owner()] = _rTotal */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"METH_unflattned.sol\":6556:6563  _tTotal */\n      sload(0x6f)\n        /* \"METH_unflattned.sol\":6542:6553  maxTxAmount */\n      0x71\n        /* \"METH_unflattned.sol\":6542:6563  maxTxAmount = _tTotal */\n      sstore\n        /* \"METH_unflattned.sol\":6637:6648  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":6637:6660  _isExcluded[address(0)] */\n      swap1\n      mstore\n      0x7febd347df14ea35c529e50fb2dd629d4a6226f5ccc893710fb466f8b83823fc\n        /* \"METH_unflattned.sol\":6637:6667  _isExcluded[address(0)] = true */\n      dup1\n      sload\n      not(0xff)\n      swap1\n      dup2\n      and\n        /* \"METH_unflattned.sol\":6663:6667  true */\n      0x01\n        /* \"METH_unflattned.sol\":6637:6667  _isExcluded[address(0)] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"METH_unflattned.sol\":6678:6742  _isExcluded[address(0x000000000000000000000000000000000000dEaD)] */\n      0x8c482e007f935c93984ddf7a647e33ef99566883ffae3563aa616dc14d1632f7\n        /* \"METH_unflattned.sol\":6678:6749  _isExcluded[address(0x000000000000000000000000000000000000dEaD)] = true */\n      dup1\n      sload\n      dup3\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":6760:6824  _isExcluded[address(0x0000000000000000000000000000000000000369)] */\n      0xb6e99d88b536ae7728c4b89ca5a6073cf06fd2059e0aff5b1a4de2c799d9cb96\n        /* \"METH_unflattned.sol\":6760:6831  _isExcluded[address(0x0000000000000000000000000000000000000369)] = true */\n      dup1\n      sload\n      dup3\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":6780:6822  0x0000000000000000000000000000000000000369 */\n      0x0369\n        /* \"METH_unflattned.sol\":7021:7085  _isExcluded[address(0x0000000000000000000000000000000000000369)] */\n      swap1\n      swap3\n      mstore\n        /* \"METH_unflattned.sol\":7105:7114  antiWhale */\n      0x72\n        /* \"METH_unflattned.sol\":7105:7121  antiWhale = true */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":7160:7167  owner() */\n      tag_215\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"METH_unflattned.sol\":7160:7167  owner() */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":7139:7177  Transfer(address(0), owner(), _tTotal) */\n      and\n        /* \"METH_unflattned.sol\":7156:7157  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":7139:7177  Transfer(address(0), owner(), _tTotal) */\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"METH_unflattned.sol\":7169:7176  _tTotal */\n      sload(0x6f)\n        /* \"METH_unflattned.sol\":7139:7177  Transfer(address(0), owner(), _tTotal) */\n      mload(0x40)\n      tag_216\n      swap2\n        /* \"#utility.yul\":1445:1470   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n      swap1\n        /* \"#utility.yul\":1299:1476   */\n      jump\n        /* \"METH_unflattned.sol\":7139:7177  Transfer(address(0), owner(), _tTotal) */\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":1956:1992   */\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":1944:1946   */\n      0x20\n        /* \"#utility.yul\":1929:1947   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"METH_unflattned.sol\":5762:7195  function initialize(... */\n      jump\t// out\n        /* \"METH_unflattned.sol\":10292:10391  function setAntiWhaleStatus(bool _status) external onlyOwner {... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_221\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_190\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_221:\n        /* \"METH_unflattned.sol\":10364:10373  antiWhale */\n      0x72\n        /* \"METH_unflattned.sol\":10364:10383  antiWhale = _status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":10292:10391  function setAntiWhaleStatus(bool _status) external onlyOwner {... */\n      jump\t// out\n        /* \"METH_unflattned.sol\":12782:13043  function _getRate() public view returns (uint256) {... */\n    tag_110:\n        /* \"METH_unflattned.sol\":12823:12830  uint256 */\n      0x00\n        /* \"METH_unflattned.sol\":12905:12920  uint256 rSupply */\n      dup1\n        /* \"METH_unflattned.sol\":12922:12937  uint256 tSupply */\n      0x00\n        /* \"METH_unflattned.sol\":12941:12960  _getCurrentSupply() */\n      tag_225\n        /* \"METH_unflattned.sol\":12941:12958  _getCurrentSupply */\n      tag_116\n        /* \"METH_unflattned.sol\":12941:12960  _getCurrentSupply() */\n      jump\t// in\n    tag_225:\n        /* \"METH_unflattned.sol\":12904:12960  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"METH_unflattned.sol\":13018:13035  rSupply / tSupply */\n      tag_226\n        /* \"METH_unflattned.sol\":12904:12960  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup2\n      dup4\n        /* \"METH_unflattned.sol\":13018:13035  rSupply / tSupply */\n      tag_182\n      jump\t// in\n    tag_226:\n        /* \"METH_unflattned.sol\":13011:13035  return rSupply / tSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"METH_unflattned.sol\":12782:13043  function _getRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"METH_unflattned.sol\":7405:7492  function symbol() public view returns (string memory) {... */\n    tag_113:\n        /* \"METH_unflattned.sol\":7444:7457  string memory */\n      0x60\n        /* \"METH_unflattned.sol\":7477:7484  _symbol */\n      0x66\n        /* \"METH_unflattned.sol\":7470:7484  return _symbol */\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n        /* \"METH_unflattned.sol\":13140:13779  function _getCurrentSupply() public view returns (uint256, uint256) {... */\n    tag_116:\n        /* \"METH_unflattned.sol\":13296:13303  _rTotal */\n      sload(0x70)\n        /* \"METH_unflattned.sol\":13332:13339  _tTotal */\n      sload(0x6f)\n        /* \"METH_unflattned.sol\":13190:13197  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"METH_unflattned.sol\":13407:13734  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_234:\n        /* \"METH_unflattned.sol\":13431:13440  _excluded */\n      0x68\n        /* \"METH_unflattned.sol\":13431:13447  _excluded.length */\n      sload\n        /* \"METH_unflattned.sol\":13427:13447  i < _excluded.length */\n      dup2\n      lt\n        /* \"METH_unflattned.sol\":13407:13734  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"METH_unflattned.sol\":13569:13576  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":13569:13590  _rOwned[_excluded[i]] */\n      0x00\n        /* \"METH_unflattned.sol\":13577:13586  _excluded */\n      0x68\n        /* \"METH_unflattned.sol\":13587:13588  i */\n      dup4\n        /* \"METH_unflattned.sol\":13577:13589  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_238\n      tag_239\n      jump\t// in\n    tag_238:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"METH_unflattned.sol\":13569:13590  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":13559:13590  rSupply - _rOwned[_excluded[i]] */\n      tag_241\n      swap1\n        /* \"METH_unflattned.sol\":13559:13566  rSupply */\n      dup5\n        /* \"METH_unflattned.sol\":13559:13590  rSupply - _rOwned[_excluded[i]] */\n      tag_164\n      jump\t// in\n    tag_241:\n        /* \"METH_unflattned.sol\":13549:13590  rSupply = rSupply - _rOwned[_excluded[i]] */\n      swap3\n      pop\n        /* \"METH_unflattned.sol\":13701:13708  _tOwned */\n      0x69\n        /* \"METH_unflattned.sol\":13701:13722  _tOwned[_excluded[i]] */\n      0x00\n        /* \"METH_unflattned.sol\":13709:13718  _excluded */\n      0x68\n        /* \"METH_unflattned.sol\":13719:13720  i */\n      dup4\n        /* \"METH_unflattned.sol\":13709:13721  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_243\n      tag_239\n      jump\t// in\n    tag_243:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"METH_unflattned.sol\":13701:13722  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":13691:13722  tSupply - _tOwned[_excluded[i]] */\n      tag_245\n      swap1\n        /* \"METH_unflattned.sol\":13691:13698  tSupply */\n      dup4\n        /* \"METH_unflattned.sol\":13691:13722  tSupply - _tOwned[_excluded[i]] */\n      tag_164\n      jump\t// in\n    tag_245:\n        /* \"METH_unflattned.sol\":13681:13722  tSupply = tSupply - _tOwned[_excluded[i]] */\n      swap2\n      pop\n        /* \"METH_unflattned.sol\":13449:13452  i++ */\n      0x01\n      add\n        /* \"METH_unflattned.sol\":13407:13734  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_234)\n    tag_235:\n      pop\n        /* \"METH_unflattned.sol\":13754:13761  rSupply */\n      swap1\n      swap4\n        /* \"METH_unflattned.sol\":13763:13770  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"METH_unflattned.sol\":13140:13779  function _getCurrentSupply() public view returns (uint256, uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"METH_unflattned.sol\":9878:10103  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"METH_unflattned.sol\":9971:9975  bool */\n      0x00\n        /* \"METH_unflattned.sol\":10020:10045  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":10020:10031  _allowances */\n      0x6b\n        /* \"METH_unflattned.sol\":10020:10045  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":10020:10054  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":9971:9975  bool */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":9988:10073  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] - subtractedValue) */\n      tag_152\n      swap2\n        /* \"METH_unflattned.sol\":10011:10018  spender */\n      dup6\n      swap1\n        /* \"METH_unflattned.sol\":10020:10072  _allowances[_msgSender()][spender] - subtractedValue */\n      tag_163\n      swap1\n        /* \"METH_unflattned.sol\":10057:10072  subtractedValue */\n      dup7\n      swap1\n        /* \"METH_unflattned.sol\":10020:10072  _allowances[_msgSender()][spender] - subtractedValue */\n      tag_164\n      jump\t// in\n        /* \"METH_unflattned.sol\":8382:8569  function transfer(address recipient, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_124:\n        /* \"METH_unflattned.sol\":8480:8484  bool */\n      0x00\n        /* \"METH_unflattned.sol\":8497:8539  _transfer(_msgSender(), recipient, amount) */\n      tag_152\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"METH_unflattned.sol\":8521:8530  recipient */\n      dup5\n        /* \"METH_unflattned.sol\":8532:8538  amount */\n      dup5\n        /* \"METH_unflattned.sol\":8497:8506  _transfer */\n      tag_159\n        /* \"METH_unflattned.sol\":8497:8539  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"METH_unflattned.sol\":18586:18703  function getTenPercentOfBalance() public view returns(uint256) {... */\n    tag_127:\n        /* \"METH_unflattned.sol\":18640:18647  uint256 */\n      0x00\n        /* \"METH_unflattned.sol\":18692:18694  10 */\n      0x0a\n        /* \"METH_unflattned.sol\":18668:18689  balanceOf(msg.sender) */\n      tag_255\n        /* \"METH_unflattned.sol\":18678:18688  msg.sender */\n      caller\n        /* \"METH_unflattned.sol\":18668:18677  balanceOf */\n      tag_88\n        /* \"METH_unflattned.sol\":18668:18689  balanceOf(msg.sender) */\n      jump\t// in\n    tag_255:\n        /* \"METH_unflattned.sol\":18668:18694  balanceOf(msg.sender) / 10 */\n      tag_256\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_256:\n        /* \"METH_unflattned.sol\":18660:18695  return (balanceOf(msg.sender) / 10) */\n      swap1\n      pop\n        /* \"METH_unflattned.sol\":18586:18703  function getTenPercentOfBalance() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2335:2533  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_260\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_190\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2423:2445  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8198:8200   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8180:8201   */\n      mstore\n        /* \"#utility.yul\":8237:8239   */\n      0x26\n        /* \"#utility.yul\":8217:8235   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8210:8240   */\n      mstore\n        /* \"#utility.yul\":8276:8310   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8256:8274   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8249:8311   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8327:8345   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8320:8356   */\n      mstore\n        /* \"#utility.yul\":8373:8392   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_176\n        /* \"#utility.yul\":7996:8398   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_262:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2498:2526  _transferOwnership(newOwner) */\n      tag_217\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2517:2525  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2498:2516  _transferOwnership */\n      tag_193\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2498:2526  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"METH_unflattned.sol\":13863:14369  function _approve(... */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":14054:14073  owner != address(0) */\n      dup4\n      and\n        /* \"METH_unflattned.sol\":14046:14114  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8605:8607   */\n      0x20\n        /* \"METH_unflattned.sol\":14046:14114  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8587:8608   */\n      mstore\n        /* \"#utility.yul\":8644:8646   */\n      0x24\n        /* \"#utility.yul\":8624:8642   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8617:8647   */\n      mstore\n        /* \"#utility.yul\":8683:8717   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8663:8681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8656:8718   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8734:8752   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8727:8761   */\n      mstore\n        /* \"#utility.yul\":8778:8797   */\n      0x84\n      add\n        /* \"METH_unflattned.sol\":14046:14114  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_176\n        /* \"#utility.yul\":8403:8803   */\n      jump\n        /* \"METH_unflattned.sol\":14046:14114  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":14133:14154  spender != address(0) */\n      dup3\n      and\n        /* \"METH_unflattned.sol\":14125:14193  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9010:9012   */\n      0x20\n        /* \"METH_unflattned.sol\":14125:14193  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8992:9013   */\n      mstore\n        /* \"#utility.yul\":9049:9051   */\n      0x22\n        /* \"#utility.yul\":9029:9047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9022:9052   */\n      mstore\n        /* \"#utility.yul\":9088:9122   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9068:9086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9061:9123   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":9139:9157   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9132:9164   */\n      mstore\n        /* \"#utility.yul\":9181:9200   */\n      0x84\n      add\n        /* \"METH_unflattned.sol\":14125:14193  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_176\n        /* \"#utility.yul\":8808:9206   */\n      jump\n        /* \"METH_unflattned.sol\":14125:14193  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":14277:14295  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":14277:14288  _allowances */\n      0x6b\n        /* \"METH_unflattned.sol\":14277:14295  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"METH_unflattned.sol\":14277:14304  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"METH_unflattned.sol\":14277:14313  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":14329:14361  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1445:1470   */\n      dup5\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":14329:14361  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH_unflattned.sol\":14329:14361  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH_unflattned.sol\":13863:14369  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH_unflattned.sol\":14492:16997  function _transfer(... */\n    tag_159:\n        /* \"METH_unflattned.sol\":14651:14656  mutex */\n      sload(0x72)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"METH_unflattned.sol\":14651:14665  mutex == false */\n      iszero\n        /* \"METH_unflattned.sol\":14643:14666  require(mutex == false) */\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n        /* \"METH_unflattned.sol\":14677:14682  mutex */\n      0x72\n        /* \"METH_unflattned.sol\":14677:14689  mutex = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":14760:14778  from != address(0) */\n      dup4\n      and\n        /* \"METH_unflattned.sol\":14752:14820  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"METH_unflattned.sol\":14752:14820  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9395:9416   */\n      mstore\n        /* \"#utility.yul\":9452:9454   */\n      0x25\n        /* \"#utility.yul\":9432:9450   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9425:9455   */\n      mstore\n        /* \"#utility.yul\":9491:9525   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":9471:9489   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9464:9526   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9542:9560   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9535:9570   */\n      mstore\n        /* \"#utility.yul\":9587:9606   */\n      0x84\n      add\n        /* \"METH_unflattned.sol\":14752:14820  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_176\n        /* \"#utility.yul\":9211:9612   */\n      jump\n        /* \"METH_unflattned.sol\":14752:14820  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":14839:14855  to != address(0) */\n      dup3\n      and\n        /* \"METH_unflattned.sol\":14831:14895  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9819:9821   */\n      0x20\n        /* \"METH_unflattned.sol\":14831:14895  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9801:9822   */\n      mstore\n        /* \"#utility.yul\":9858:9860   */\n      0x23\n        /* \"#utility.yul\":9838:9856   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9831:9861   */\n      mstore\n        /* \"#utility.yul\":9897:9931   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":9877:9895   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9870:9932   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9948:9966   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9941:9974   */\n      mstore\n        /* \"#utility.yul\":9991:10010   */\n      0x84\n      add\n        /* \"METH_unflattned.sol\":14831:14895  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_176\n        /* \"#utility.yul\":9617:10016   */\n      jump\n        /* \"METH_unflattned.sol\":14831:14895  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_280:\n        /* \"METH_unflattned.sol\":14923:14924  0 */\n      0x00\n        /* \"METH_unflattned.sol\":14914:14920  amount */\n      dup2\n        /* \"METH_unflattned.sol\":14914:14924  amount > 0 */\n      gt\n        /* \"METH_unflattned.sol\":14906:14970  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10223:10225   */\n      0x20\n        /* \"METH_unflattned.sol\":14906:14970  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10205:10226   */\n      mstore\n        /* \"#utility.yul\":10262:10264   */\n      0x29\n        /* \"#utility.yul\":10242:10260   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10235:10265   */\n      mstore\n        /* \"#utility.yul\":10301:10335   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":10281:10299   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10274:10336   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":10352:10370   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10345:10384   */\n      mstore\n        /* \"#utility.yul\":10401:10420   */\n      0x84\n      add\n        /* \"METH_unflattned.sol\":14906:14970  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_176\n        /* \"#utility.yul\":10021:10426   */\n      jump\n        /* \"METH_unflattned.sol\":14906:14970  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_283:\n        /* \"METH_unflattned.sol\":15215:15229  isRouter(from) */\n      tag_286\n        /* \"METH_unflattned.sol\":15224:15228  from */\n      dup4\n        /* \"METH_unflattned.sol\":15215:15223  isRouter */\n      tag_287\n        /* \"METH_unflattned.sol\":15215:15229  isRouter(from) */\n      jump\t// in\n    tag_286:\n        /* \"METH_unflattned.sol\":15215:15237  isRouter(from) == true */\n      iszero\n      iszero\n        /* \"METH_unflattned.sol\":15233:15237  true */\n      0x01\n        /* \"METH_unflattned.sol\":15215:15237  isRouter(from) == true */\n      eq\n        /* \"METH_unflattned.sol\":15215:15282  isRouter(from) == true && ... */\n      dup1\n      iszero\n      tag_288\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":15256:15282  _isExcludedFromMaxTx[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":15256:15276  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":15256:15282  _isExcludedFromMaxTx[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":15255:15282  !_isExcludedFromMaxTx[from] */\n      iszero\n        /* \"METH_unflattned.sol\":15215:15282  isRouter(from) == true && ... */\n    tag_288:\n        /* \"METH_unflattned.sol\":15215:15317  isRouter(from) == true && ... */\n      dup1\n      iszero\n      tag_289\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":15300:15317  _isExcluded[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":15300:15311  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":15300:15317  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":15299:15317  !_isExcluded[from] */\n      iszero\n        /* \"METH_unflattned.sol\":15215:15317  isRouter(from) == true && ... */\n    tag_289:\n        /* \"METH_unflattned.sol\":15197:15425  if (... */\n      iszero\n      tag_293\n      jumpi\n        /* \"METH_unflattned.sol\":15352:15374  excludeFromMaxTx(from) */\n      tag_291\n        /* \"METH_unflattned.sol\":15369:15373  from */\n      dup4\n        /* \"METH_unflattned.sol\":15352:15368  excludeFromMaxTx */\n      tag_292\n        /* \"METH_unflattned.sol\":15352:15374  excludeFromMaxTx(from) */\n      jump\t// in\n    tag_291:\n        /* \"METH_unflattned.sol\":15393:15413  excludeAddress(from) */\n      tag_293\n        /* \"METH_unflattned.sol\":15408:15412  from */\n      dup4\n        /* \"METH_unflattned.sol\":15393:15407  excludeAddress */\n      tag_294\n        /* \"METH_unflattned.sol\":15393:15413  excludeAddress(from) */\n      jump\t// in\n    tag_293:\n        /* \"METH_unflattned.sol\":15455:15467  isRouter(to) */\n      tag_295\n        /* \"METH_unflattned.sol\":15464:15466  to */\n      dup3\n        /* \"METH_unflattned.sol\":15455:15463  isRouter */\n      tag_287\n        /* \"METH_unflattned.sol\":15455:15467  isRouter(to) */\n      jump\t// in\n    tag_295:\n        /* \"METH_unflattned.sol\":15455:15475  isRouter(to) == true */\n      iszero\n      iszero\n        /* \"METH_unflattned.sol\":15471:15475  true */\n      0x01\n        /* \"METH_unflattned.sol\":15455:15475  isRouter(to) == true */\n      eq\n        /* \"METH_unflattned.sol\":15455:15518  isRouter(to) == true && ... */\n      dup1\n      iszero\n      tag_296\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":15494:15518  _isExcludedFromMaxTx[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":15494:15514  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":15494:15518  _isExcludedFromMaxTx[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":15493:15518  !_isExcludedFromMaxTx[to] */\n      iszero\n        /* \"METH_unflattned.sol\":15455:15518  isRouter(to) == true && ... */\n    tag_296:\n        /* \"METH_unflattned.sol\":15455:15551  isRouter(to) == true && ... */\n      dup1\n      iszero\n      tag_297\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":15536:15551  _isExcluded[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":15536:15547  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":15536:15551  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":15535:15551  !_isExcluded[to] */\n      iszero\n        /* \"METH_unflattned.sol\":15455:15551  isRouter(to) == true && ... */\n    tag_297:\n        /* \"METH_unflattned.sol\":15437:15655  if (... */\n      iszero\n      tag_300\n      jumpi\n        /* \"METH_unflattned.sol\":15586:15606  excludeFromMaxTx(to) */\n      tag_299\n        /* \"METH_unflattned.sol\":15603:15605  to */\n      dup3\n        /* \"METH_unflattned.sol\":15586:15602  excludeFromMaxTx */\n      tag_292\n        /* \"METH_unflattned.sol\":15586:15606  excludeFromMaxTx(to) */\n      jump\t// in\n    tag_299:\n        /* \"METH_unflattned.sol\":15625:15643  excludeAddress(to) */\n      tag_300\n        /* \"METH_unflattned.sol\":15640:15642  to */\n      dup3\n        /* \"METH_unflattned.sol\":15625:15639  excludeAddress */\n      tag_294\n        /* \"METH_unflattned.sol\":15625:15643  excludeAddress(to) */\n      jump\t// in\n    tag_300:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":15750:15765  from != owner() */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      swap2\n      and\n        /* \"METH_unflattned.sol\":15750:15765  from != owner() */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"METH_unflattned.sol\":15750:15782  from != owner() && to != owner() */\n      tag_302\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":15769:15782  to != owner() */\n      dup4\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      swap2\n      and\n        /* \"METH_unflattned.sol\":15769:15782  to != owner() */\n      eq\n      iszero\n        /* \"METH_unflattned.sol\":15750:15782  from != owner() && to != owner() */\n    tag_302:\n        /* \"METH_unflattned.sol\":15746:16209  if (from != owner() && to != owner()) {... */\n      iszero\n      tag_307\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":15973:15999  _isExcludedFromMaxTx[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":15973:15993  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":15973:15999  _isExcludedFromMaxTx[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":15972:15999  !_isExcludedFromMaxTx[from] */\n      iszero\n        /* \"METH_unflattned.sol\":15972:16028  !_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to] */\n      dup1\n      iszero\n      tag_305\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":16004:16028  _isExcludedFromMaxTx[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":16004:16024  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":16004:16028  _isExcludedFromMaxTx[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":16003:16028  !_isExcludedFromMaxTx[to] */\n      iszero\n        /* \"METH_unflattned.sol\":15972:16028  !_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to] */\n    tag_305:\n        /* \"METH_unflattned.sol\":15968:16198  if (!_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to]) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"METH_unflattned.sol\":16126:16137  maxTxAmount */\n      sload(0x71)\n        /* \"METH_unflattned.sol\":16116:16122  amount */\n      dup2\n        /* \"METH_unflattned.sol\":16116:16137  amount <= maxTxAmount */\n      gt\n      iszero\n        /* \"METH_unflattned.sol\":16108:16182  require(amount <= maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_309\n      jump\t// in\n    tag_307:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":16284:16299  from != owner() */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      swap2\n      and\n        /* \"METH_unflattned.sol\":16284:16299  from != owner() */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"METH_unflattned.sol\":16284:16316  from != owner() && to != owner() */\n      tag_311\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":16303:16316  to != owner() */\n      dup4\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      swap2\n      and\n        /* \"METH_unflattned.sol\":16303:16316  to != owner() */\n      eq\n      iszero\n        /* \"METH_unflattned.sol\":16284:16316  from != owner() && to != owner() */\n    tag_311:\n        /* \"METH_unflattned.sol\":16280:16732  if (from != owner() && to != owner()) {... */\n      iszero\n      tag_316\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":16496:16522  _isExcludedFromMaxTx[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":16496:16516  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":16496:16522  _isExcludedFromMaxTx[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":16495:16522  !_isExcludedFromMaxTx[from] */\n      iszero\n        /* \"METH_unflattned.sol\":16495:16551  !_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to] */\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":16527:16551  _isExcludedFromMaxTx[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":16527:16547  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":16527:16551  _isExcludedFromMaxTx[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":16526:16551  !_isExcludedFromMaxTx[to] */\n      iszero\n        /* \"METH_unflattned.sol\":16495:16551  !_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to] */\n    tag_314:\n        /* \"METH_unflattned.sol\":16491:16721  if (!_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to]) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"METH_unflattned.sol\":16649:16660  maxTxAmount */\n      sload(0x71)\n        /* \"METH_unflattned.sol\":16639:16645  amount */\n      dup2\n        /* \"METH_unflattned.sol\":16639:16660  amount <= maxTxAmount */\n      gt\n      iszero\n        /* \"METH_unflattned.sol\":16631:16705  require(amount <= maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_309\n      jump\t// in\n    tag_316:\n        /* \"METH_unflattned.sol\":16931:16963  _tokenTransfer(from, to, amount) */\n      tag_318\n        /* \"METH_unflattned.sol\":16946:16950  from */\n      dup4\n        /* \"METH_unflattned.sol\":16952:16954  to */\n      dup4\n        /* \"METH_unflattned.sol\":16956:16962  amount */\n      dup4\n        /* \"METH_unflattned.sol\":16931:16945  _tokenTransfer */\n      tag_319\n        /* \"METH_unflattned.sol\":16931:16963  _tokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_318:\n      pop\n      pop\n        /* \"METH_unflattned.sol\":16976:16981  mutex */\n      0x72\n        /* \"METH_unflattned.sol\":16976:16989  mutex = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n      pop\n        /* \"METH_unflattned.sol\":14492:16997  function _transfer(... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1620:1750  function _checkOwner() internal view virtual {... */\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1683:1706  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11042:11044   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11024:11045   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11061:11079   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11054:11084   */\n      mstore\n        /* \"#utility.yul\":11120:11154   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11100:11118   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11093:11155   */\n      mstore\n        /* \"#utility.yul\":11172:11190   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_176\n        /* \"#utility.yul\":10840:11196   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2687:2874  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_193:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2795:2812  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      swap2\n      and\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2795:2812  _owner = newOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      dup3\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2760:2776  address oldOwner */\n      0x00\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2750:2874  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":2687:2874  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1024:1119  function __Ownable_init() internal onlyInitializing {... */\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_331\n      jump\t// in\n    tag_329:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1086:1112  __Ownable_init_unchained() */\n      tag_192\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1086:1110  __Ownable_init_unchained */\n      tag_334\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1086:1112  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"METH_unflattned.sol\":10557:10774  function isRouter(address _address) internal view returns (bool) {... */\n    tag_287:\n        /* \"METH_unflattned.sol\":10689:10721  abi.encodeWithSelector(SELECTOR) */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xc45a0155)\n      or\n      swap1\n      mstore\n        /* \"METH_unflattned.sol\":10669:10722  _address.staticcall(abi.encodeWithSelector(SELECTOR)) */\n      swap1\n      mload\n        /* \"METH_unflattned.sol\":10616:10620  bool */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":10669:10688  _address.staticcall */\n      dup7\n      and\n      swap2\n        /* \"METH_unflattned.sol\":10669:10722  _address.staticcall(abi.encodeWithSelector(SELECTOR)) */\n      tag_336\n      swap2\n        /* \"METH_unflattned.sol\":10689:10721  abi.encodeWithSelector(SELECTOR) */\n      swap1\n        /* \"METH_unflattned.sol\":10669:10722  _address.staticcall(abi.encodeWithSelector(SELECTOR)) */\n      tag_337\n      jump\t// in\n    tag_336:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_340\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_339)\n    tag_340:\n      0x60\n      swap2\n      pop\n    tag_339:\n      pop\n        /* \"METH_unflattned.sol\":10633:10722  (bool success, bytes memory data) = _address.staticcall(abi.encodeWithSelector(SELECTOR)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"METH_unflattned.sol\":10740:10747  success */\n      dup2\n        /* \"METH_unflattned.sol\":10740:10766  success && data.length > 0 */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"METH_unflattned.sol\":10751:10762  data.length */\n      mload\n        /* \"METH_unflattned.sol\":10751:10766  data.length > 0 */\n      iszero\n      iszero\n      swap4\n        /* \"METH_unflattned.sol\":10733:10766  return success && data.length > 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"METH_unflattned.sol\":10557:10774  function isRouter(address _address) internal view returns (bool) {... */\n      jump\t// out\n        /* \"METH_unflattned.sol\":10958:11145  function excludeFromMaxTx(address account) private {... */\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":11029:11058  _isExcludedFromMaxTx[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":11029:11049  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":11029:11058  _isExcludedFromMaxTx[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":11028:11058  !_isExcludedFromMaxTx[account] */\n      iszero\n        /* \"METH_unflattned.sol\":11020:11090  require(!_isExcludedFromMaxTx[account], \"Account is already excluded\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12107:12109   */\n      0x20\n        /* \"METH_unflattned.sol\":11020:11090  require(!_isExcludedFromMaxTx[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12089:12110   */\n      mstore\n        /* \"#utility.yul\":12146:12148   */\n      0x1b\n        /* \"#utility.yul\":12126:12144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12119:12149   */\n      mstore\n        /* \"#utility.yul\":12185:12214   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":12165:12183   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12158:12215   */\n      mstore\n        /* \"#utility.yul\":12232:12250   */\n      0x64\n      add\n        /* \"METH_unflattned.sol\":11020:11090  require(!_isExcludedFromMaxTx[account], \"Account is already excluded\") */\n      tag_176\n        /* \"#utility.yul\":11905:12256   */\n      jump\n        /* \"METH_unflattned.sol\":11020:11090  require(!_isExcludedFromMaxTx[account], \"Account is already excluded\") */\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":11101:11130  _isExcludedFromMaxTx[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":11101:11121  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH_unflattned.sol\":11101:11130  _isExcludedFromMaxTx[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"METH_unflattned.sol\":11101:11137  _isExcludedFromMaxTx[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"METH_unflattned.sol\":11133:11137  true */\n      0x01\n        /* \"METH_unflattned.sol\":11101:11137  _isExcludedFromMaxTx[account] = true */\n      or\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":10958:11145  function excludeFromMaxTx(address account) private {... */\n      jump\t// out\n        /* \"METH_unflattned.sol\":11398:11982  function excludeAddress(address account) private {... */\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":11467:11487  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":11467:11478  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":11467:11487  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":11466:11487  !_isExcluded[account] */\n      iszero\n        /* \"METH_unflattned.sol\":11458:11519  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12107:12109   */\n      0x20\n        /* \"METH_unflattned.sol\":11458:11519  require(!_isExcluded[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12089:12110   */\n      mstore\n        /* \"#utility.yul\":12146:12148   */\n      0x1b\n        /* \"#utility.yul\":12126:12144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12119:12149   */\n      mstore\n        /* \"#utility.yul\":12185:12214   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":12165:12183   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12158:12215   */\n      mstore\n        /* \"#utility.yul\":12232:12250   */\n      0x64\n      add\n        /* \"METH_unflattned.sol\":11458:11519  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_176\n        /* \"#utility.yul\":11905:12256   */\n      jump\n        /* \"METH_unflattned.sol\":11458:11519  require(!_isExcluded[account], \"Account is already excluded\") */\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":11584:11600  _rOwned[account] */\n      dup2\n      and\n        /* \"METH_unflattned.sol\":11603:11604  0 */\n      0x00\n        /* \"METH_unflattned.sol\":11584:11600  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":11584:11591  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":11584:11600  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"METH_unflattned.sol\":11584:11604  _rOwned[account] > 0 */\n      iszero\n        /* \"METH_unflattned.sol\":11580:11794  if (_rOwned[account] > 0) {... */\n      tag_349\n      jumpi\n        /* \"METH_unflattned.sol\":11763:11782  rBalanceOf(account) */\n      tag_350\n        /* \"METH_unflattned.sol\":11774:11781  account */\n      dup2\n        /* \"METH_unflattned.sol\":11763:11773  rBalanceOf */\n      tag_80\n        /* \"METH_unflattned.sol\":11763:11782  rBalanceOf(account) */\n      jump\t// in\n    tag_350:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":11744:11760  _tOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":11744:11751  _tOwned */\n      0x69\n        /* \"METH_unflattned.sol\":11744:11760  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"METH_unflattned.sol\":11744:11782  _tOwned[account] = rBalanceOf(account) */\n      sstore\n        /* \"METH_unflattned.sol\":11580:11794  if (_rOwned[account] > 0) {... */\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":11848:11868  _isExcluded[account] */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":11848:11859  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":11848:11868  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH_unflattned.sol\":11848:11875  _isExcluded[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"METH_unflattned.sol\":11871:11875  true */\n      0x01\n        /* \"METH_unflattned.sol\":11848:11875  _isExcluded[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"METH_unflattned.sol\":11951:11960  _excluded */\n      0x68\n        /* \"METH_unflattned.sol\":11951:11974  _excluded.push(account) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0xa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"METH_unflattned.sol\":11398:11982  function excludeAddress(address account) private {... */\n      jump\t// out\n        /* \"METH_unflattned.sol\":17077:18032  function _tokenTransfer(address sender, address recipient, uint256 amount) private {... */\n    tag_319:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":17228:17247  _isExcluded[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":17228:17239  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":17228:17247  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":17228:17274  _isExcluded[sender] && !_isExcluded[recipient] */\n      dup1\n      iszero\n      tag_353\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":17252:17274  _isExcluded[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":17252:17263  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":17252:17274  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":17251:17274  !_isExcluded[recipient] */\n      iszero\n        /* \"METH_unflattned.sol\":17228:17274  _isExcluded[sender] && !_isExcluded[recipient] */\n    tag_353:\n        /* \"METH_unflattned.sol\":17224:18025  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"METH_unflattned.sol\":17292:17340  _transferFromExcluded(sender, recipient, amount) */\n      tag_355\n        /* \"METH_unflattned.sol\":17314:17320  sender */\n      dup4\n        /* \"METH_unflattned.sol\":17322:17331  recipient */\n      dup4\n        /* \"METH_unflattned.sol\":17333:17339  amount */\n      dup4\n        /* \"METH_unflattned.sol\":17292:17313  _transferFromExcluded */\n      tag_356\n        /* \"METH_unflattned.sol\":17292:17340  _transferFromExcluded(sender, recipient, amount) */\n      jump\t// in\n    tag_355:\n        /* \"METH_unflattned.sol\":17077:18032  function _tokenTransfer(address sender, address recipient, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH_unflattned.sol\":17224:18025  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":17498:17517  _isExcluded[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":17498:17509  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":17498:17517  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":17497:17517  !_isExcluded[sender] */\n      iszero\n        /* \"METH_unflattned.sol\":17497:17543  !_isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_358\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":17521:17543  _isExcluded[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":17521:17532  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":17521:17543  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":17497:17543  !_isExcluded[sender] && _isExcluded[recipient] */\n    tag_358:\n        /* \"METH_unflattned.sol\":17493:18025  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_359\n      jumpi\n        /* \"METH_unflattned.sol\":17560:17606  _transferToExcluded(sender, recipient, amount) */\n      tag_355\n        /* \"METH_unflattned.sol\":17580:17586  sender */\n      dup4\n        /* \"METH_unflattned.sol\":17588:17597  recipient */\n      dup4\n        /* \"METH_unflattned.sol\":17599:17605  amount */\n      dup4\n        /* \"METH_unflattned.sol\":17560:17579  _transferToExcluded */\n      tag_361\n        /* \"METH_unflattned.sol\":17560:17606  _transferToExcluded(sender, recipient, amount) */\n      jump\t// in\n        /* \"METH_unflattned.sol\":17493:18025  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_359:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":17770:17789  _isExcluded[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":17770:17781  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":17770:17789  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":17770:17815  _isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_363\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":17793:17815  _isExcluded[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":17793:17804  _isExcluded */\n      0x6c\n        /* \"METH_unflattned.sol\":17793:17815  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH_unflattned.sol\":17770:17815  _isExcluded[sender] && _isExcluded[recipient] */\n    tag_363:\n        /* \"METH_unflattned.sol\":17766:18025  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"METH_unflattned.sol\":17833:17881  _transferBothExcluded(sender, recipient, amount) */\n      tag_355\n        /* \"METH_unflattned.sol\":17855:17861  sender */\n      dup4\n        /* \"METH_unflattned.sol\":17863:17872  recipient */\n      dup4\n        /* \"METH_unflattned.sol\":17874:17880  amount */\n      dup4\n        /* \"METH_unflattned.sol\":17833:17854  _transferBothExcluded */\n      tag_366\n        /* \"METH_unflattned.sol\":17833:17881  _transferBothExcluded(sender, recipient, amount) */\n      jump\t// in\n        /* \"METH_unflattned.sol\":17766:18025  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_364:\n        /* \"METH_unflattned.sol\":17969:18013  _transferStandard(sender, recipient, amount) */\n      tag_355\n        /* \"METH_unflattned.sol\":17987:17993  sender */\n      dup4\n        /* \"METH_unflattned.sol\":17995:18004  recipient */\n      dup4\n        /* \"METH_unflattned.sol\":18006:18012  amount */\n      dup4\n        /* \"METH_unflattned.sol\":17969:17986  _transferStandard */\n      tag_369\n        /* \"METH_unflattned.sol\":17969:18013  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1125:1236  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_334:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_371\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_331\n      jump\t// in\n    tag_371:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1197:1229  _transferOwnership(_msgSender()) */\n      tag_192\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1197:1215  _transferOwnership */\n      tag_193\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":1197:1229  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"METH_unflattned.sol\":20674:22471  function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_356:\n        /* \"METH_unflattned.sol\":20776:20800  TransferData memory data */\n      tag_377\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"METH_unflattned.sol\":20878:20887  antiWhale */\n      and(0xff, sload(0x72))\n        /* \"METH_unflattned.sol\":20878:20895  antiWhale == true */\n      iszero\n      iszero\n        /* \"METH_unflattned.sol\":20878:20887  antiWhale */\n      0x01\n        /* \"METH_unflattned.sol\":20878:20895  antiWhale == true */\n      sub\n        /* \"METH_unflattned.sol\":20875:21032  if(antiWhale == true) {... */\n      tag_381\n      jumpi\n        /* \"METH_unflattned.sol\":20942:20946  1000 */\n      0x03e8\n        /* \"METH_unflattned.sol\":20932:20939  _tTotal */\n      sload(0x6f)\n        /* \"METH_unflattned.sol\":20932:20946  _tTotal / 1000 */\n      tag_380\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_380:\n        /* \"METH_unflattned.sol\":20920:20927  tAmount */\n      dup3\n        /* \"METH_unflattned.sol\":20920:20947  tAmount <= (_tTotal / 1000) */\n      gt\n      iszero\n        /* \"METH_unflattned.sol\":20912:21020  require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12463:12465   */\n      0x20\n        /* \"METH_unflattned.sol\":20912:21020  require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12445:12466   */\n      mstore\n        /* \"#utility.yul\":12502:12504   */\n      0x44\n        /* \"#utility.yul\":12482:12500   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12475:12505   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12541:12575   */\n      0x43616e6e6f74207075726368617365206d6f7265207468616e2031306d202830\n        /* \"#utility.yul\":12521:12539   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12514:12576   */\n      mstore\n        /* \"#utility.yul\":12612:12646   */\n      0x2e312529206f6620737570706c7920696e2073696e676c65207472616e736163\n        /* \"#utility.yul\":12592:12610   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12585:12647   */\n      mstore\n      shl(0xe1, 0x3a34b7b7)\n        /* \"#utility.yul\":12663:12682   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":12656:12691   */\n      mstore\n        /* \"#utility.yul\":12708:12727   */\n      0xa4\n      add\n        /* \"METH_unflattned.sol\":20912:21020  require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\") */\n      tag_176\n        /* \"#utility.yul\":12261:12733   */\n      jump\n        /* \"METH_unflattned.sol\":20912:21020  require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\") */\n    tag_381:\n        /* \"METH_unflattned.sol\":21090:21116  data.tAmountSent = tAmount */\n      dup2\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":21156:21166  _getRate() */\n      tag_384\n        /* \"METH_unflattned.sol\":21156:21164  _getRate */\n      tag_110\n        /* \"METH_unflattned.sol\":21156:21166  _getRate() */\n      jump\t// in\n    tag_384:\n        /* \"METH_unflattned.sol\":21146:21166  tAmount * _getRate() */\n      tag_385\n      swap1\n        /* \"METH_unflattned.sol\":21146:21153  tAmount */\n      dup4\n        /* \"METH_unflattned.sol\":21146:21166  tAmount * _getRate() */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"METH_unflattned.sol\":21127:21143  data.rAmountSent */\n      0x20\n      dup3\n      add\n        /* \"METH_unflattned.sol\":21127:21166  data.rAmountSent = tAmount * _getRate() */\n      mstore\n        /* \"METH_unflattned.sol\":21256:21257  0 */\n      0x00\n        /* \"METH_unflattned.sol\":21234:21253  data.totalBuyTaxBps */\n      0x40\n      dup3\n      add\n        /* \"METH_unflattned.sol\":21234:21257  data.totalBuyTaxBps = 0 */\n      dup2\n      swap1\n      mstore\n        /* \"METH_unflattned.sol\":21379:21384  10000 */\n      0x2710\n      swap1\n        /* \"METH_unflattned.sol\":21346:21375  tAmount * data.totalBuyTaxBps */\n      tag_387\n      swap1\n        /* \"METH_unflattned.sol\":21346:21353  tAmount */\n      dup5\n        /* \"METH_unflattned.sol\":21346:21375  tAmount * data.totalBuyTaxBps */\n      tag_386\n      jump\t// in\n    tag_387:\n        /* \"METH_unflattned.sol\":21345:21384  (tAmount * data.totalBuyTaxBps) / 10000 */\n      tag_388\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_388:\n        /* \"METH_unflattned.sol\":21325:21342  data.tBuyFeeTotal */\n      0x80\n      dup3\n      add\n        /* \"METH_unflattned.sol\":21325:21384  data.tBuyFeeTotal = (tAmount * data.totalBuyTaxBps) / 10000 */\n      mstore\n        /* \"METH_unflattned.sol\":21435:21445  _getRate() */\n      tag_389\n        /* \"METH_unflattned.sol\":21435:21443  _getRate */\n      tag_110\n        /* \"METH_unflattned.sol\":21435:21445  _getRate() */\n      jump\t// in\n    tag_389:\n        /* \"METH_unflattned.sol\":21415:21419  data */\n      dup2\n        /* \"METH_unflattned.sol\":21415:21432  data.tBuyFeeTotal */\n      0x80\n      add\n      mload\n        /* \"METH_unflattned.sol\":21415:21445  data.tBuyFeeTotal * _getRate() */\n      tag_390\n      swap2\n      swap1\n      tag_386\n      jump\t// in\n    tag_390:\n        /* \"METH_unflattned.sol\":21395:21412  data.rBuyFeeTotal */\n      0xa0\n      dup3\n      add\n        /* \"METH_unflattned.sol\":21395:21445  data.rBuyFeeTotal = data.tBuyFeeTotal * _getRate() */\n      dup2\n      swap1\n      mstore\n        /* \"METH_unflattned.sol\":21545:21566  data.rBuyFeeTotal > 0 */\n      iszero\n        /* \"METH_unflattned.sol\":21527:21635  if (... */\n      tag_391\n      jumpi\n        /* \"METH_unflattned.sol\":21606:21623  data.rBuyFeeTotal */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":21583:21603  data.reflectedAmount */\n      0x0100\n      dup3\n      add\n        /* \"METH_unflattned.sol\":21583:21623  data.reflectedAmount = data.rBuyFeeTotal */\n      mstore\n        /* \"METH_unflattned.sol\":21527:21635  if (... */\n    tag_391:\n        /* \"METH_unflattned.sol\":21800:21816  data.tAmountSent */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":21781:21796  _tOwned[sender] */\n      dup6\n      and\n        /* \"METH_unflattned.sol\":21800:21816  data.tAmountSent */\n      0x00\n        /* \"METH_unflattned.sol\":21781:21796  _tOwned[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":21781:21788  _tOwned */\n      0x69\n        /* \"METH_unflattned.sol\":21781:21796  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH_unflattned.sol\":21781:21816  _tOwned[sender] -= data.tAmountSent */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":21781:21796  _tOwned[sender] */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":21800:21816  data.tAmountSent */\n      swap1\n        /* \"METH_unflattned.sol\":21781:21816  _tOwned[sender] -= data.tAmountSent */\n      tag_392\n      swap1\n        /* \"METH_unflattned.sol\":21800:21816  data.tAmountSent */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":21781:21816  _tOwned[sender] -= data.tAmountSent */\n      tag_164\n      jump\t// in\n    tag_392:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":21846:21862  data.rAmountSent */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":21827:21842  _rOwned[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":21827:21834  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":21827:21842  _rOwned[sender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH_unflattned.sol\":21827:21862  _rOwned[sender] -= data.rAmountSent */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":21846:21862  data.rAmountSent */\n      swap2\n      swap3\n        /* \"METH_unflattned.sol\":21827:21842  _rOwned[sender] */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":21827:21862  _rOwned[sender] -= data.rAmountSent */\n      tag_393\n      swap1\n        /* \"METH_unflattned.sol\":21846:21862  data.rAmountSent */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":21827:21862  _rOwned[sender] -= data.rAmountSent */\n      tag_164\n      jump\t// in\n    tag_393:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":22030:22047  data.rBuyFeeTotal */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":22011:22027  data.rAmountSent */\n      0x20\n      dup3\n      add\n      mload\n        /* \"METH_unflattned.sol\":22011:22047  data.rAmountSent - data.rBuyFeeTotal */\n      tag_394\n      swap2\n        /* \"METH_unflattned.sol\":22030:22047  data.rBuyFeeTotal */\n      swap1\n        /* \"METH_unflattned.sol\":22011:22047  data.rAmountSent - data.rBuyFeeTotal */\n      tag_164\n      jump\t// in\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":21988:22006  _rOwned[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":21988:21995  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":21988:22006  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH_unflattned.sol\":21988:22048  _rOwned[recipient] += (data.rAmountSent - data.rBuyFeeTotal) */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":21988:22006  _rOwned[recipient] */\n      swap1\n      swap2\n      swap1\n        /* \"METH_unflattned.sol\":21988:22048  _rOwned[recipient] += (data.rAmountSent - data.rBuyFeeTotal) */\n      tag_395\n      swap1\n      dup5\n      swap1\n      tag_171\n      jump\t// in\n    tag_395:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":22154:22174  data.reflectedAmount */\n      0x0100\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":22143:22150  _rTotal */\n      0x70\n        /* \"METH_unflattned.sol\":22143:22174  _rTotal -= data.reflectedAmount */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":22143:22150  _rTotal */\n      0x00\n      swap1\n        /* \"METH_unflattned.sol\":22143:22174  _rTotal -= data.reflectedAmount */\n      tag_396\n      swap1\n        /* \"METH_unflattned.sol\":22154:22174  data.reflectedAmount */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":22143:22174  _rTotal -= data.reflectedAmount */\n      tag_164\n      jump\t// in\n    tag_396:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":22299:22316  data.tBuyFeeTotal */\n      0x80\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":22280:22296  data.tAmountSent */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":22251:22318  Transfer(sender, recipient, (data.tAmountSent - data.tBuyFeeTotal)) */\n      dup1\n      dup7\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n        /* \"METH_unflattned.sol\":22280:22316  data.tAmountSent - data.tBuyFeeTotal */\n      tag_397\n      swap2\n      tag_164\n      jump\t// in\n    tag_397:\n        /* \"METH_unflattned.sol\":22251:22318  Transfer(sender, recipient, (data.tAmountSent - data.tBuyFeeTotal)) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH_unflattned.sol\":22251:22318  Transfer(sender, recipient, (data.tAmountSent - data.tBuyFeeTotal)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH_unflattned.sol\":22379:22395  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH_unflattned.sol\":22430:22447  data.tBuyFeeTotal */\n      0x80\n      dup3\n      add\n      mload\n        /* \"METH_unflattned.sol\":22344:22463  TransferFromExcluded(... */\n      0xe6ef78c5a1f105fc4b9500eeb7cd09b041367bdee35f1d85761735ee78b3ff2e\n      swap2\n        /* \"METH_unflattned.sol\":22379:22395  data.tAmountSent */\n      swap1\n        /* \"METH_unflattned.sol\":22411:22447  data.tAmountSent - data.tBuyFeeTotal */\n      tag_399\n      swap1\n        /* \"METH_unflattned.sol\":22379:22395  data.tAmountSent */\n      dup3\n        /* \"METH_unflattned.sol\":22411:22447  data.tAmountSent - data.tBuyFeeTotal */\n      tag_164\n      jump\t// in\n    tag_399:\n        /* \"METH_unflattned.sol\":22344:22463  TransferFromExcluded(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2761:2786   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2802:2820   */\n      dup4\n      add\n        /* \"#utility.yul\":2795:2829   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"METH_unflattned.sol\":22344:22463  TransferFromExcluded(... */\n    tag_400:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"METH_unflattned.sol\":20765:22471  {... */\n      pop\n        /* \"METH_unflattned.sol\":20674:22471  function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH_unflattned.sol\":18772:20532  function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_361:\n        /* \"METH_unflattned.sol\":18872:18896  TransferData memory data */\n      tag_402\n      tag_378\n      jump\t// in\n    tag_402:\n        /* \"METH_unflattned.sol\":19070:19072  10 */\n      0x0a\n        /* \"METH_unflattned.sol\":19049:19067  rBalanceOf(sender) */\n      tag_403\n        /* \"METH_unflattned.sol\":19060:19066  sender */\n      dup6\n        /* \"METH_unflattned.sol\":19049:19059  rBalanceOf */\n      tag_80\n        /* \"METH_unflattned.sol\":19049:19067  rBalanceOf(sender) */\n      jump\t// in\n    tag_403:\n        /* \"METH_unflattned.sol\":19049:19072  rBalanceOf(sender) / 10 */\n      tag_404\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_404:\n        /* \"METH_unflattned.sol\":19038:19045  tAmount */\n      dup3\n        /* \"METH_unflattned.sol\":19038:19072  tAmount <= rBalanceOf(sender) / 10 */\n      gt\n      iszero\n        /* \"METH_unflattned.sol\":19030:19135  require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13113:13115   */\n      0x20\n        /* \"METH_unflattned.sol\":19030:19135  require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13095:13116   */\n      mstore\n        /* \"#utility.yul\":13152:13154   */\n      0x3a\n        /* \"#utility.yul\":13132:13150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13125:13155   */\n      mstore\n        /* \"#utility.yul\":13191:13225   */\n      0x43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c\n        /* \"#utility.yul\":13171:13189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13164:13226   */\n      mstore\n        /* \"#utility.yul\":13262:13290   */\n      0x616e636520696e2073696e676c65207472616e73616374696f6e000000000000\n        /* \"#utility.yul\":13242:13260   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13235:13291   */\n      mstore\n        /* \"#utility.yul\":13308:13327   */\n      0x84\n      add\n        /* \"METH_unflattned.sol\":19030:19135  require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\") */\n      tag_176\n        /* \"#utility.yul\":12911:13333   */\n      jump\n        /* \"METH_unflattned.sol\":19030:19135  require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\") */\n    tag_405:\n        /* \"METH_unflattned.sol\":19196:19222  data.tAmountSent = tAmount */\n      dup2\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":19262:19272  _getRate() */\n      tag_408\n        /* \"METH_unflattned.sol\":19262:19270  _getRate */\n      tag_110\n        /* \"METH_unflattned.sol\":19262:19272  _getRate() */\n      jump\t// in\n    tag_408:\n        /* \"METH_unflattned.sol\":19252:19272  tAmount * _getRate() */\n      tag_409\n      swap1\n        /* \"METH_unflattned.sol\":19252:19259  tAmount */\n      dup4\n        /* \"METH_unflattned.sol\":19252:19272  tAmount * _getRate() */\n      tag_386\n      jump\t// in\n    tag_409:\n        /* \"METH_unflattned.sol\":19233:19249  data.rAmountSent */\n      0x20\n      dup3\n      add\n        /* \"METH_unflattned.sol\":19233:19272  data.rAmountSent = tAmount * _getRate() */\n      mstore\n        /* \"METH_unflattned.sol\":19308:19309  0 */\n      0x00\n        /* \"METH_unflattned.sol\":19285:19305  data.totalSellTaxBps */\n      0x60\n      dup3\n      add\n        /* \"METH_unflattned.sol\":19285:19309  data.totalSellTaxBps = 0 */\n      dup2\n      swap1\n      mstore\n        /* \"METH_unflattned.sol\":19433:19438  10000 */\n      0x2710\n      swap1\n        /* \"METH_unflattned.sol\":19399:19429  tAmount * data.totalSellTaxBps */\n      tag_410\n      swap1\n        /* \"METH_unflattned.sol\":19399:19406  tAmount */\n      dup5\n        /* \"METH_unflattned.sol\":19399:19429  tAmount * data.totalSellTaxBps */\n      tag_386\n      jump\t// in\n    tag_410:\n        /* \"METH_unflattned.sol\":19398:19438  (tAmount * data.totalSellTaxBps) / 10000 */\n      tag_411\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_411:\n        /* \"METH_unflattned.sol\":19377:19395  data.tSellFeeTotal */\n      0xc0\n      dup3\n      add\n        /* \"METH_unflattned.sol\":19377:19438  data.tSellFeeTotal = (tAmount * data.totalSellTaxBps) / 10000 */\n      mstore\n        /* \"METH_unflattned.sol\":19491:19501  _getRate() */\n      tag_412\n        /* \"METH_unflattned.sol\":19491:19499  _getRate */\n      tag_110\n        /* \"METH_unflattned.sol\":19491:19501  _getRate() */\n      jump\t// in\n    tag_412:\n        /* \"METH_unflattned.sol\":19470:19474  data */\n      dup2\n        /* \"METH_unflattned.sol\":19470:19488  data.tSellFeeTotal */\n      0xc0\n      add\n      mload\n        /* \"METH_unflattned.sol\":19470:19501  data.tSellFeeTotal * _getRate() */\n      tag_413\n      swap2\n      swap1\n      tag_386\n      jump\t// in\n    tag_413:\n        /* \"METH_unflattned.sol\":19449:19467  data.rSellFeeTotal */\n      0xe0\n      dup3\n      add\n        /* \"METH_unflattned.sol\":19449:19501  data.rSellFeeTotal = data.tSellFeeTotal * _getRate() */\n      dup2\n      swap1\n      mstore\n        /* \"METH_unflattned.sol\":19587:19609  data.rSellFeeTotal > 0 */\n      iszero\n        /* \"METH_unflattned.sol\":19583:19680  if (data.rSellFeeTotal > 0 ) {... */\n      tag_414\n      jumpi\n        /* \"METH_unflattned.sol\":19650:19668  data.rSellFeeTotal */\n      0xe0\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":19627:19647  data.reflectedAmount */\n      0x0100\n      dup3\n      add\n        /* \"METH_unflattned.sol\":19627:19668  data.reflectedAmount = data.rSellFeeTotal */\n      mstore\n        /* \"METH_unflattned.sol\":19583:19680  if (data.rSellFeeTotal > 0 ) {... */\n    tag_414:\n        /* \"METH_unflattned.sol\":19831:19835  data */\n      dup1\n        /* \"METH_unflattned.sol\":19831:19847  data.rAmountSent */\n      0x20\n      add\n      mload\n        /* \"METH_unflattned.sol\":19812:19819  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":19812:19827  _rOwned[sender] */\n      0x00\n        /* \"METH_unflattned.sol\":19820:19826  sender */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":19812:19827  _rOwned[sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"METH_unflattned.sol\":19812:19847  _rOwned[sender] -= data.rAmountSent */\n      dup3\n      dup3\n      sload\n      tag_415\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_415:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":20026:20044  data.tSellFeeTotal */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":20007:20023  data.tAmountSent */\n      dup2\n      mload\n        /* \"METH_unflattned.sol\":20007:20044  data.tAmountSent - data.tSellFeeTotal */\n      tag_416\n      swap2\n        /* \"METH_unflattned.sol\":20026:20044  data.tSellFeeTotal */\n      swap1\n        /* \"METH_unflattned.sol\":20007:20044  data.tAmountSent - data.tSellFeeTotal */\n      tag_164\n      jump\t// in\n    tag_416:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":19984:20002  _tOwned[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":19984:19991  _tOwned */\n      0x69\n        /* \"METH_unflattned.sol\":19984:20002  _tOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH_unflattned.sol\":19984:20045  _tOwned[recipient] += (data.tAmountSent - data.tSellFeeTotal) */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":19984:20002  _tOwned[recipient] */\n      swap1\n      swap2\n      swap1\n        /* \"METH_unflattned.sol\":19984:20045  _tOwned[recipient] += (data.tAmountSent - data.tSellFeeTotal) */\n      tag_417\n      swap1\n      dup5\n      swap1\n      tag_171\n      jump\t// in\n    tag_417:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":20098:20116  data.rSellFeeTotal */\n      0xe0\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":20079:20095  data.rAmountSent */\n      0x20\n      dup3\n      add\n      mload\n        /* \"METH_unflattned.sol\":20079:20116  data.rAmountSent - data.rSellFeeTotal */\n      tag_418\n      swap2\n        /* \"METH_unflattned.sol\":20098:20116  data.rSellFeeTotal */\n      swap1\n        /* \"METH_unflattned.sol\":20079:20116  data.rAmountSent - data.rSellFeeTotal */\n      tag_164\n      jump\t// in\n    tag_418:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":20056:20074  _rOwned[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":20056:20063  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":20056:20074  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH_unflattned.sol\":20056:20117  _rOwned[recipient] += (data.rAmountSent - data.rSellFeeTotal) */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":20056:20074  _rOwned[recipient] */\n      swap1\n      swap2\n      swap1\n        /* \"METH_unflattned.sol\":20056:20117  _rOwned[recipient] += (data.rAmountSent - data.rSellFeeTotal) */\n      tag_419\n      swap1\n      dup5\n      swap1\n      tag_171\n      jump\t// in\n    tag_419:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":20223:20243  data.reflectedAmount */\n      0x0100\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":20212:20219  _rTotal */\n      0x70\n        /* \"METH_unflattned.sol\":20212:20243  _rTotal -= data.reflectedAmount */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":20212:20219  _rTotal */\n      0x00\n      swap1\n        /* \"METH_unflattned.sol\":20212:20243  _rTotal -= data.reflectedAmount */\n      tag_420\n      swap1\n        /* \"METH_unflattned.sol\":20223:20243  data.reflectedAmount */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":20212:20243  _rTotal -= data.reflectedAmount */\n      tag_164\n      jump\t// in\n    tag_420:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":20368:20386  data.tSellFeeTotal */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"METH_unflattned.sol\":20349:20365  data.tAmountSent */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":20320:20388  Transfer(sender, recipient, (data.tAmountSent - data.tSellFeeTotal)) */\n      dup1\n      dup7\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n        /* \"METH_unflattned.sol\":20349:20386  data.tAmountSent - data.tSellFeeTotal */\n      tag_421\n      swap2\n      tag_164\n      jump\t// in\n    tag_421:\n        /* \"METH_unflattned.sol\":20320:20388  Transfer(sender, recipient, (data.tAmountSent - data.tSellFeeTotal)) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH_unflattned.sol\":20320:20388  Transfer(sender, recipient, (data.tAmountSent - data.tSellFeeTotal)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH_unflattned.sol\":20439:20455  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH_unflattned.sol\":20490:20508  data.tSellFeeTotal */\n      0xc0\n      dup3\n      add\n      mload\n        /* \"METH_unflattned.sol\":20406:20524  TransferToExcluded(... */\n      0xff000e16c1c0d33b07404c2b2abb9832356b5cfd57566d73c9d09611f030890d\n      swap2\n        /* \"METH_unflattned.sol\":20439:20455  data.tAmountSent */\n      swap1\n        /* \"METH_unflattned.sol\":20471:20508  data.tAmountSent - data.tSellFeeTotal */\n      tag_399\n      swap1\n        /* \"METH_unflattned.sol\":20439:20455  data.tAmountSent */\n      dup3\n        /* \"METH_unflattned.sol\":20471:20508  data.tAmountSent - data.tSellFeeTotal */\n      tag_164\n      jump\t// in\n        /* \"METH_unflattned.sol\":22644:23580  function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_366:\n        /* \"METH_unflattned.sol\":22746:22770  TransferData memory data */\n      tag_426\n      tag_378\n      jump\t// in\n    tag_426:\n        /* \"METH_unflattned.sol\":22884:22910  data.tAmountSent = tAmount */\n      dup2\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":22950:22960  _getRate() */\n      tag_427\n        /* \"METH_unflattned.sol\":22950:22958  _getRate */\n      tag_110\n        /* \"METH_unflattned.sol\":22950:22960  _getRate() */\n      jump\t// in\n    tag_427:\n        /* \"METH_unflattned.sol\":22940:22960  tAmount * _getRate() */\n      tag_428\n      swap1\n        /* \"METH_unflattned.sol\":22940:22947  tAmount */\n      dup4\n        /* \"METH_unflattned.sol\":22940:22960  tAmount * _getRate() */\n      tag_386\n      jump\t// in\n    tag_428:\n        /* \"METH_unflattned.sol\":22921:22937  data.rAmountSent */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"METH_unflattned.sol\":22921:22960  data.rAmountSent = tAmount * _getRate() */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"METH_unflattned.sol\":23077:23093  data.tAmountSent */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":23058:23073  _tOwned[sender] */\n      dup7\n      and\n        /* \"METH_unflattned.sol\":23077:23093  data.tAmountSent */\n      0x00\n        /* \"METH_unflattned.sol\":23058:23073  _tOwned[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":23058:23065  _tOwned */\n      0x69\n        /* \"METH_unflattned.sol\":23058:23073  _tOwned[sender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH_unflattned.sol\":23058:23093  _tOwned[sender] -= data.tAmountSent */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":23077:23093  data.tAmountSent */\n      swap2\n      swap3\n        /* \"METH_unflattned.sol\":23058:23073  _tOwned[sender] */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":23058:23093  _tOwned[sender] -= data.tAmountSent */\n      tag_429\n      swap1\n        /* \"METH_unflattned.sol\":23077:23093  data.tAmountSent */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":23058:23093  _tOwned[sender] -= data.tAmountSent */\n      tag_164\n      jump\t// in\n    tag_429:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":23123:23139  data.rAmountSent */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":23104:23119  _rOwned[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":23104:23111  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":23104:23119  _rOwned[sender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH_unflattned.sol\":23104:23139  _rOwned[sender] -= data.rAmountSent */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":23123:23139  data.rAmountSent */\n      swap2\n      swap3\n        /* \"METH_unflattned.sol\":23104:23119  _rOwned[sender] */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":23104:23139  _rOwned[sender] -= data.rAmountSent */\n      tag_430\n      swap1\n        /* \"METH_unflattned.sol\":23123:23139  data.rAmountSent */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":23104:23139  _rOwned[sender] -= data.rAmountSent */\n      tag_164\n      jump\t// in\n    tag_430:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":23243:23259  data.tAmountSent */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":23221:23239  _tOwned[recipient] */\n      dup5\n      and\n        /* \"METH_unflattned.sol\":23243:23259  data.tAmountSent */\n      0x00\n        /* \"METH_unflattned.sol\":23221:23239  _tOwned[recipient] */\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":23221:23228  _tOwned */\n      0x69\n        /* \"METH_unflattned.sol\":23221:23239  _tOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH_unflattned.sol\":23221:23259  _tOwned[recipient] += data.tAmountSent */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":23221:23239  _tOwned[recipient] */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":23243:23259  data.tAmountSent */\n      swap1\n        /* \"METH_unflattned.sol\":23221:23259  _tOwned[recipient] += data.tAmountSent */\n      tag_431\n      swap1\n        /* \"METH_unflattned.sol\":23243:23259  data.tAmountSent */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":23221:23259  _tOwned[recipient] += data.tAmountSent */\n      tag_171\n      jump\t// in\n    tag_431:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":23292:23308  data.rAmountSent */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":23270:23288  _rOwned[recipient] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":23270:23277  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":23270:23288  _rOwned[recipient] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH_unflattned.sol\":23270:23308  _rOwned[recipient] += data.rAmountSent */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":23292:23308  data.rAmountSent */\n      swap2\n      swap3\n        /* \"METH_unflattned.sol\":23270:23288  _rOwned[recipient] */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":23270:23308  _rOwned[recipient] += data.rAmountSent */\n      tag_432\n      swap1\n        /* \"METH_unflattned.sol\":23292:23308  data.rAmountSent */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":23270:23308  _rOwned[recipient] += data.rAmountSent */\n      tag_171\n      jump\t// in\n    tag_432:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":23413:23429  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH_unflattned.sol\":23385:23430  Transfer(sender, recipient, data.tAmountSent) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":23385:23430  Transfer(sender, recipient, data.tAmountSent) */\n      dup5\n      dup2\n      and\n      swap2\n      swap1\n      dup7\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH_unflattned.sol\":23385:23430  Transfer(sender, recipient, data.tAmountSent) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH_unflattned.sol\":23483:23499  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH_unflattned.sol\":23448:23572  TransferBothExcluded(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2761:2786   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2802:2820   */\n      dup2\n      add\n        /* \"#utility.yul\":2795:2829   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"METH_unflattned.sol\":23448:23572  TransferBothExcluded(... */\n      0x2541109a23d530c06d62a3bf63d8d03107194870126fddb7170c0daef360cd8a\n      swap2\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"METH_unflattned.sol\":23448:23572  TransferBothExcluded(... */\n      tag_400\n        /* \"#utility.yul\":2587:2835   */\n      jump\n        /* \"METH_unflattned.sol\":23721:24648  function _transferStandard(address sender, address recipient, uint256 tAmount) private {... */\n    tag_369:\n        /* \"METH_unflattned.sol\":23819:23843  TransferData memory data */\n      tag_436\n      tag_378\n      jump\t// in\n    tag_436:\n        /* \"METH_unflattned.sol\":23989:24008  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"METH_unflattned.sol\":23968:23986  rBalanceOf(sender) */\n      tag_437\n        /* \"METH_unflattned.sol\":23979:23985  sender */\n      dup6\n        /* \"METH_unflattned.sol\":23968:23978  rBalanceOf */\n      tag_80\n        /* \"METH_unflattned.sol\":23968:23986  rBalanceOf(sender) */\n      jump\t// in\n    tag_437:\n        /* \"METH_unflattned.sol\":23968:24008  rBalanceOf(sender) - 1000000000000000000 */\n      tag_438\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_438:\n        /* \"METH_unflattned.sol\":23957:23964  tAmount */\n      dup3\n        /* \"METH_unflattned.sol\":23957:24008  tAmount <= rBalanceOf(sender) - 1000000000000000000 */\n      gt\n      iszero\n        /* \"METH_unflattned.sol\":23949:24042  require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\") */\n      tag_439\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13540:13542   */\n      0x20\n        /* \"METH_unflattned.sol\":23949:24042  require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13522:13543   */\n      mstore\n        /* \"#utility.yul\":13579:13581   */\n      0x1d\n        /* \"#utility.yul\":13559:13577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13552:13582   */\n      mstore\n        /* \"#utility.yul\":13618:13649   */\n      0x596f7520676f747461206b6565702031204d45544820616c7761797321000000\n        /* \"#utility.yul\":13598:13616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13591:13650   */\n      mstore\n        /* \"#utility.yul\":13667:13685   */\n      0x64\n      add\n        /* \"METH_unflattned.sol\":23949:24042  require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\") */\n      tag_176\n        /* \"#utility.yul\":13338:13691   */\n      jump\n        /* \"METH_unflattned.sol\":23949:24042  require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\") */\n    tag_439:\n        /* \"METH_unflattned.sol\":24101:24127  data.tAmountSent = tAmount */\n      dup2\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":24167:24177  _getRate() */\n      tag_442\n        /* \"METH_unflattned.sol\":24167:24175  _getRate */\n      tag_110\n        /* \"METH_unflattned.sol\":24167:24177  _getRate() */\n      jump\t// in\n    tag_442:\n        /* \"METH_unflattned.sol\":24157:24177  tAmount * _getRate() */\n      tag_443\n      swap1\n        /* \"METH_unflattned.sol\":24157:24164  tAmount */\n      dup4\n        /* \"METH_unflattned.sol\":24157:24177  tAmount * _getRate() */\n      tag_386\n      jump\t// in\n    tag_443:\n        /* \"METH_unflattned.sol\":24138:24154  data.rAmountSent */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"METH_unflattned.sol\":24138:24177  data.rAmountSent = tAmount * _getRate() */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":24294:24309  _rOwned[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":24294:24301  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":24294:24309  _rOwned[sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH_unflattned.sol\":24294:24329  _rOwned[sender] -= data.rAmountSent */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":24294:24309  _rOwned[sender] */\n      swap1\n      swap2\n      swap1\n        /* \"METH_unflattned.sol\":24294:24329  _rOwned[sender] -= data.rAmountSent */\n      tag_444\n      swap1\n        /* \"METH_unflattned.sol\":24138:24177  data.rAmountSent = tAmount * _getRate() */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":24294:24329  _rOwned[sender] -= data.rAmountSent */\n      tag_164\n      jump\t// in\n    tag_444:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":24448:24464  data.rAmountSent */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":24426:24444  _rOwned[recipient] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH_unflattned.sol\":24426:24433  _rOwned */\n      0x6a\n        /* \"METH_unflattned.sol\":24426:24444  _rOwned[recipient] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH_unflattned.sol\":24426:24464  _rOwned[recipient] += data.rAmountSent */\n      dup1\n      sload\n        /* \"METH_unflattned.sol\":24448:24464  data.rAmountSent */\n      swap2\n      swap3\n        /* \"METH_unflattned.sol\":24426:24444  _rOwned[recipient] */\n      swap1\n      swap2\n        /* \"METH_unflattned.sol\":24426:24464  _rOwned[recipient] += data.rAmountSent */\n      tag_445\n      swap1\n        /* \"METH_unflattned.sol\":24448:24464  data.rAmountSent */\n      dup5\n      swap1\n        /* \"METH_unflattned.sol\":24426:24464  _rOwned[recipient] += data.rAmountSent */\n      tag_171\n      jump\t// in\n    tag_445:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH_unflattned.sol\":24511:24527  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH_unflattned.sol\":24482:24529  Transfer(sender, recipient, (data.tAmountSent)) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH_unflattned.sol\":24482:24529  Transfer(sender, recipient, (data.tAmountSent)) */\n      dup5\n      dup2\n      and\n      swap2\n      swap1\n      dup7\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH_unflattned.sol\":24482:24529  Transfer(sender, recipient, (data.tAmountSent)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH_unflattned.sol\":24578:24594  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH_unflattned.sol\":24547:24640  TransferStandard(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2761:2786   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2802:2820   */\n      dup2\n      add\n        /* \"#utility.yul\":2795:2829   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"METH_unflattned.sol\":24547:24640  TransferStandard(... */\n      0xd9923e08d9d88ff7a7e9b8460f3163dc6b887fabe315449da3b5cd16bb5e9340\n      swap2\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"METH_unflattned.sol\":24547:24640  TransferStandard(... */\n      tag_400\n        /* \"#utility.yul\":2587:2835   */\n      jump\n    tag_378:\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_448:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_458:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_458)\n    tag_460:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:665   */\n    tag_41:\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup2\n        /* \"#utility.yul\":400:421   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      mload\n        /* \"#utility.yul\":493:499   */\n      dup1\n        /* \"#utility.yul\":488:490   */\n      0x20\n        /* \"#utility.yul\":477:486   */\n      dup5\n        /* \"#utility.yul\":473:491   */\n      add\n        /* \"#utility.yul\":466:500   */\n      mstore\n        /* \"#utility.yul\":509:588   */\n      tag_462\n        /* \"#utility.yul\":581:587   */\n      dup2\n        /* \"#utility.yul\":576:578   */\n      0x40\n        /* \"#utility.yul\":565:574   */\n      dup6\n        /* \"#utility.yul\":561:579   */\n      add\n        /* \"#utility.yul\":556:558   */\n      0x20\n        /* \"#utility.yul\":548:554   */\n      dup8\n        /* \"#utility.yul\":544:559   */\n      add\n        /* \"#utility.yul\":509:588   */\n      tag_448\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":649:651   */\n      0x1f\n        /* \"#utility.yul\":628:643   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":624:653   */\n      and\n        /* \"#utility.yul\":609:654   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":656:658   */\n      0x40\n        /* \"#utility.yul\":605:659   */\n      add\n      swap3\n        /* \"#utility.yul\":269:665   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:843   */\n    tag_449:\n        /* \"#utility.yul\":738:758   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":787:818   */\n      dup2\n      and\n        /* \"#utility.yul\":777:819   */\n      dup2\n      eq\n        /* \"#utility.yul\":767:837   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":848:1102   */\n    tag_44:\n        /* \"#utility.yul\":916:922   */\n      0x00\n        /* \"#utility.yul\":924:930   */\n      dup1\n        /* \"#utility.yul\":977:979   */\n      0x40\n        /* \"#utility.yul\":965:974   */\n      dup4\n        /* \"#utility.yul\":956:963   */\n      dup6\n        /* \"#utility.yul\":952:975   */\n      sub\n        /* \"#utility.yul\":948:980   */\n      slt\n        /* \"#utility.yul\":945:997   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":993:994   */\n      0x00\n        /* \"#utility.yul\":990:991   */\n      dup1\n        /* \"#utility.yul\":983:995   */\n      revert\n        /* \"#utility.yul\":945:997   */\n    tag_466:\n        /* \"#utility.yul\":1016:1045   */\n      tag_467\n        /* \"#utility.yul\":1035:1044   */\n      dup4\n        /* \"#utility.yul\":1016:1045   */\n      tag_449\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":1006:1045   */\n      swap5\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1077:1095   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1064:1096   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":848:1102   */\n      jump\t// out\n        /* \"#utility.yul\":1481:1809   */\n    tag_54:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1566:1572   */\n      dup1\n        /* \"#utility.yul\":1574:1580   */\n      0x00\n        /* \"#utility.yul\":1627:1629   */\n      0x60\n        /* \"#utility.yul\":1615:1624   */\n      dup5\n        /* \"#utility.yul\":1606:1613   */\n      dup7\n        /* \"#utility.yul\":1602:1625   */\n      sub\n        /* \"#utility.yul\":1598:1630   */\n      slt\n        /* \"#utility.yul\":1595:1647   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1640:1641   */\n      dup1\n        /* \"#utility.yul\":1633:1645   */\n      revert\n        /* \"#utility.yul\":1595:1647   */\n    tag_471:\n        /* \"#utility.yul\":1666:1695   */\n      tag_472\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1666:1695   */\n      tag_449\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":1656:1695   */\n      swap3\n      pop\n        /* \"#utility.yul\":1714:1752   */\n      tag_473\n        /* \"#utility.yul\":1748:1750   */\n      0x20\n        /* \"#utility.yul\":1737:1746   */\n      dup6\n        /* \"#utility.yul\":1733:1751   */\n      add\n        /* \"#utility.yul\":1714:1752   */\n      tag_449\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":1704:1752   */\n      swap2\n      pop\n        /* \"#utility.yul\":1799:1801   */\n      0x40\n        /* \"#utility.yul\":1788:1797   */\n      dup5\n        /* \"#utility.yul\":1784:1802   */\n      add\n        /* \"#utility.yul\":1771:1803   */\n      calldataload\n        /* \"#utility.yul\":1761:1803   */\n      swap1\n      pop\n        /* \"#utility.yul\":1481:1809   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2003:2183   */\n    tag_70:\n        /* \"#utility.yul\":2062:2068   */\n      0x00\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2103:2112   */\n      dup3\n        /* \"#utility.yul\":2094:2101   */\n      dup5\n        /* \"#utility.yul\":2090:2113   */\n      sub\n        /* \"#utility.yul\":2086:2118   */\n      slt\n        /* \"#utility.yul\":2083:2135   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2128:2129   */\n      dup1\n        /* \"#utility.yul\":2121:2133   */\n      revert\n        /* \"#utility.yul\":2083:2135   */\n    tag_476:\n      pop\n        /* \"#utility.yul\":2154:2177   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2003:2183   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2582   */\n    tag_79:\n        /* \"#utility.yul\":2455:2461   */\n      0x00\n        /* \"#utility.yul\":2508:2510   */\n      0x20\n        /* \"#utility.yul\":2496:2505   */\n      dup3\n        /* \"#utility.yul\":2487:2494   */\n      dup5\n        /* \"#utility.yul\":2483:2506   */\n      sub\n        /* \"#utility.yul\":2479:2511   */\n      slt\n        /* \"#utility.yul\":2476:2528   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":2524:2525   */\n      0x00\n        /* \"#utility.yul\":2521:2522   */\n      dup1\n        /* \"#utility.yul\":2514:2526   */\n      revert\n        /* \"#utility.yul\":2476:2528   */\n    tag_479:\n        /* \"#utility.yul\":2547:2576   */\n      tag_480\n        /* \"#utility.yul\":2566:2575   */\n      dup3\n        /* \"#utility.yul\":2547:2576   */\n      tag_449\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":2537:2576   */\n      swap4\n        /* \"#utility.yul\":2396:2582   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2840:3113   */\n    tag_101:\n        /* \"#utility.yul\":2896:2902   */\n      0x00\n        /* \"#utility.yul\":2949:2951   */\n      0x20\n        /* \"#utility.yul\":2937:2946   */\n      dup3\n        /* \"#utility.yul\":2928:2935   */\n      dup5\n        /* \"#utility.yul\":2924:2947   */\n      sub\n        /* \"#utility.yul\":2920:2952   */\n      slt\n        /* \"#utility.yul\":2917:2969   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":2965:2966   */\n      0x00\n        /* \"#utility.yul\":2962:2963   */\n      dup1\n        /* \"#utility.yul\":2955:2967   */\n      revert\n        /* \"#utility.yul\":2917:2969   */\n    tag_483:\n        /* \"#utility.yul\":3004:3013   */\n      dup2\n        /* \"#utility.yul\":2991:3014   */\n      calldataload\n        /* \"#utility.yul\":3057:3062   */\n      dup1\n        /* \"#utility.yul\":3050:3063   */\n      iszero\n        /* \"#utility.yul\":3043:3064   */\n      iszero\n        /* \"#utility.yul\":3036:3041   */\n      dup2\n        /* \"#utility.yul\":3033:3065   */\n      eq\n        /* \"#utility.yul\":3023:3083   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":3079:3080   */\n      0x00\n        /* \"#utility.yul\":3076:3077   */\n      dup1\n        /* \"#utility.yul\":3069:3081   */\n      revert\n        /* \"#utility.yul\":3118:3378   */\n    tag_138:\n        /* \"#utility.yul\":3186:3192   */\n      0x00\n        /* \"#utility.yul\":3194:3200   */\n      dup1\n        /* \"#utility.yul\":3247:3249   */\n      0x40\n        /* \"#utility.yul\":3235:3244   */\n      dup4\n        /* \"#utility.yul\":3226:3233   */\n      dup6\n        /* \"#utility.yul\":3222:3245   */\n      sub\n        /* \"#utility.yul\":3218:3250   */\n      slt\n        /* \"#utility.yul\":3215:3267   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3260:3261   */\n      dup1\n        /* \"#utility.yul\":3253:3265   */\n      revert\n        /* \"#utility.yul\":3215:3267   */\n    tag_486:\n        /* \"#utility.yul\":3286:3315   */\n      tag_487\n        /* \"#utility.yul\":3305:3314   */\n      dup4\n        /* \"#utility.yul\":3286:3315   */\n      tag_449\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3276:3315   */\n      swap2\n      pop\n        /* \"#utility.yul\":3334:3372   */\n      tag_488\n        /* \"#utility.yul\":3368:3370   */\n      0x20\n        /* \"#utility.yul\":3357:3366   */\n      dup5\n        /* \"#utility.yul\":3353:3371   */\n      add\n        /* \"#utility.yul\":3334:3372   */\n      tag_449\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3324:3372   */\n      swap1\n      pop\n        /* \"#utility.yul\":3118:3378   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3383:3763   */\n    tag_146:\n        /* \"#utility.yul\":3462:3463   */\n      0x01\n        /* \"#utility.yul\":3458:3470   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3505:3517   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3526:3587   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":3580:3584   */\n      0x7f\n        /* \"#utility.yul\":3572:3578   */\n      dup3\n        /* \"#utility.yul\":3568:3585   */\n      and\n        /* \"#utility.yul\":3558:3585   */\n      swap2\n      pop\n        /* \"#utility.yul\":3526:3587   */\n    tag_490:\n        /* \"#utility.yul\":3633:3635   */\n      0x20\n        /* \"#utility.yul\":3625:3631   */\n      dup3\n        /* \"#utility.yul\":3622:3636   */\n      lt\n        /* \"#utility.yul\":3602:3620   */\n      dup2\n        /* \"#utility.yul\":3599:3637   */\n      sub\n        /* \"#utility.yul\":3596:3757   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":3679:3689   */\n      0x4e487b71\n        /* \"#utility.yul\":3674:3677   */\n      0xe0\n        /* \"#utility.yul\":3670:3690   */\n      shl\n        /* \"#utility.yul\":3667:3668   */\n      0x00\n        /* \"#utility.yul\":3660:3691   */\n      mstore\n        /* \"#utility.yul\":3714:3718   */\n      0x22\n        /* \"#utility.yul\":3711:3712   */\n      0x04\n        /* \"#utility.yul\":3704:3719   */\n      mstore\n        /* \"#utility.yul\":3742:3746   */\n      0x24\n        /* \"#utility.yul\":3739:3740   */\n      0x00\n        /* \"#utility.yul\":3732:3747   */\n      revert\n        /* \"#utility.yul\":3596:3757   */\n    tag_491:\n      pop\n        /* \"#utility.yul\":3383:3763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3768:3895   */\n    tag_450:\n        /* \"#utility.yul\":3829:3839   */\n      0x4e487b71\n        /* \"#utility.yul\":3824:3827   */\n      0xe0\n        /* \"#utility.yul\":3820:3840   */\n      shl\n        /* \"#utility.yul\":3817:3818   */\n      0x00\n        /* \"#utility.yul\":3810:3841   */\n      mstore\n        /* \"#utility.yul\":3860:3864   */\n      0x11\n        /* \"#utility.yul\":3857:3858   */\n      0x04\n        /* \"#utility.yul\":3850:3865   */\n      mstore\n        /* \"#utility.yul\":3884:3888   */\n      0x24\n        /* \"#utility.yul\":3881:3882   */\n      0x00\n        /* \"#utility.yul\":3874:3889   */\n      revert\n        /* \"#utility.yul\":3900:4028   */\n    tag_164:\n        /* \"#utility.yul\":3967:3976   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3988:3999   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3985:4022   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":4002:4020   */\n      tag_151\n      tag_450\n      jump\t// in\n        /* \"#utility.yul\":4033:4158   */\n    tag_171:\n        /* \"#utility.yul\":4098:4107   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4119:4129   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4116:4152   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":4132:4150   */\n      tag_151\n      tag_450\n      jump\t// in\n        /* \"#utility.yul\":4574:4701   */\n    tag_451:\n        /* \"#utility.yul\":4635:4645   */\n      0x4e487b71\n        /* \"#utility.yul\":4630:4633   */\n      0xe0\n        /* \"#utility.yul\":4626:4646   */\n      shl\n        /* \"#utility.yul\":4623:4624   */\n      0x00\n        /* \"#utility.yul\":4616:4647   */\n      mstore\n        /* \"#utility.yul\":4666:4670   */\n      0x12\n        /* \"#utility.yul\":4663:4664   */\n      0x04\n        /* \"#utility.yul\":4656:4671   */\n      mstore\n        /* \"#utility.yul\":4690:4694   */\n      0x24\n        /* \"#utility.yul\":4687:4688   */\n      0x00\n        /* \"#utility.yul\":4680:4695   */\n      revert\n        /* \"#utility.yul\":4706:4826   */\n    tag_182:\n        /* \"#utility.yul\":4746:4747   */\n      0x00\n        /* \"#utility.yul\":4772:4773   */\n      dup3\n        /* \"#utility.yul\":4762:4797   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":4777:4795   */\n      tag_503\n      tag_451\n      jump\t// in\n    tag_503:\n      pop\n        /* \"#utility.yul\":4811:4820   */\n      div\n      swap1\n        /* \"#utility.yul\":4706:4826   */\n      jump\t// out\n        /* \"#utility.yul\":5246:5373   */\n    tag_452:\n        /* \"#utility.yul\":5307:5317   */\n      0x4e487b71\n        /* \"#utility.yul\":5302:5305   */\n      0xe0\n        /* \"#utility.yul\":5298:5318   */\n      shl\n        /* \"#utility.yul\":5295:5296   */\n      0x00\n        /* \"#utility.yul\":5288:5319   */\n      mstore\n        /* \"#utility.yul\":5338:5342   */\n      0x41\n        /* \"#utility.yul\":5335:5336   */\n      0x04\n        /* \"#utility.yul\":5328:5343   */\n      mstore\n        /* \"#utility.yul\":5362:5366   */\n      0x24\n        /* \"#utility.yul\":5359:5360   */\n      0x00\n        /* \"#utility.yul\":5352:5367   */\n      revert\n        /* \"#utility.yul\":5504:6022   */\n    tag_454:\n        /* \"#utility.yul\":5606:5608   */\n      0x1f\n        /* \"#utility.yul\":5601:5604   */\n      dup3\n        /* \"#utility.yul\":5598:5609   */\n      gt\n        /* \"#utility.yul\":5595:6016   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5642:5647   */\n      dup1\n        /* \"#utility.yul\":5639:5640   */\n      0x00\n        /* \"#utility.yul\":5632:5648   */\n      mstore\n        /* \"#utility.yul\":5686:5690   */\n      0x20\n        /* \"#utility.yul\":5683:5684   */\n      0x00\n        /* \"#utility.yul\":5673:5691   */\n      keccak256\n        /* \"#utility.yul\":5756:5758   */\n      0x1f\n        /* \"#utility.yul\":5744:5754   */\n      dup5\n        /* \"#utility.yul\":5740:5759   */\n      add\n        /* \"#utility.yul\":5737:5738   */\n      0x05\n        /* \"#utility.yul\":5733:5760   */\n      shr\n        /* \"#utility.yul\":5727:5731   */\n      dup2\n        /* \"#utility.yul\":5723:5761   */\n      add\n        /* \"#utility.yul\":5792:5796   */\n      0x20\n        /* \"#utility.yul\":5780:5790   */\n      dup6\n        /* \"#utility.yul\":5777:5797   */\n      lt\n        /* \"#utility.yul\":5774:5821   */\n      iszero\n      tag_509\n      jumpi\n      pop\n        /* \"#utility.yul\":5815:5819   */\n      dup1\n        /* \"#utility.yul\":5774:5821   */\n    tag_509:\n        /* \"#utility.yul\":5870:5872   */\n      0x1f\n        /* \"#utility.yul\":5865:5868   */\n      dup5\n        /* \"#utility.yul\":5861:5873   */\n      add\n        /* \"#utility.yul\":5858:5859   */\n      0x05\n        /* \"#utility.yul\":5854:5874   */\n      shr\n        /* \"#utility.yul\":5848:5852   */\n      dup3\n        /* \"#utility.yul\":5844:5875   */\n      add\n        /* \"#utility.yul\":5834:5875   */\n      swap2\n      pop\n        /* \"#utility.yul\":5925:6006   */\n    tag_510:\n        /* \"#utility.yul\":5943:5945   */\n      dup2\n        /* \"#utility.yul\":5936:5941   */\n      dup2\n        /* \"#utility.yul\":5933:5946   */\n      lt\n        /* \"#utility.yul\":5925:6006   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":6002:6003   */\n      0x00\n        /* \"#utility.yul\":5988:6004   */\n      dup2\n      sstore\n        /* \"#utility.yul\":5969:5970   */\n      0x01\n        /* \"#utility.yul\":5958:5971   */\n      add\n        /* \"#utility.yul\":5925:6006   */\n      jump(tag_510)\n    tag_512:\n        /* \"#utility.yul\":5929:5932   */\n      pop\n      pop\n        /* \"#utility.yul\":5504:6022   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6198:7543   */\n    tag_209:\n        /* \"#utility.yul\":6324:6327   */\n      dup2\n        /* \"#utility.yul\":6318:6328   */\n      mload\n        /* \"#utility.yul\":6351:6369   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6343:6349   */\n      dup2\n        /* \"#utility.yul\":6340:6370   */\n      gt\n        /* \"#utility.yul\":6337:6393   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":6373:6391   */\n      tag_516\n      tag_452\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6402:6499   */\n      tag_517\n        /* \"#utility.yul\":6492:6498   */\n      dup2\n        /* \"#utility.yul\":6452:6490   */\n      tag_518\n        /* \"#utility.yul\":6484:6488   */\n      dup5\n        /* \"#utility.yul\":6478:6489   */\n      sload\n        /* \"#utility.yul\":6452:6490   */\n      tag_146\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":6446:6450   */\n      dup5\n        /* \"#utility.yul\":6402:6499   */\n      tag_454\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":6554:6558   */\n      0x20\n      dup1\n        /* \"#utility.yul\":6611:6613   */\n      0x1f\n        /* \"#utility.yul\":6600:6614   */\n      dup4\n      gt\n        /* \"#utility.yul\":6628:6629   */\n      0x01\n        /* \"#utility.yul\":6623:7286   */\n      dup2\n      eq\n      tag_520\n      jumpi\n        /* \"#utility.yul\":7330:7331   */\n      0x00\n        /* \"#utility.yul\":7347:7353   */\n      dup5\n        /* \"#utility.yul\":7344:7433   */\n      iszero\n      tag_521\n      jumpi\n      pop\n        /* \"#utility.yul\":7399:7418   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":7393:7419   */\n      mload\n        /* \"#utility.yul\":7344:7433   */\n    tag_521:\n      not(0x00)\n        /* \"#utility.yul\":6155:6156   */\n      0x03\n        /* \"#utility.yul\":6151:6162   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6147:6171   */\n      shr\n        /* \"#utility.yul\":6143:6172   */\n      not\n        /* \"#utility.yul\":6133:6173   */\n      and\n        /* \"#utility.yul\":6179:6180   */\n      0x01\n        /* \"#utility.yul\":6175:6186   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6130:6187   */\n      or\n        /* \"#utility.yul\":7446:7527   */\n      dup6\n      sstore\n        /* \"#utility.yul\":6593:7537   */\n      jump(tag_519)\n        /* \"#utility.yul\":6623:7286   */\n    tag_520:\n        /* \"#utility.yul\":5451:5452   */\n      0x00\n        /* \"#utility.yul\":5444:5458   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5488:5492   */\n      0x20\n        /* \"#utility.yul\":5475:5493   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":6659:6679   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":6777:7013   */\n    tag_524:\n        /* \"#utility.yul\":6791:6798   */\n      dup3\n        /* \"#utility.yul\":6788:6789   */\n      dup2\n        /* \"#utility.yul\":6785:6799   */\n      lt\n        /* \"#utility.yul\":6777:7013   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":6880:6899   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":6874:6900   */\n      mload\n        /* \"#utility.yul\":6859:6901   */\n      dup3\n      sstore\n        /* \"#utility.yul\":6972:6999   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":6940:6941   */\n      0x01\n        /* \"#utility.yul\":6928:6942   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":6807:6826   */\n      dup5\n      add\n        /* \"#utility.yul\":6777:7013   */\n      jump(tag_524)\n    tag_526:\n        /* \"#utility.yul\":6781:6784   */\n      pop\n        /* \"#utility.yul\":7041:7047   */\n      dup6\n        /* \"#utility.yul\":7032:7039   */\n      dup3\n        /* \"#utility.yul\":7029:7048   */\n      lt\n        /* \"#utility.yul\":7026:7227   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":7102:7121   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":7096:7122   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":7185:7186   */\n      0x03\n        /* \"#utility.yul\":7181:7195   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":7197:7200   */\n      0xf8\n        /* \"#utility.yul\":7177:7201   */\n      and\n        /* \"#utility.yul\":7173:7210   */\n      shr\n        /* \"#utility.yul\":7169:7211   */\n      not\n        /* \"#utility.yul\":7154:7212   */\n      and\n        /* \"#utility.yul\":7139:7213   */\n      dup2\n      sstore\n        /* \"#utility.yul\":7026:7227   */\n    tag_527:\n      pop\n      pop\n        /* \"#utility.yul\":7273:7274   */\n      0x01\n        /* \"#utility.yul\":7264:7270   */\n      dup5\n        /* \"#utility.yul\":7261:7262   */\n      0x01\n        /* \"#utility.yul\":7257:7271   */\n      shl\n        /* \"#utility.yul\":7253:7275   */\n      add\n        /* \"#utility.yul\":7247:7251   */\n      dup6\n        /* \"#utility.yul\":7240:7276   */\n      sstore\n        /* \"#utility.yul\":6593:7537   */\n    tag_519:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6198:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7548:7660   */\n    tag_212:\n        /* \"#utility.yul\":7580:7581   */\n      0x00\n        /* \"#utility.yul\":7606:7607   */\n      dup3\n        /* \"#utility.yul\":7596:7631   */\n      tag_530\n      jumpi\n        /* \"#utility.yul\":7611:7629   */\n      tag_530\n      tag_451\n      jump\t// in\n    tag_530:\n      pop\n        /* \"#utility.yul\":7645:7654   */\n      mod\n      swap1\n        /* \"#utility.yul\":7548:7660   */\n      jump\t// out\n        /* \"#utility.yul\":7864:7991   */\n    tag_239:\n        /* \"#utility.yul\":7925:7935   */\n      0x4e487b71\n        /* \"#utility.yul\":7920:7923   */\n      0xe0\n        /* \"#utility.yul\":7916:7936   */\n      shl\n        /* \"#utility.yul\":7913:7914   */\n      0x00\n        /* \"#utility.yul\":7906:7937   */\n      mstore\n        /* \"#utility.yul\":7956:7960   */\n      0x32\n        /* \"#utility.yul\":7953:7954   */\n      0x04\n        /* \"#utility.yul\":7946:7961   */\n      mstore\n        /* \"#utility.yul\":7980:7984   */\n      0x24\n        /* \"#utility.yul\":7977:7978   */\n      0x00\n        /* \"#utility.yul\":7970:7985   */\n      revert\n        /* \"#utility.yul\":10431:10835   */\n    tag_309:\n        /* \"#utility.yul\":10633:10635   */\n      0x20\n        /* \"#utility.yul\":10615:10636   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10672:10674   */\n      0x28\n        /* \"#utility.yul\":10652:10670   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10645:10675   */\n      mstore\n        /* \"#utility.yul\":10711:10745   */\n      0x5472616e7366657220616d6f756e74206578636565647320746865206d617854\n        /* \"#utility.yul\":10706:10708   */\n      0x40\n        /* \"#utility.yul\":10691:10709   */\n      dup3\n      add\n        /* \"#utility.yul\":10684:10746   */\n      mstore\n      shl(0xc1, 0x3c20b6b7bab73a17)\n        /* \"#utility.yul\":10777:10779   */\n      0x60\n        /* \"#utility.yul\":10762:10780   */\n      dup3\n      add\n        /* \"#utility.yul\":10755:10793   */\n      mstore\n        /* \"#utility.yul\":10825:10828   */\n      0x80\n        /* \"#utility.yul\":10810:10829   */\n      add\n      swap1\n        /* \"#utility.yul\":10431:10835   */\n      jump\t// out\n        /* \"#utility.yul\":11201:11608   */\n    tag_331:\n        /* \"#utility.yul\":11403:11405   */\n      0x20\n        /* \"#utility.yul\":11385:11406   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11442:11444   */\n      0x2b\n        /* \"#utility.yul\":11422:11440   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11415:11445   */\n      mstore\n        /* \"#utility.yul\":11481:11515   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":11476:11478   */\n      0x40\n        /* \"#utility.yul\":11461:11479   */\n      dup3\n      add\n        /* \"#utility.yul\":11454:11516   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":11547:11549   */\n      0x60\n        /* \"#utility.yul\":11532:11550   */\n      dup3\n      add\n        /* \"#utility.yul\":11525:11566   */\n      mstore\n        /* \"#utility.yul\":11598:11601   */\n      0x80\n        /* \"#utility.yul\":11583:11602   */\n      add\n      swap1\n        /* \"#utility.yul\":11201:11608   */\n      jump\t// out\n        /* \"#utility.yul\":11613:11900   */\n    tag_337:\n        /* \"#utility.yul\":11742:11745   */\n      0x00\n        /* \"#utility.yul\":11780:11786   */\n      dup3\n        /* \"#utility.yul\":11774:11787   */\n      mload\n        /* \"#utility.yul\":11796:11862   */\n      tag_543\n        /* \"#utility.yul\":11855:11861   */\n      dup2\n        /* \"#utility.yul\":11850:11853   */\n      dup5\n        /* \"#utility.yul\":11843:11847   */\n      0x20\n        /* \"#utility.yul\":11835:11841   */\n      dup8\n        /* \"#utility.yul\":11831:11848   */\n      add\n        /* \"#utility.yul\":11796:11862   */\n      tag_448\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":11878:11894   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11613:11900   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12738:12906   */\n    tag_386:\n        /* \"#utility.yul\":12811:12820   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12842:12851   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12859:12874   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12853:12875   */\n      dup5\n      eq\n        /* \"#utility.yul\":12839:12876   */\n      or\n        /* \"#utility.yul\":12829:12900   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":12880:12898   */\n      tag_151\n      tag_450\n      jump\t// in\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa2646970667358221220607425d2163f166c2eb888682e1a778ebca45eaea882550e8f989d032ff94c4164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526072805461ff001916905534801561001a575f80fd5b50611fd2806100285f395ff3fe608060405234801561000f575f80fd5b50600436106101bb575f3560e01c80638129fc1c116100f3578063a457c2d711610093578063af465a271161006e578063af465a27146103ae578063cba0e996146103b7578063dd62ed3e146103e2578063f2fde38b1461041a575f80fd5b8063a457c2d714610380578063a9059cbb14610393578063aae5ddd2146103a6575f80fd5b80638da5cb5b116100ce5780638da5cb5b1461035757806394e107841461036857806395d89b411461037057806397a9d56014610378575f80fd5b80638129fc1c1461033357806383f24c091461033b5780638c0b5e221461034e575f80fd5b80634d09deb31161015e578063658c27a911610139578063658c27a9146102a157806370a08231146102cc578063715018a6146102df57806380da2287146102e9575f80fd5b80634d09deb3146102565780634dacf3f5146102815780635319e78f1461028e575f80fd5b806323b872dd1161019957806323b872dd14610212578063313ce56714610225578063395093511461023a57806345e0b9d41461024d575f80fd5b806306fdde03146101bf578063095ea7b3146101dd57806318160ddd14610200575b5f80fd5b6101c761042d565b6040516101d49190611ba8565b60405180910390f35b6101f06101eb366004611bf0565b6104bd565b60405190151581526020016101d4565b606f545b6040519081526020016101d4565b6101f0610220366004611c18565b6104d3565b60675460405160ff90911681526020016101d4565b6101f0610248366004611bf0565b610523565b61020460705481565b610269610264366004611c51565b610559565b6040516001600160a01b0390911681526020016101d4565b6072546101f09060ff1681565b61020461029c366004611c68565b610581565b6101f06102af366004611c68565b6001600160a01b03165f908152606d602052604090205460ff1690565b6102046102da366004611c68565b610630565b6102e7610679565b005b61031e6102f7366004611c68565b6001600160a01b03165f90815260696020908152604080832054606a909252909120549091565b604080519283526020830191909152016101d4565b6102e761068c565b6102e7610349366004611c88565b61094d565b61020460715481565b6033546001600160a01b0316610269565b610204610968565b6101c7610989565b61031e610998565b6101f061038e366004611bf0565b610a4c565b6101f06103a1366004611bf0565b610a82565b610204610a8e565b610204606f5481565b6101f06103c5366004611c68565b6001600160a01b03165f908152606c602052604090205460ff1690565b6102046103f0366004611ca7565b6001600160a01b039182165f908152606b6020908152604080832093909416825291909152205490565b6102e7610428366004611c68565b610aa9565b60606065805461043c90611cd8565b80601f016020809104026020016040519081016040528092919081815260200182805461046890611cd8565b80156104b35780601f1061048a576101008083540402835291602001916104b3565b820191905f5260205f20905b81548152906001019060200180831161049657829003601f168201915b5050505050905090565b5f6104c9338484610b1f565b5060015b92915050565b5f6104df848484610c42565b6001600160a01b0384165f908152606b6020908152604080832033808552925290912054610519918691610514908690611d24565b610b1f565b5060019392505050565b335f818152606b602090815260408083206001600160a01b038716845290915281205490916104c9918590610514908690611d37565b60688181548110610568575f80fd5b5f918252602090912001546001600160a01b0316905081565b6001600160a01b0381165f908152606a60205260408120546070548111156106035760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b5f61060c610968565b9050815f0361061e57505f9392505050565b6106288183611d5e565b949350505050565b6001600160a01b0381165f908152606c602052604081205460ff161561066b57506001600160a01b03165f9081526069602052604090205490565b6104cd82610581565b919050565b610681610fb1565b61068a5f61100b565b565b5f54610100900460ff16158080156106aa57505f54600160ff909116105b806106c35750303b1580156106c357505f5460ff166001145b6107265760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105fa565b5f805460ff191660011790558015610747575f805461ff0019166101001790555b61074f61105c565b60408051808201909152600681526526aa22a9aa2360d11b60208201526065906107799082611dd0565b5060408051808201909152600681526526aa22a9aa2360d11b60208201526066906107a49082611dd0565b506067805460ff191660121790556b204fce5e3e25026110000000606f8190555f19606e8190556107d59190611e90565b606e546107e29190611d24565b6070819055606a5f6107fc6033546001600160a01b031690565b6001600160a01b031681526020808201929092526040015f90812092909255606f54607155606c90527f7febd347df14ea35c529e50fb2dd629d4a6226f5ccc893710fb466f8b83823fc805460ff1990811660019081179092557f8c482e007f935c93984ddf7a647e33ef99566883ffae3563aa616dc14d1632f780548216831790557fb6e99d88b536ae7728c4b89ca5a6073cf06fd2059e0aff5b1a4de2c799d9cb968054821683179055610369909252607280549092161790556108ca6033546001600160a01b031690565b6001600160a01b03165f6001600160a01b03165f80516020611f7d833981519152606f546040516108fd91815260200190565b60405180910390a3801561094a575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b610955610fb1565b6072805460ff1916911515919091179055565b5f805f610973610998565b90925090506109828183611d5e565b9250505090565b60606066805461043c90611cd8565b607054606f545f918291825b606854811015610a4257606a5f606883815481106109c4576109c4611ea3565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546109f29084611d24565b925060695f60688381548110610a0a57610a0a611ea3565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054610a389083611d24565b91506001016109a4565b5090939092509050565b335f818152606b602090815260408083206001600160a01b038716845290915281205490916104c9918590610514908690611d24565b5f6104c9338484610c42565b5f600a610a9a33610630565b610aa49190611d5e565b905090565b610ab1610fb1565b6001600160a01b038116610b165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105fa565b61094a8161100b565b6001600160a01b038316610b815760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105fa565b6001600160a01b038216610be25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105fa565b6001600160a01b038381165f818152606b602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b607254610100900460ff1615610c56575f80fd5b6072805461ff0019166101001790556001600160a01b038316610cc95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105fa565b6001600160a01b038216610d2b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105fa565b5f8111610d8c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105fa565b610d958361108a565b15156001148015610dbe57506001600160a01b0383165f908152606d602052604090205460ff16155b8015610de257506001600160a01b0383165f908152606c602052604090205460ff16155b15610df957610df083611123565b610df9836111ae565b610e028261108a565b15156001148015610e2b57506001600160a01b0382165f908152606d602052604090205460ff16155b8015610e4f57506001600160a01b0382165f908152606c602052604090205460ff16155b15610e6657610e5d82611123565b610e66826111ae565b6033546001600160a01b03848116911614801590610e9257506033546001600160a01b03838116911614155b15610efe576001600160a01b0383165f908152606d602052604090205460ff16158015610ed757506001600160a01b0382165f908152606d602052604090205460ff16155b15610efe57607154811115610efe5760405162461bcd60e51b81526004016105fa90611eb7565b6033546001600160a01b03848116911614801590610f2a57506033546001600160a01b03838116911614155b15610f96576001600160a01b0383165f908152606d602052604090205460ff16158015610f6f57506001600160a01b0382165f908152606d602052604090205460ff16155b15610f9657607154811115610f965760405162461bcd60e51b81526004016105fa90611eb7565b610fa18383836112ba565b50506072805461ff001916905550565b6033546001600160a01b0316331461068a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105fa565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f54610100900460ff166110825760405162461bcd60e51b81526004016105fa90611eff565b61068a6113b6565b60408051600481526024810182526020810180516001600160e01b031663c45a015560e01b17905290515f91829182916001600160a01b038616916110cf9190611f4a565b5f60405180830381855afa9150503d805f8114611107576040519150601f19603f3d011682016040523d82523d5f602084013e61110c565b606091505b509150915081801561062857505115159392505050565b6001600160a01b0381165f908152606d602052604090205460ff161561118b5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c75646564000000000060448201526064016105fa565b6001600160a01b03165f908152606d60205260409020805460ff19166001179055565b6001600160a01b0381165f908152606c602052604090205460ff16156112165760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c75646564000000000060448201526064016105fa565b6001600160a01b0381165f908152606a6020526040902054156112555761123c81610581565b6001600160a01b0382165f908152606960205260409020555b6001600160a01b03165f818152606c60205260408120805460ff191660019081179091556068805491820181559091527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530180546001600160a01b0319169091179055565b6001600160a01b0383165f908152606c602052604090205460ff1680156112f957506001600160a01b0382165f908152606c602052604090205460ff16155b1561130e576113098383836113e5565b505050565b6001600160a01b0383165f908152606c602052604090205460ff1615801561134d57506001600160a01b0382165f908152606c602052604090205460ff165b1561135d5761130983838361164d565b6001600160a01b0383165f908152606c602052604090205460ff16801561139b57506001600160a01b0382165f908152606c602052604090205460ff165b156113ab57611309838383611895565b6113098383836119e9565b5f54610100900460ff166113dc5760405162461bcd60e51b81526004016105fa90611eff565b61068a3361100b565b6113ed611b43565b60725460ff16151560010361148f576103e8606f5461140c9190611d5e565b82111561148f5760405162461bcd60e51b8152602060048201526044602482018190527f43616e6e6f74207075726368617365206d6f7265207468616e2031306d202830908201527f2e312529206f6620737570706c7920696e2073696e676c65207472616e7361636064820152633a34b7b760e11b608482015260a4016105fa565b81815261149a610968565b6114a49083611f65565b60208201525f60408201819052612710906114bf9084611f65565b6114c99190611d5e565b60808201526114d6610968565b81608001516114e59190611f65565b60a08201819052156114fd5760a08101516101008201525b80516001600160a01b0385165f9081526069602052604081208054909190611526908490611d24565b90915550506020808201516001600160a01b0386165f908152606a90925260408220805491929091611559908490611d24565b909155505060a081015160208201516115729190611d24565b6001600160a01b0384165f908152606a602052604081208054909190611599908490611d37565b9091555050610100810151607080545f906115b5908490611d24565b9091555050608081015181516001600160a01b0380861692908716915f80516020611f7d833981519152916115e991611d24565b60405190815260200160405180910390a3805160808201517fe6ef78c5a1f105fc4b9500eeb7cd09b041367bdee35f1d85761735ee78b3ff2e919061162e9082611d24565b604080519283526020830191909152015b60405180910390a150505050565b611655611b43565b600a61166085610581565b61166a9190611d5e565b8211156116df5760405162461bcd60e51b815260206004820152603a60248201527f43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c60448201527f616e636520696e2073696e676c65207472616e73616374696f6e00000000000060648201526084016105fa565b8181526116ea610968565b6116f49083611f65565b60208201525f606082018190526127109061170f9084611f65565b6117199190611d5e565b60c0820152611726610968565b8160c001516117359190611f65565b60e082018190521561174d5760e08101516101008201525b8060200151606a5f866001600160a01b03166001600160a01b031681526020019081526020015f205f8282546117839190611d24565b909155505060c081015181516117999190611d24565b6001600160a01b0384165f90815260696020526040812080549091906117c0908490611d37565b909155505060e081015160208201516117d99190611d24565b6001600160a01b0384165f908152606a602052604081208054909190611800908490611d37565b9091555050610100810151607080545f9061181c908490611d24565b909155505060c081015181516001600160a01b0380861692908716915f80516020611f7d8339815191529161185091611d24565b60405190815260200160405180910390a3805160c08201517fff000e16c1c0d33b07404c2b2abb9832356b5cfd57566d73c9d09611f030890d919061162e9082611d24565b61189d611b43565b8181526118a8610968565b6118b29083611f65565b60208083019190915281516001600160a01b0386165f9081526069909252604082208054919290916118e5908490611d24565b90915550506020808201516001600160a01b0386165f908152606a90925260408220805491929091611918908490611d24565b909155505080516001600160a01b0384165f9081526069602052604081208054909190611946908490611d37565b90915550506020808201516001600160a01b0385165f908152606a90925260408220805491929091611979908490611d37565b909155505080516040519081526001600160a01b0384811691908616905f80516020611f7d8339815191529060200160405180910390a380516040805182815260208101929092527f2541109a23d530c06d62a3bf63d8d03107194870126fddb7170c0daef360cd8a910161163f565b6119f1611b43565b670de0b6b3a7640000611a0385610581565b611a0d9190611d24565b821115611a5c5760405162461bcd60e51b815260206004820152601d60248201527f596f7520676f747461206b6565702031204d45544820616c776179732100000060448201526064016105fa565b818152611a67610968565b611a719083611f65565b60208083018290526001600160a01b0386165f908152606a909152604081208054909190611aa0908490611d24565b90915550506020808201516001600160a01b0385165f908152606a90925260408220805491929091611ad3908490611d37565b909155505080516040519081526001600160a01b0384811691908616905f80516020611f7d8339815191529060200160405180910390a380516040805182815260208101929092527fd9923e08d9d88ff7a7e9b8460f3163dc6b887fabe315449da3b5cd16bb5e9340910161163f565b6040518061012001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b5f5b83811015611ba0578181015183820152602001611b88565b50505f910152565b602081525f8251806020840152611bc6816040850160208701611b86565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610674575f80fd5b5f8060408385031215611c01575f80fd5b611c0a83611bda565b946020939093013593505050565b5f805f60608486031215611c2a575f80fd5b611c3384611bda565b9250611c4160208501611bda565b9150604084013590509250925092565b5f60208284031215611c61575f80fd5b5035919050565b5f60208284031215611c78575f80fd5b611c8182611bda565b9392505050565b5f60208284031215611c98575f80fd5b81358015158114611c81575f80fd5b5f8060408385031215611cb8575f80fd5b611cc183611bda565b9150611ccf60208401611bda565b90509250929050565b600181811c90821680611cec57607f821691505b602082108103611d0a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104cd576104cd611d10565b808201808211156104cd576104cd611d10565b634e487b7160e01b5f52601260045260245ffd5b5f82611d6c57611d6c611d4a565b500490565b634e487b7160e01b5f52604160045260245ffd5b601f82111561130957805f5260205f20601f840160051c81016020851015611daa5750805b601f840160051c820191505b81811015611dc9575f8155600101611db6565b5050505050565b815167ffffffffffffffff811115611dea57611dea611d71565b611dfe81611df88454611cd8565b84611d85565b602080601f831160018114611e31575f8415611e1a5750858301515b5f19600386901b1c1916600185901b178555611e88565b5f85815260208120601f198616915b82811015611e5f57888601518255948401946001909101908401611e40565b5085821015611e7c57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f82611e9e57611e9e611d4a565b500690565b634e487b7160e01b5f52603260045260245ffd5b60208082526028908201527f5472616e7366657220616d6f756e74206578636565647320746865206d6178546040820152673c20b6b7bab73a1760c11b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f8251611f5b818460208701611b86565b9190910192915050565b80820281158282048414176104cd576104cd611d1056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220607425d2163f166c2eb888682e1a778ebca45eaea882550e8f989d032ff94c4164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD2 DUP1 PUSH2 0x28 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8129FC1C GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xAF465A27 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAF465A27 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xAAE5DDD2 EQ PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x94E10784 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x97A9D560 EQ PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x83F24C09 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4D09DEB3 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x658C27A9 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x658C27A9 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x80DA2287 EQ PUSH2 0x2E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4D09DEB3 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x4DACF3F5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x5319E78F EQ PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x45E0B9D4 EQ PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x200 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x6F SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C18 JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C51 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x1F0 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6A SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x204 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x269 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x998 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x204 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x204 PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x43C SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x468 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x496 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4C9 CALLER DUP5 DUP5 PUSH2 0xB1F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4DF DUP5 DUP5 DUP5 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x519 SWAP2 DUP7 SWAP2 PUSH2 0x514 SWAP1 DUP7 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4C9 SWAP2 DUP6 SWAP1 PUSH2 0x514 SWAP1 DUP7 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x68 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x568 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x70 SLOAD DUP2 GT ISZERO PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x60C PUSH2 0x968 JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 SUB PUSH2 0x61E JUMPI POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x628 DUP2 DUP4 PUSH2 0x1D5E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4CD DUP3 PUSH2 0x581 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x681 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x68A PUSH0 PUSH2 0x100B JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x6AA JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x6C3 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x747 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x74F PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x26AA22A9AA23 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x65 SWAP1 PUSH2 0x779 SWAP1 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x26AA22A9AA23 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x66 SWAP1 PUSH2 0x7A4 SWAP1 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH0 NOT PUSH1 0x6E DUP2 SWAP1 SSTORE PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x70 DUP2 SWAP1 SSTORE PUSH1 0x6A PUSH0 PUSH2 0x7FC PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 SWAP1 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x6F SLOAD PUSH1 0x71 SSTORE PUSH1 0x6C SWAP1 MSTORE PUSH32 0x7FEBD347DF14EA35C529E50FB2DD629D4A6226F5CCC893710FB466F8B83823FC DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH32 0x8C482E007F935C93984DDF7A647E33EF99566883FFAE3563AA616DC14D1632F7 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0xB6E99D88B536AE7728C4B89CA5A6073CF06FD2059E0AFF5B1A4DE2C799D9CB96 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH2 0x369 SWAP1 SWAP3 MSTORE PUSH1 0x72 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x8CA PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x6F SLOAD PUSH1 0x40 MLOAD PUSH2 0x8FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x94A JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x955 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x973 PUSH2 0x998 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x982 DUP2 DUP4 PUSH2 0x1D5E JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x43C SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x6F SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x68 SLOAD DUP2 LT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x6A PUSH0 PUSH1 0x68 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9C4 JUMPI PUSH2 0x9C4 PUSH2 0x1EA3 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x9F2 SWAP1 DUP5 PUSH2 0x1D24 JUMP JUMPDEST SWAP3 POP PUSH1 0x69 PUSH0 PUSH1 0x68 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0x1EA3 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xA38 SWAP1 DUP4 PUSH2 0x1D24 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x9A4 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4C9 SWAP2 DUP6 SWAP1 PUSH2 0x514 SWAP1 DUP7 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH0 PUSH2 0x4C9 CALLER DUP5 DUP5 PUSH2 0xC42 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH2 0xA9A CALLER PUSH2 0x630 JUMP JUMPDEST PUSH2 0xAA4 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAB1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x94A DUP2 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC56 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0xD95 DUP4 PUSH2 0x108A JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDBE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDE2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xDF9 JUMPI PUSH2 0xDF0 DUP4 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0xDF9 DUP4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0xE02 DUP3 PUSH2 0x108A JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xE2B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE4F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE66 JUMPI PUSH2 0xE5D DUP3 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0xE66 DUP3 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xE92 JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEFE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xED7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xEFE JUMPI PUSH1 0x71 SLOAD DUP2 GT ISZERO PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xF2A JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xF96 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF96 JUMPI PUSH1 0x71 SLOAD DUP2 GT ISZERO PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0xFA1 DUP4 DUP4 DUP4 PUSH2 0x12BA JUMP JUMPDEST POP POP PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0x68A PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x10CF SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1107 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x110C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x628 JUMPI POP MLOAD ISZERO ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1255 JUMPI PUSH2 0x123C DUP2 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xA2153420D844928B4421650203C77BABC8B33D7F2E7B450E2966DB0C22097753 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x12F9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x130E JUMPI PUSH2 0x1309 DUP4 DUP4 DUP4 PUSH2 0x13E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x134D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x135D JUMPI PUSH2 0x1309 DUP4 DUP4 DUP4 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x139B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x13AB JUMPI PUSH2 0x1309 DUP4 DUP4 DUP4 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x1309 DUP4 DUP4 DUP4 PUSH2 0x19E9 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0x68A CALLER PUSH2 0x100B JUMP JUMPDEST PUSH2 0x13ED PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x148F JUMPI PUSH2 0x3E8 PUSH1 0x6F SLOAD PUSH2 0x140C SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x43616E6E6F74207075726368617365206D6F7265207468616E2031306D202830 SWAP1 DUP3 ADD MSTORE PUSH32 0x2E312529206F6620737570706C7920696E2073696E676C65207472616E736163 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5FA JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x149A PUSH2 0x968 JUMP JUMPDEST PUSH2 0x14A4 SWAP1 DUP4 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2710 SWAP1 PUSH2 0x14BF SWAP1 DUP5 PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x14C9 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x14D6 PUSH2 0x968 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x14FD JUMPI PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1526 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1559 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1572 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1599 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x70 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x15B5 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x80 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x15E9 SWAP2 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH32 0xE6EF78C5A1F105FC4B9500EEB7CD09B041367BDEE35F1D85761735EE78B3FF2E SWAP2 SWAP1 PUSH2 0x162E SWAP1 DUP3 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x1655 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1660 DUP6 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x166A SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656C6C206D6F7265207468616E20313025206F662062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E636520696E2073696E676C65207472616E73616374696F6E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x16EA PUSH2 0x968 JUMP JUMPDEST PUSH2 0x16F4 SWAP1 DUP4 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2710 SWAP1 PUSH2 0x170F SWAP1 DUP5 PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1719 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1726 PUSH2 0x968 JUMP JUMPDEST DUP2 PUSH1 0xC0 ADD MLOAD PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x174D JUMPI PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x6A PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1783 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC0 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x1799 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x17C0 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1800 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x70 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x181C SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC0 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x1850 SWAP2 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0xC0 DUP3 ADD MLOAD PUSH32 0xFF000E16C1C0D33B07404C2B2ABB9832356B5CFD57566D73C9D09611F030890D SWAP2 SWAP1 PUSH2 0x162E SWAP1 DUP3 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x189D PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x18A8 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x18B2 SWAP1 DUP4 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x18E5 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1918 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1946 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1979 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x2541109A23D530C06D62A3BF63D8D03107194870126FDDB7170C0DAEF360CD8A SWAP2 ADD PUSH2 0x163F JUMP JUMPDEST PUSH2 0x19F1 PUSH2 0x1B43 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A03 DUP6 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x1A0D SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1A5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520676F747461206B6565702031204D45544820616C7761797321000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FA JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x1A67 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x1A71 SWAP1 DUP4 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1AA0 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1AD3 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xD9923E08D9D88FF7A7E9B8460F3163DC6B887FABE315449DA3B5CD16BB5E9340 SWAP2 ADD PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B88 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1BC6 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x674 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C0A DUP4 PUSH2 0x1BDA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C33 DUP5 PUSH2 0x1BDA JUMP JUMPDEST SWAP3 POP PUSH2 0x1C41 PUSH1 0x20 DUP6 ADD PUSH2 0x1BDA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C61 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C78 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C81 DUP3 PUSH2 0x1BDA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C98 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1C81 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CC1 DUP4 PUSH2 0x1BDA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCF PUSH1 0x20 DUP5 ADD PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CEC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0x1D10 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0x1D10 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1D6C JUMPI PUSH2 0x1D6C PUSH2 0x1D4A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1309 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1DAA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DC9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DB6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DEA JUMPI PUSH2 0x1DEA PUSH2 0x1D71 JUMP JUMPDEST PUSH2 0x1DFE DUP2 PUSH2 0x1DF8 DUP5 SLOAD PUSH2 0x1CD8 JUMP JUMPDEST DUP5 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E31 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1E1A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E88 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E5F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E40 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E7C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E9E JUMPI PUSH2 0x1E9E PUSH2 0x1D4A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206578636565647320746865206D617854 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3C20B6B7BAB73A17 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1F5B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B86 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0x1D10 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x74 0x25 0xD2 AND EXTCODEHASH AND PUSH13 0x2EB888682E1A778EBCA45EAEA8 DUP3 SSTORE 0xE DUP16 SWAP9 SWAP14 SUB 0x2F 0xF9 0x4C COINBASE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "3954:21657:0:-:0;;;14379:26;;;-1:-1:-1;;14379:26:0;;;3954:21657;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_1465": {
									"entryPoint": 4188,
									"id": 1465,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_1476": {
									"entryPoint": 5046,
									"id": 1476,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_672": {
									"entryPoint": 2847,
									"id": 672,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_1507": {
									"entryPoint": 4017,
									"id": 1507,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_excluded_21": {
									"entryPoint": 1369,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getCurrentSupply_627": {
									"entryPoint": 2456,
									"id": 627,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRate_572": {
									"entryPoint": 2408,
									"id": 572,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_2175": {
									"entryPoint": null,
									"id": 2175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_rTotal_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tTotal_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tokenTransfer_906": {
									"entryPoint": 4794,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferBothExcluded_1307": {
									"entryPoint": 6293,
									"id": 1307,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_1229": {
									"entryPoint": 5093,
									"id": 1229,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_1564": {
									"entryPoint": 4107,
									"id": 1564,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferStandard_1383": {
									"entryPoint": 6633,
									"id": 1383,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_1085": {
									"entryPoint": 5709,
									"id": 1085,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_841": {
									"entryPoint": 3138,
									"id": 841,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@antiWhale_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_349": {
									"entryPoint": 1213,
									"id": 349,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_249": {
									"entryPoint": 1584,
									"id": 249,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_403": {
									"entryPoint": 2636,
									"id": 403,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@excludeAddress_514": {
									"entryPoint": 4526,
									"id": 514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludeFromMaxTx_472": {
									"entryPoint": 4387,
									"id": 472,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getTenPercentOfBalance_947": {
									"entryPoint": 2702,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_376": {
									"entryPoint": 1315,
									"id": 376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_186": {
									"entryPoint": 1676,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_1835": {
									"entryPoint": null,
									"id": 1835,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcludedFromMaxTx_1396": {
									"entryPoint": null,
									"id": 1396,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcluded_1409": {
									"entryPoint": null,
									"id": 1409,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isRouter_451": {
									"entryPoint": 4234,
									"id": 451,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxTxAmount_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_195": {
									"entryPoint": 1069,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1493": {
									"entryPoint": null,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rBalanceOf_554": {
									"entryPoint": 1409,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_1521": {
									"entryPoint": 1657,
									"id": 1521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAntiWhaleStatus_415": {
									"entryPoint": 2381,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_204": {
									"entryPoint": 2441,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_308": {
									"entryPoint": 1235,
									"id": 308,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1544": {
									"entryPoint": 2729,
									"id": 1544,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_271": {
									"entryPoint": 2690,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@viewTBalanceRBalance_1436": {
									"entryPoint": null,
									"id": 1436,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_address": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7557,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13693:6",
										"nodeType": "YulBlock",
										"src": "0:13693:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "80:184:6",
													"nodeType": "YulBlock",
													"src": "80:184:6",
													"statements": [
														{
															"nativeSrc": "90:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "99:1:6",
																"nodeType": "YulLiteral",
																"src": "99:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "94:1:6",
																	"nodeType": "YulTypedName",
																	"src": "94:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "159:63:6",
																"nodeType": "YulBlock",
																"src": "159:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "184:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "189:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "180:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:6"
																					},
																					"nativeSrc": "180:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "203:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "208:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "199:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:6"
																							},
																							"nativeSrc": "199:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "193:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:6"
																					},
																					"nativeSrc": "193:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "173:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:6"
																			},
																			"nativeSrc": "173:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:6"
																		},
																		"nativeSrc": "173:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "120:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "123:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "117:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:6"
																},
																"nativeSrc": "117:13:6",
																"nodeType": "YulFunctionCall",
																"src": "117:13:6"
															},
															"nativeSrc": "109:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "131:19:6",
																"nodeType": "YulBlock",
																"src": "131:19:6",
																"statements": [
																	{
																		"nativeSrc": "133:15:6",
																		"nodeType": "YulAssignment",
																		"src": "133:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "145:2:6",
																					"nodeType": "YulLiteral",
																					"src": "145:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "138:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:6"
																			},
																			"nativeSrc": "138:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "133:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "113:3:6",
																"nodeType": "YulBlock",
																"src": "113:3:6",
																"statements": []
															},
															"src": "109:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "242:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "247:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "238:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:6"
																		},
																		"nativeSrc": "238:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:6",
																		"nodeType": "YulLiteral",
																		"src": "256:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "231:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:6"
																},
																"nativeSrc": "231:27:6",
																"nodeType": "YulFunctionCall",
																"src": "231:27:6"
															},
															"nativeSrc": "231:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "231:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "14:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "58:3:6",
														"nodeType": "YulTypedName",
														"src": "58:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "63:3:6",
														"nodeType": "YulTypedName",
														"src": "63:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "68:6:6",
														"nodeType": "YulTypedName",
														"src": "68:6:6",
														"type": ""
													}
												],
												"src": "14:250:6"
											},
											{
												"body": {
													"nativeSrc": "390:275:6",
													"nodeType": "YulBlock",
													"src": "390:275:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "407:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "418:2:6",
																		"nodeType": "YulLiteral",
																		"src": "418:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "400:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:6"
																},
																"nativeSrc": "400:21:6",
																"nodeType": "YulFunctionCall",
																"src": "400:21:6"
															},
															"nativeSrc": "400:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "400:21:6"
														},
														{
															"nativeSrc": "430:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "450:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "444:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:6"
																},
																"nativeSrc": "444:13:6",
																"nodeType": "YulFunctionCall",
																"src": "444:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "434:6:6",
																	"nodeType": "YulTypedName",
																	"src": "434:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "477:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "488:2:6",
																				"nodeType": "YulLiteral",
																				"src": "488:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "473:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:6"
																		},
																		"nativeSrc": "473:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "493:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "466:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:6"
																},
																"nativeSrc": "466:34:6",
																"nodeType": "YulFunctionCall",
																"src": "466:34:6"
															},
															"nativeSrc": "466:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "466:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "548:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:6",
																				"nodeType": "YulLiteral",
																				"src": "556:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "544:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:6"
																		},
																		"nativeSrc": "544:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "565:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "576:2:6",
																				"nodeType": "YulLiteral",
																				"src": "576:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "561:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:6"
																		},
																		"nativeSrc": "561:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "581:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "509:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:6"
																},
																"nativeSrc": "509:79:6",
																"nodeType": "YulFunctionCall",
																"src": "509:79:6"
															},
															"nativeSrc": "509:79:6",
															"nodeType": "YulExpressionStatement",
															"src": "509:79:6"
														},
														{
															"nativeSrc": "597:62:6",
															"nodeType": "YulAssignment",
															"src": "597:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "613:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "632:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "640:2:6",
																								"nodeType": "YulLiteral",
																								"src": "640:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "628:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:6"
																						},
																						"nativeSrc": "628:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "649:2:6",
																								"nodeType": "YulLiteral",
																								"src": "649:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "645:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "645:3:6"
																						},
																						"nativeSrc": "645:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "645:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "624:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:6"
																				},
																				"nativeSrc": "624:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "624:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:6"
																		},
																		"nativeSrc": "609:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "609:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "656:2:6",
																		"nodeType": "YulLiteral",
																		"src": "656:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "605:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:6"
																},
																"nativeSrc": "605:54:6",
																"nodeType": "YulFunctionCall",
																"src": "605:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "597:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "269:396:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "359:9:6",
														"nodeType": "YulTypedName",
														"src": "359:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "370:6:6",
														"nodeType": "YulTypedName",
														"src": "370:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "381:4:6",
														"nodeType": "YulTypedName",
														"src": "381:4:6",
														"type": ""
													}
												],
												"src": "269:396:6"
											},
											{
												"body": {
													"nativeSrc": "719:124:6",
													"nodeType": "YulBlock",
													"src": "719:124:6",
													"statements": [
														{
															"nativeSrc": "729:29:6",
															"nodeType": "YulAssignment",
															"src": "729:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "751:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "738:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "738:12:6"
																},
																"nativeSrc": "738:20:6",
																"nodeType": "YulFunctionCall",
																"src": "738:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "729:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "821:16:6",
																"nodeType": "YulBlock",
																"src": "821:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "830:1:6",
																					"nodeType": "YulLiteral",
																					"src": "830:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "833:1:6",
																					"nodeType": "YulLiteral",
																					"src": "833:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "823:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:6"
																			},
																			"nativeSrc": "823:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:6"
																		},
																		"nativeSrc": "823:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "780:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "780:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "791:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "791:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "806:3:6",
																										"nodeType": "YulLiteral",
																										"src": "806:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "811:1:6",
																										"nodeType": "YulLiteral",
																										"src": "811:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "802:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "802:3:6"
																								},
																								"nativeSrc": "802:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "802:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "815:1:6",
																								"nodeType": "YulLiteral",
																								"src": "815:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "798:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "798:3:6"
																						},
																						"nativeSrc": "798:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "798:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "787:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "787:3:6"
																				},
																				"nativeSrc": "787:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "787:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "777:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "777:2:6"
																		},
																		"nativeSrc": "777:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "777:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "770:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "770:6:6"
																},
																"nativeSrc": "770:50:6",
																"nodeType": "YulFunctionCall",
																"src": "770:50:6"
															},
															"nativeSrc": "767:70:6",
															"nodeType": "YulIf",
															"src": "767:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "670:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "698:6:6",
														"nodeType": "YulTypedName",
														"src": "698:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "709:5:6",
														"nodeType": "YulTypedName",
														"src": "709:5:6",
														"type": ""
													}
												],
												"src": "670:173:6"
											},
											{
												"body": {
													"nativeSrc": "935:167:6",
													"nodeType": "YulBlock",
													"src": "935:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "981:16:6",
																"nodeType": "YulBlock",
																"src": "981:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "990:1:6",
																					"nodeType": "YulLiteral",
																					"src": "990:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "993:1:6",
																					"nodeType": "YulLiteral",
																					"src": "993:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "983:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "983:6:6"
																			},
																			"nativeSrc": "983:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "983:12:6"
																		},
																		"nativeSrc": "983:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "983:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "956:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "956:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "965:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "965:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "952:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "952:3:6"
																		},
																		"nativeSrc": "952:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "952:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "977:2:6",
																		"nodeType": "YulLiteral",
																		"src": "977:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "948:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "948:3:6"
																},
																"nativeSrc": "948:32:6",
																"nodeType": "YulFunctionCall",
																"src": "948:32:6"
															},
															"nativeSrc": "945:52:6",
															"nodeType": "YulIf",
															"src": "945:52:6"
														},
														{
															"nativeSrc": "1006:39:6",
															"nodeType": "YulAssignment",
															"src": "1006:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1016:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1016:18:6"
																},
																"nativeSrc": "1016:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1016:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1006:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:6"
																}
															]
														},
														{
															"nativeSrc": "1054:42:6",
															"nodeType": "YulAssignment",
															"src": "1054:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1081:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1092:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1092:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1077:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1077:3:6"
																		},
																		"nativeSrc": "1077:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1077:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1064:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1064:12:6"
																},
																"nativeSrc": "1064:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1064:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "848:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "893:9:6",
														"nodeType": "YulTypedName",
														"src": "893:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "904:7:6",
														"nodeType": "YulTypedName",
														"src": "904:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "916:6:6",
														"nodeType": "YulTypedName",
														"src": "916:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													}
												],
												"src": "848:254:6"
											},
											{
												"body": {
													"nativeSrc": "1202:92:6",
													"nodeType": "YulBlock",
													"src": "1202:92:6",
													"statements": [
														{
															"nativeSrc": "1212:26:6",
															"nodeType": "YulAssignment",
															"src": "1212:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1224:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1235:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1235:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1220:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:6"
																},
																"nativeSrc": "1220:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1220:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1212:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1254:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1254:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1279:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1279:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1272:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1272:6:6"
																				},
																				"nativeSrc": "1272:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1272:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1265:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1265:6:6"
																		},
																		"nativeSrc": "1265:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1265:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:6"
																},
																"nativeSrc": "1247:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1247:41:6"
															},
															"nativeSrc": "1247:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1247:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1107:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1171:9:6",
														"nodeType": "YulTypedName",
														"src": "1171:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1182:6:6",
														"nodeType": "YulTypedName",
														"src": "1182:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1193:4:6",
														"nodeType": "YulTypedName",
														"src": "1193:4:6",
														"type": ""
													}
												],
												"src": "1107:187:6"
											},
											{
												"body": {
													"nativeSrc": "1400:76:6",
													"nodeType": "YulBlock",
													"src": "1400:76:6",
													"statements": [
														{
															"nativeSrc": "1410:26:6",
															"nodeType": "YulAssignment",
															"src": "1410:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1422:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1422:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1433:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1433:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1418:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:6"
																},
																"nativeSrc": "1418:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1418:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1410:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1410:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1463:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1463:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1445:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:6"
																},
																"nativeSrc": "1445:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1445:25:6"
															},
															"nativeSrc": "1445:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1445:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1299:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1369:9:6",
														"nodeType": "YulTypedName",
														"src": "1369:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1380:6:6",
														"nodeType": "YulTypedName",
														"src": "1380:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1391:4:6",
														"nodeType": "YulTypedName",
														"src": "1391:4:6",
														"type": ""
													}
												],
												"src": "1299:177:6"
											},
											{
												"body": {
													"nativeSrc": "1585:224:6",
													"nodeType": "YulBlock",
													"src": "1585:224:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1631:16:6",
																"nodeType": "YulBlock",
																"src": "1631:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1640:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1643:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1643:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1633:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:6"
																			},
																			"nativeSrc": "1633:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1633:12:6"
																		},
																		"nativeSrc": "1633:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1633:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1606:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1606:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1615:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1615:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1602:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1602:3:6"
																		},
																		"nativeSrc": "1602:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1602:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1627:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1627:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:6"
																},
																"nativeSrc": "1598:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1598:32:6"
															},
															"nativeSrc": "1595:52:6",
															"nodeType": "YulIf",
															"src": "1595:52:6"
														},
														{
															"nativeSrc": "1656:39:6",
															"nodeType": "YulAssignment",
															"src": "1656:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1685:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1685:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1666:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1666:18:6"
																},
																"nativeSrc": "1666:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1666:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:6"
																}
															]
														},
														{
															"nativeSrc": "1704:48:6",
															"nodeType": "YulAssignment",
															"src": "1704:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1737:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1737:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1748:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1748:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1733:3:6"
																		},
																		"nativeSrc": "1733:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1733:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1714:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1714:18:6"
																},
																"nativeSrc": "1714:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1714:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1704:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:6"
																}
															]
														},
														{
															"nativeSrc": "1761:42:6",
															"nodeType": "YulAssignment",
															"src": "1761:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1788:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1788:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1799:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1799:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1784:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1784:3:6"
																		},
																		"nativeSrc": "1784:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1771:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1771:12:6"
																},
																"nativeSrc": "1771:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1771:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1481:328:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1535:9:6",
														"nodeType": "YulTypedName",
														"src": "1535:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1546:7:6",
														"nodeType": "YulTypedName",
														"src": "1546:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1558:6:6",
														"nodeType": "YulTypedName",
														"src": "1558:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1566:6:6",
														"nodeType": "YulTypedName",
														"src": "1566:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1574:6:6",
														"nodeType": "YulTypedName",
														"src": "1574:6:6",
														"type": ""
													}
												],
												"src": "1481:328:6"
											},
											{
												"body": {
													"nativeSrc": "1911:87:6",
													"nodeType": "YulBlock",
													"src": "1911:87:6",
													"statements": [
														{
															"nativeSrc": "1921:26:6",
															"nodeType": "YulAssignment",
															"src": "1921:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1933:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1933:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1944:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1944:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1929:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1929:3:6"
																},
																"nativeSrc": "1929:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1929:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1921:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1921:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1963:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1963:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1978:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1978:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1986:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1986:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1974:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1974:3:6"
																		},
																		"nativeSrc": "1974:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1974:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1956:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:6"
																},
																"nativeSrc": "1956:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1956:36:6"
															},
															"nativeSrc": "1956:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1956:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1814:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1880:9:6",
														"nodeType": "YulTypedName",
														"src": "1880:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1891:6:6",
														"nodeType": "YulTypedName",
														"src": "1891:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1902:4:6",
														"nodeType": "YulTypedName",
														"src": "1902:4:6",
														"type": ""
													}
												],
												"src": "1814:184:6"
											},
											{
												"body": {
													"nativeSrc": "2073:110:6",
													"nodeType": "YulBlock",
													"src": "2073:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2119:16:6",
																"nodeType": "YulBlock",
																"src": "2119:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2128:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2128:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2131:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2131:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2121:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2121:6:6"
																			},
																			"nativeSrc": "2121:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:12:6"
																		},
																		"nativeSrc": "2121:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2094:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2094:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2103:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2103:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2090:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2090:3:6"
																		},
																		"nativeSrc": "2090:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2090:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2115:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2086:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2086:3:6"
																},
																"nativeSrc": "2086:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2086:32:6"
															},
															"nativeSrc": "2083:52:6",
															"nodeType": "YulIf",
															"src": "2083:52:6"
														},
														{
															"nativeSrc": "2144:33:6",
															"nodeType": "YulAssignment",
															"src": "2144:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2167:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2154:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2154:12:6"
																},
																"nativeSrc": "2154:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2154:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2144:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2003:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2039:9:6",
														"nodeType": "YulTypedName",
														"src": "2039:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2050:7:6",
														"nodeType": "YulTypedName",
														"src": "2050:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2062:6:6",
														"nodeType": "YulTypedName",
														"src": "2062:6:6",
														"type": ""
													}
												],
												"src": "2003:180:6"
											},
											{
												"body": {
													"nativeSrc": "2289:102:6",
													"nodeType": "YulBlock",
													"src": "2289:102:6",
													"statements": [
														{
															"nativeSrc": "2299:26:6",
															"nodeType": "YulAssignment",
															"src": "2299:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2311:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2311:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2322:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2322:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2307:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2307:3:6"
																},
																"nativeSrc": "2307:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2307:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2299:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2299:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2341:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2341:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2356:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2356:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2372:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2372:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2377:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2377:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2368:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2368:3:6"
																						},
																						"nativeSrc": "2368:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2368:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2381:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2381:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2364:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2364:3:6"
																				},
																				"nativeSrc": "2364:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2364:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2352:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:6"
																		},
																		"nativeSrc": "2352:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:6"
																},
																"nativeSrc": "2334:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2334:51:6"
															},
															"nativeSrc": "2334:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2334:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2188:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2258:9:6",
														"nodeType": "YulTypedName",
														"src": "2258:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2269:6:6",
														"nodeType": "YulTypedName",
														"src": "2269:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2280:4:6",
														"nodeType": "YulTypedName",
														"src": "2280:4:6",
														"type": ""
													}
												],
												"src": "2188:203:6"
											},
											{
												"body": {
													"nativeSrc": "2466:116:6",
													"nodeType": "YulBlock",
													"src": "2466:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2512:16:6",
																"nodeType": "YulBlock",
																"src": "2512:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2521:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2521:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2524:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2524:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2514:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2514:6:6"
																			},
																			"nativeSrc": "2514:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2514:12:6"
																		},
																		"nativeSrc": "2514:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2514:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2487:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2487:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2496:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2496:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2483:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2483:3:6"
																		},
																		"nativeSrc": "2483:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2483:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2508:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2508:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2479:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2479:3:6"
																},
																"nativeSrc": "2479:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2479:32:6"
															},
															"nativeSrc": "2476:52:6",
															"nodeType": "YulIf",
															"src": "2476:52:6"
														},
														{
															"nativeSrc": "2537:39:6",
															"nodeType": "YulAssignment",
															"src": "2537:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2566:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2566:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2547:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2547:18:6"
																},
																"nativeSrc": "2547:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2547:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2537:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2396:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2432:9:6",
														"nodeType": "YulTypedName",
														"src": "2432:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2443:7:6",
														"nodeType": "YulTypedName",
														"src": "2443:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2455:6:6",
														"nodeType": "YulTypedName",
														"src": "2455:6:6",
														"type": ""
													}
												],
												"src": "2396:186:6"
											},
											{
												"body": {
													"nativeSrc": "2716:119:6",
													"nodeType": "YulBlock",
													"src": "2716:119:6",
													"statements": [
														{
															"nativeSrc": "2726:26:6",
															"nodeType": "YulAssignment",
															"src": "2726:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2738:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2738:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2749:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2749:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2734:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:6"
																},
																"nativeSrc": "2734:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2734:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2726:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2726:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2779:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2779:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:6"
																},
																"nativeSrc": "2761:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2761:25:6"
															},
															"nativeSrc": "2761:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "2761:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2806:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2806:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2817:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2817:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2802:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:6"
																		},
																		"nativeSrc": "2802:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2822:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2822:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2795:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:6"
																},
																"nativeSrc": "2795:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2795:34:6"
															},
															"nativeSrc": "2795:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2795:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2587:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2677:9:6",
														"nodeType": "YulTypedName",
														"src": "2677:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2688:6:6",
														"nodeType": "YulTypedName",
														"src": "2688:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2696:6:6",
														"nodeType": "YulTypedName",
														"src": "2696:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2707:4:6",
														"nodeType": "YulTypedName",
														"src": "2707:4:6",
														"type": ""
													}
												],
												"src": "2587:248:6"
											},
											{
												"body": {
													"nativeSrc": "2907:206:6",
													"nodeType": "YulBlock",
													"src": "2907:206:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2953:16:6",
																"nodeType": "YulBlock",
																"src": "2953:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2962:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2962:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2965:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2965:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2955:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2955:6:6"
																			},
																			"nativeSrc": "2955:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2955:12:6"
																		},
																		"nativeSrc": "2955:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2955:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:6"
																		},
																		"nativeSrc": "2924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2920:3:6"
																},
																"nativeSrc": "2920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2920:32:6"
															},
															"nativeSrc": "2917:52:6",
															"nodeType": "YulIf",
															"src": "2917:52:6"
														},
														{
															"nativeSrc": "2978:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2978:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3004:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3004:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2991:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2991:12:6"
																},
																"nativeSrc": "2991:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2991:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2982:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2982:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3067:16:6",
																"nodeType": "YulBlock",
																"src": "3067:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3076:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3076:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3079:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3079:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3069:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3069:6:6"
																			},
																			"nativeSrc": "3069:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3069:12:6"
																		},
																		"nativeSrc": "3069:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3069:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3036:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3036:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3057:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "3057:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3050:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3050:6:6"
																						},
																						"nativeSrc": "3050:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3050:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3043:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3043:6:6"
																				},
																				"nativeSrc": "3043:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3043:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3033:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3033:2:6"
																		},
																		"nativeSrc": "3033:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3033:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3026:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:6"
																},
																"nativeSrc": "3026:40:6",
																"nodeType": "YulFunctionCall",
																"src": "3026:40:6"
															},
															"nativeSrc": "3023:60:6",
															"nodeType": "YulIf",
															"src": "3023:60:6"
														},
														{
															"nativeSrc": "3092:15:6",
															"nodeType": "YulAssignment",
															"src": "3092:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "3102:5:6",
																"nodeType": "YulIdentifier",
																"src": "3102:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3092:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3092:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "2840:273:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2873:9:6",
														"nodeType": "YulTypedName",
														"src": "2873:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2884:7:6",
														"nodeType": "YulTypedName",
														"src": "2884:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2896:6:6",
														"nodeType": "YulTypedName",
														"src": "2896:6:6",
														"type": ""
													}
												],
												"src": "2840:273:6"
											},
											{
												"body": {
													"nativeSrc": "3205:173:6",
													"nodeType": "YulBlock",
													"src": "3205:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3251:16:6",
																"nodeType": "YulBlock",
																"src": "3251:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3260:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3260:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3263:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3263:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3253:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3253:6:6"
																			},
																			"nativeSrc": "3253:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3253:12:6"
																		},
																		"nativeSrc": "3253:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3226:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3226:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3235:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3235:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3222:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3222:3:6"
																		},
																		"nativeSrc": "3222:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3222:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3247:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3247:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3218:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:6"
																},
																"nativeSrc": "3218:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3218:32:6"
															},
															"nativeSrc": "3215:52:6",
															"nodeType": "YulIf",
															"src": "3215:52:6"
														},
														{
															"nativeSrc": "3276:39:6",
															"nodeType": "YulAssignment",
															"src": "3276:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3305:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3305:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3286:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3286:18:6"
																},
																"nativeSrc": "3286:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3286:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3276:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:6"
																}
															]
														},
														{
															"nativeSrc": "3324:48:6",
															"nodeType": "YulAssignment",
															"src": "3324:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3357:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3368:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3368:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3353:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:6"
																		},
																		"nativeSrc": "3353:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3353:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3334:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3334:18:6"
																},
																"nativeSrc": "3334:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3334:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3324:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3118:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3163:9:6",
														"nodeType": "YulTypedName",
														"src": "3163:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3174:7:6",
														"nodeType": "YulTypedName",
														"src": "3174:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3186:6:6",
														"nodeType": "YulTypedName",
														"src": "3186:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3194:6:6",
														"nodeType": "YulTypedName",
														"src": "3194:6:6",
														"type": ""
													}
												],
												"src": "3118:260:6"
											},
											{
												"body": {
													"nativeSrc": "3438:325:6",
													"nodeType": "YulBlock",
													"src": "3438:325:6",
													"statements": [
														{
															"nativeSrc": "3448:22:6",
															"nodeType": "YulAssignment",
															"src": "3448:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3462:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3462:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3465:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3465:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3458:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3458:3:6"
																},
																"nativeSrc": "3458:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3458:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3448:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:6"
																}
															]
														},
														{
															"nativeSrc": "3479:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3479:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3509:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3509:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3515:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3515:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3505:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:6"
																},
																"nativeSrc": "3505:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3505:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3483:18:6",
																	"nodeType": "YulTypedName",
																	"src": "3483:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3556:31:6",
																"nodeType": "YulBlock",
																"src": "3556:31:6",
																"statements": [
																	{
																		"nativeSrc": "3558:27:6",
																		"nodeType": "YulAssignment",
																		"src": "3558:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3572:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3572:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3580:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3580:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3568:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3568:3:6"
																			},
																			"nativeSrc": "3568:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3568:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3558:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3536:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3536:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3529:6:6"
																},
																"nativeSrc": "3529:26:6",
																"nodeType": "YulFunctionCall",
																"src": "3529:26:6"
															},
															"nativeSrc": "3526:61:6",
															"nodeType": "YulIf",
															"src": "3526:61:6"
														},
														{
															"body": {
																"nativeSrc": "3646:111:6",
																"nodeType": "YulBlock",
																"src": "3646:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3667:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3667:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3674:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3674:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3679:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3679:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3670:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3670:3:6"
																					},
																					"nativeSrc": "3670:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3670:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3660:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3660:6:6"
																			},
																			"nativeSrc": "3660:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3660:31:6"
																		},
																		"nativeSrc": "3660:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3660:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3711:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3711:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3714:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3714:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3704:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3704:6:6"
																			},
																			"nativeSrc": "3704:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3704:15:6"
																		},
																		"nativeSrc": "3704:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3704:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3739:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3739:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3742:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3742:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3732:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3732:6:6"
																			},
																			"nativeSrc": "3732:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3732:15:6"
																		},
																		"nativeSrc": "3732:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3732:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3602:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3602:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3625:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3625:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3633:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3633:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3622:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3622:2:6"
																		},
																		"nativeSrc": "3622:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3599:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3599:2:6"
																},
																"nativeSrc": "3599:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3599:38:6"
															},
															"nativeSrc": "3596:161:6",
															"nodeType": "YulIf",
															"src": "3596:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3383:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3418:4:6",
														"nodeType": "YulTypedName",
														"src": "3418:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3427:6:6",
														"nodeType": "YulTypedName",
														"src": "3427:6:6",
														"type": ""
													}
												],
												"src": "3383:380:6"
											},
											{
												"body": {
													"nativeSrc": "3800:95:6",
													"nodeType": "YulBlock",
													"src": "3800:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3817:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3817:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3824:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3824:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3829:10:6",
																				"nodeType": "YulLiteral",
																				"src": "3829:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3820:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3820:3:6"
																		},
																		"nativeSrc": "3820:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3820:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3810:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:6"
																},
																"nativeSrc": "3810:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3810:31:6"
															},
															"nativeSrc": "3810:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3810:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3857:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3860:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3860:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3850:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:6"
																},
																"nativeSrc": "3850:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3850:15:6"
															},
															"nativeSrc": "3850:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3850:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3881:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3881:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3884:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3884:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3874:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:6"
																},
																"nativeSrc": "3874:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3874:15:6"
															},
															"nativeSrc": "3874:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3874:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3768:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3768:127:6"
											},
											{
												"body": {
													"nativeSrc": "3949:79:6",
													"nodeType": "YulBlock",
													"src": "3949:79:6",
													"statements": [
														{
															"nativeSrc": "3959:17:6",
															"nodeType": "YulAssignment",
															"src": "3959:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3971:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3971:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3974:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3974:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3967:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:6"
																},
																"nativeSrc": "3967:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3967:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3959:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3959:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4000:22:6",
																"nodeType": "YulBlock",
																"src": "4000:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4002:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4002:16:6"
																			},
																			"nativeSrc": "4002:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4002:18:6"
																		},
																		"nativeSrc": "4002:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4002:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3991:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3991:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3997:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3997:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3988:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3988:2:6"
																},
																"nativeSrc": "3988:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3988:11:6"
															},
															"nativeSrc": "3985:37:6",
															"nodeType": "YulIf",
															"src": "3985:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3900:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3931:1:6",
														"nodeType": "YulTypedName",
														"src": "3931:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3934:1:6",
														"nodeType": "YulTypedName",
														"src": "3934:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3940:4:6",
														"nodeType": "YulTypedName",
														"src": "3940:4:6",
														"type": ""
													}
												],
												"src": "3900:128:6"
											},
											{
												"body": {
													"nativeSrc": "4081:77:6",
													"nodeType": "YulBlock",
													"src": "4081:77:6",
													"statements": [
														{
															"nativeSrc": "4091:16:6",
															"nodeType": "YulAssignment",
															"src": "4091:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4102:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4102:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4105:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4105:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4098:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4098:3:6"
																},
																"nativeSrc": "4098:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4098:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4091:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4091:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4130:22:6",
																"nodeType": "YulBlock",
																"src": "4130:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4132:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4132:16:6"
																			},
																			"nativeSrc": "4132:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:18:6"
																		},
																		"nativeSrc": "4132:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4122:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4122:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4125:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4125:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4119:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4119:2:6"
																},
																"nativeSrc": "4119:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4119:10:6"
															},
															"nativeSrc": "4116:36:6",
															"nodeType": "YulIf",
															"src": "4116:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4033:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4064:1:6",
														"nodeType": "YulTypedName",
														"src": "4064:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4067:1:6",
														"nodeType": "YulTypedName",
														"src": "4067:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4073:3:6",
														"nodeType": "YulTypedName",
														"src": "4073:3:6",
														"type": ""
													}
												],
												"src": "4033:125:6"
											},
											{
												"body": {
													"nativeSrc": "4337:232:6",
													"nodeType": "YulBlock",
													"src": "4337:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4354:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4354:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4365:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4365:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4347:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4347:6:6"
																},
																"nativeSrc": "4347:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4347:21:6"
															},
															"nativeSrc": "4347:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4347:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4388:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4388:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4384:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4384:3:6"
																		},
																		"nativeSrc": "4384:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4384:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4404:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4377:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4377:6:6"
																},
																"nativeSrc": "4377:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4377:30:6"
															},
															"nativeSrc": "4377:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4377:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4427:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4427:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4438:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4438:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4423:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4423:3:6"
																		},
																		"nativeSrc": "4423:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4423:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nativeSrc": "4443:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4443:34:6",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4416:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4416:6:6"
																},
																"nativeSrc": "4416:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4416:62:6"
															},
															"nativeSrc": "4416:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4416:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4498:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4509:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4494:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:6"
																		},
																		"nativeSrc": "4494:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:6"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nativeSrc": "4514:12:6",
																		"nodeType": "YulLiteral",
																		"src": "4514:12:6",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4487:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:6"
																},
																"nativeSrc": "4487:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4487:40:6"
															},
															"nativeSrc": "4487:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "4487:40:6"
														},
														{
															"nativeSrc": "4536:27:6",
															"nodeType": "YulAssignment",
															"src": "4536:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4548:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4548:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4559:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4559:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4544:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4544:3:6"
																},
																"nativeSrc": "4544:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4544:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4536:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4536:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4163:406:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4314:9:6",
														"nodeType": "YulTypedName",
														"src": "4314:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4328:4:6",
														"nodeType": "YulTypedName",
														"src": "4328:4:6",
														"type": ""
													}
												],
												"src": "4163:406:6"
											},
											{
												"body": {
													"nativeSrc": "4606:95:6",
													"nodeType": "YulBlock",
													"src": "4606:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4623:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4623:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4630:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4630:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4635:10:6",
																				"nodeType": "YulLiteral",
																				"src": "4635:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4626:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:6"
																		},
																		"nativeSrc": "4626:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4626:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4616:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:6"
																},
																"nativeSrc": "4616:31:6",
																"nodeType": "YulFunctionCall",
																"src": "4616:31:6"
															},
															"nativeSrc": "4616:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "4616:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4663:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4663:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4666:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4666:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4656:6:6"
																},
																"nativeSrc": "4656:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4656:15:6"
															},
															"nativeSrc": "4656:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4656:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4687:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4687:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4690:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4690:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4680:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:6"
																},
																"nativeSrc": "4680:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4680:15:6"
															},
															"nativeSrc": "4680:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4680:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4574:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4574:127:6"
											},
											{
												"body": {
													"nativeSrc": "4752:74:6",
													"nodeType": "YulBlock",
													"src": "4752:74:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4775:22:6",
																"nodeType": "YulBlock",
																"src": "4775:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4777:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4777:16:6"
																			},
																			"nativeSrc": "4777:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4777:18:6"
																		},
																		"nativeSrc": "4777:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4777:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4772:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4772:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4765:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:6"
																},
																"nativeSrc": "4765:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4765:9:6"
															},
															"nativeSrc": "4762:35:6",
															"nodeType": "YulIf",
															"src": "4762:35:6"
														},
														{
															"nativeSrc": "4806:14:6",
															"nodeType": "YulAssignment",
															"src": "4806:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4815:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4815:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4818:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4818:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4811:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4811:3:6"
																},
																"nativeSrc": "4811:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4811:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4806:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4806:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4706:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4737:1:6",
														"nodeType": "YulTypedName",
														"src": "4737:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4740:1:6",
														"nodeType": "YulTypedName",
														"src": "4740:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4746:1:6",
														"nodeType": "YulTypedName",
														"src": "4746:1:6",
														"type": ""
													}
												],
												"src": "4706:120:6"
											},
											{
												"body": {
													"nativeSrc": "5005:236:6",
													"nodeType": "YulBlock",
													"src": "5005:236:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5022:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5022:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5033:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5033:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5015:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:6"
																},
																"nativeSrc": "5015:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5015:21:6"
															},
															"nativeSrc": "5015:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5015:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5056:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5056:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5067:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5067:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5052:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5052:3:6"
																		},
																		"nativeSrc": "5052:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5052:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5072:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5072:2:6",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5045:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5045:6:6"
																},
																"nativeSrc": "5045:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5045:30:6"
															},
															"nativeSrc": "5045:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5045:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5095:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5095:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5106:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5106:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5091:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5091:3:6"
																		},
																		"nativeSrc": "5091:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5091:18:6"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "5111:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5111:34:6",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5084:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5084:6:6"
																},
																"nativeSrc": "5084:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5084:62:6"
															},
															"nativeSrc": "5084:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5084:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5166:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5166:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5177:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5177:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5162:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:6"
																		},
																		"nativeSrc": "5162:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:18:6"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "5182:16:6",
																		"nodeType": "YulLiteral",
																		"src": "5182:16:6",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5155:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5155:6:6"
																},
																"nativeSrc": "5155:44:6",
																"nodeType": "YulFunctionCall",
																"src": "5155:44:6"
															},
															"nativeSrc": "5155:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "5155:44:6"
														},
														{
															"nativeSrc": "5208:27:6",
															"nodeType": "YulAssignment",
															"src": "5208:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5220:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5220:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5231:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5231:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5216:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:6"
																},
																"nativeSrc": "5216:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5216:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5208:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5208:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4831:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4982:9:6",
														"nodeType": "YulTypedName",
														"src": "4982:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4996:4:6",
														"nodeType": "YulTypedName",
														"src": "4996:4:6",
														"type": ""
													}
												],
												"src": "4831:410:6"
											},
											{
												"body": {
													"nativeSrc": "5278:95:6",
													"nodeType": "YulBlock",
													"src": "5278:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5295:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5295:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5302:3:6",
																				"nodeType": "YulLiteral",
																				"src": "5302:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5307:10:6",
																				"nodeType": "YulLiteral",
																				"src": "5307:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5298:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5298:3:6"
																		},
																		"nativeSrc": "5298:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5298:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5288:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5288:6:6"
																},
																"nativeSrc": "5288:31:6",
																"nodeType": "YulFunctionCall",
																"src": "5288:31:6"
															},
															"nativeSrc": "5288:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "5288:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5335:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5335:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5338:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5328:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:6"
																},
																"nativeSrc": "5328:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5328:15:6"
															},
															"nativeSrc": "5328:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5328:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5359:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5359:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5362:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5362:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5352:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5352:6:6"
																},
																"nativeSrc": "5352:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5352:15:6"
															},
															"nativeSrc": "5352:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5352:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5246:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5246:127:6"
											},
											{
												"body": {
													"nativeSrc": "5434:65:6",
													"nodeType": "YulBlock",
													"src": "5434:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5451:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5451:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5454:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5454:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5444:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:6"
																},
																"nativeSrc": "5444:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5444:14:6"
															},
															"nativeSrc": "5444:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "5444:14:6"
														},
														{
															"nativeSrc": "5467:26:6",
															"nodeType": "YulAssignment",
															"src": "5467:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5485:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5485:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5488:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5488:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5475:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5475:9:6"
																},
																"nativeSrc": "5475:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5475:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5467:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5467:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "5378:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5417:3:6",
														"nodeType": "YulTypedName",
														"src": "5417:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5425:4:6",
														"nodeType": "YulTypedName",
														"src": "5425:4:6",
														"type": ""
													}
												],
												"src": "5378:121:6"
											},
											{
												"body": {
													"nativeSrc": "5585:437:6",
													"nodeType": "YulBlock",
													"src": "5585:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5618:398:6",
																"nodeType": "YulBlock",
																"src": "5618:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5639:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5639:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "5642:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5642:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5632:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5632:6:6"
																			},
																			"nativeSrc": "5632:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5632:16:6"
																		},
																		"nativeSrc": "5632:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5632:16:6"
																	},
																	{
																		"nativeSrc": "5661:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5661:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5683:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5683:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5686:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5686:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "5673:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5673:9:6"
																			},
																			"nativeSrc": "5673:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5673:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "5665:4:6",
																				"nodeType": "YulTypedName",
																				"src": "5665:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5704:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5704:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "5727:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "5727:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5737:1:6",
																							"nodeType": "YulLiteral",
																							"src": "5737:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "5744:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "5744:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5756:2:6",
																									"nodeType": "YulLiteral",
																									"src": "5756:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5740:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5740:3:6"
																							},
																							"nativeSrc": "5740:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5740:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "5733:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5733:3:6"
																					},
																					"nativeSrc": "5733:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5733:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5723:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5723:3:6"
																			},
																			"nativeSrc": "5723:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5723:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5708:11:6",
																				"nodeType": "YulTypedName",
																				"src": "5708:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5798:23:6",
																			"nodeType": "YulBlock",
																			"src": "5798:23:6",
																			"statements": [
																				{
																					"nativeSrc": "5800:19:6",
																					"nodeType": "YulAssignment",
																					"src": "5800:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "5815:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5815:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5800:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "5800:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5780:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "5780:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5792:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5792:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5777:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "5777:2:6"
																			},
																			"nativeSrc": "5777:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5777:20:6"
																		},
																		"nativeSrc": "5774:47:6",
																		"nodeType": "YulIf",
																		"src": "5774:47:6"
																	},
																	{
																		"nativeSrc": "5834:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5834:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "5848:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "5848:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5858:1:6",
																							"nodeType": "YulLiteral",
																							"src": "5858:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5865:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5865:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5870:2:6",
																									"nodeType": "YulLiteral",
																									"src": "5870:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5861:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5861:3:6"
																							},
																							"nativeSrc": "5861:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5861:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "5854:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5854:3:6"
																					},
																					"nativeSrc": "5854:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5854:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5844:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5844:3:6"
																			},
																			"nativeSrc": "5844:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5844:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "5838:2:6",
																				"nodeType": "YulTypedName",
																				"src": "5838:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5888:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5888:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "5901:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "5901:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "5892:5:6",
																				"nodeType": "YulTypedName",
																				"src": "5892:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5986:20:6",
																			"nodeType": "YulBlock",
																			"src": "5986:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "5995:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "5995:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6002:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6002:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "5988:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5988:6:6"
																						},
																						"nativeSrc": "5988:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5988:16:6"
																					},
																					"nativeSrc": "5988:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "5988:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5936:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5936:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5943:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5943:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5933:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "5933:2:6"
																			},
																			"nativeSrc": "5933:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5933:13:6"
																		},
																		"nativeSrc": "5925:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "5947:26:6",
																			"nodeType": "YulBlock",
																			"src": "5947:26:6",
																			"statements": [
																				{
																					"nativeSrc": "5949:22:6",
																					"nodeType": "YulAssignment",
																					"src": "5949:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "5962:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "5962:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5969:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5969:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5958:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5958:3:6"
																						},
																						"nativeSrc": "5958:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5958:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "5949:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "5949:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "5929:3:6",
																			"nodeType": "YulBlock",
																			"src": "5929:3:6",
																			"statements": []
																		},
																		"src": "5925:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5601:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5601:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5606:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5606:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5598:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5598:2:6"
																},
																"nativeSrc": "5598:11:6",
																"nodeType": "YulFunctionCall",
																"src": "5598:11:6"
															},
															"nativeSrc": "5595:421:6",
															"nodeType": "YulIf",
															"src": "5595:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "5504:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5557:5:6",
														"nodeType": "YulTypedName",
														"src": "5557:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5564:3:6",
														"nodeType": "YulTypedName",
														"src": "5564:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5569:10:6",
														"nodeType": "YulTypedName",
														"src": "5569:10:6",
														"type": ""
													}
												],
												"src": "5504:518:6"
											},
											{
												"body": {
													"nativeSrc": "6112:81:6",
													"nodeType": "YulBlock",
													"src": "6112:81:6",
													"statements": [
														{
															"nativeSrc": "6122:65:6",
															"nodeType": "YulAssignment",
															"src": "6122:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "6137:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6137:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6155:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6155:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "6158:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6158:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "6151:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6151:3:6"
																								},
																								"nativeSrc": "6151:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6151:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6168:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6168:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "6164:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6164:3:6"
																								},
																								"nativeSrc": "6164:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6164:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "6147:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6147:3:6"
																						},
																						"nativeSrc": "6147:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6147:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6143:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6143:3:6"
																				},
																				"nativeSrc": "6143:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6143:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6133:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6133:3:6"
																		},
																		"nativeSrc": "6133:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6133:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6179:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6179:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6182:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6182:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6175:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6175:3:6"
																		},
																		"nativeSrc": "6175:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6175:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6130:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6130:2:6"
																},
																"nativeSrc": "6130:57:6",
																"nodeType": "YulFunctionCall",
																"src": "6130:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6122:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6122:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6027:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6089:4:6",
														"nodeType": "YulTypedName",
														"src": "6089:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6095:3:6",
														"nodeType": "YulTypedName",
														"src": "6095:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6103:4:6",
														"nodeType": "YulTypedName",
														"src": "6103:4:6",
														"type": ""
													}
												],
												"src": "6027:166:6"
											},
											{
												"body": {
													"nativeSrc": "6294:1249:6",
													"nodeType": "YulBlock",
													"src": "6294:1249:6",
													"statements": [
														{
															"nativeSrc": "6304:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6304:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6324:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6324:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6318:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6318:5:6"
																},
																"nativeSrc": "6318:10:6",
																"nodeType": "YulFunctionCall",
																"src": "6318:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6308:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6308:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6371:22:6",
																"nodeType": "YulBlock",
																"src": "6371:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6373:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6373:16:6"
																			},
																			"nativeSrc": "6373:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6373:18:6"
																		},
																		"nativeSrc": "6373:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6373:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6343:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6343:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6351:18:6",
																		"nodeType": "YulLiteral",
																		"src": "6351:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6340:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6340:2:6"
																},
																"nativeSrc": "6340:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6340:30:6"
															},
															"nativeSrc": "6337:56:6",
															"nodeType": "YulIf",
															"src": "6337:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6446:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6446:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6484:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6484:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6478:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6478:5:6"
																				},
																				"nativeSrc": "6478:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6478:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "6452:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "6452:25:6"
																		},
																		"nativeSrc": "6452:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6452:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6492:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6492:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "6402:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6402:43:6"
																},
																"nativeSrc": "6402:97:6",
																"nodeType": "YulFunctionCall",
																"src": "6402:97:6"
															},
															"nativeSrc": "6402:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "6402:97:6"
														},
														{
															"nativeSrc": "6508:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6508:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6525:1:6",
																"nodeType": "YulLiteral",
																"src": "6525:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6512:9:6",
																	"nodeType": "YulTypedName",
																	"src": "6512:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6535:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6535:23:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6554:4:6",
																"nodeType": "YulLiteral",
																"src": "6554:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "6539:11:6",
																	"nodeType": "YulTypedName",
																	"src": "6539:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6567:17:6",
															"nodeType": "YulAssignment",
															"src": "6567:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6580:4:6",
																"nodeType": "YulLiteral",
																"src": "6580:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6567:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6567:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6630:656:6",
																		"nodeType": "YulBlock",
																		"src": "6630:656:6",
																		"statements": [
																			{
																				"nativeSrc": "6644:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6644:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6663:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6663:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6675:2:6",
																									"nodeType": "YulLiteral",
																									"src": "6675:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6671:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6671:3:6"
																							},
																							"nativeSrc": "6671:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6671:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6659:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6659:3:6"
																					},
																					"nativeSrc": "6659:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6659:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6648:7:6",
																						"nodeType": "YulTypedName",
																						"src": "6648:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6692:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6692:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6736:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6736:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "6706:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "6706:29:6"
																					},
																					"nativeSrc": "6706:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6706:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6696:6:6",
																						"nodeType": "YulTypedName",
																						"src": "6696:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6754:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6754:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6763:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6763:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6758:1:6",
																						"nodeType": "YulTypedName",
																						"src": "6758:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6841:172:6",
																					"nodeType": "YulBlock",
																					"src": "6841:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6866:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6866:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6884:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "6884:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6889:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "6889:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6880:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6880:3:6"
																												},
																												"nativeSrc": "6880:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6880:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6874:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "6874:5:6"
																										},
																										"nativeSrc": "6874:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6874:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6859:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6859:6:6"
																								},
																								"nativeSrc": "6859:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6859:42:6"
																							},
																							"nativeSrc": "6859:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6859:42:6"
																						},
																						{
																							"nativeSrc": "6918:24:6",
																							"nodeType": "YulAssignment",
																							"src": "6918:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6932:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6932:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6940:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6940:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6928:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6928:3:6"
																								},
																								"nativeSrc": "6928:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6928:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6918:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6918:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6959:40:6",
																							"nodeType": "YulAssignment",
																							"src": "6959:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6976:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "6976:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "6987:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "6987:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6972:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6972:3:6"
																								},
																								"nativeSrc": "6972:27:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6972:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6959:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "6959:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6788:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "6788:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6791:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6791:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6785:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6785:2:6"
																					},
																					"nativeSrc": "6785:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6785:14:6"
																				},
																				"nativeSrc": "6777:236:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6800:28:6",
																					"nodeType": "YulBlock",
																					"src": "6800:28:6",
																					"statements": [
																						{
																							"nativeSrc": "6802:24:6",
																							"nodeType": "YulAssignment",
																							"src": "6802:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6811:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "6811:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "6814:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "6814:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6807:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6807:3:6"
																								},
																								"nativeSrc": "6807:19:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6807:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6802:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "6802:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6781:3:6",
																					"nodeType": "YulBlock",
																					"src": "6781:3:6",
																					"statements": []
																				},
																				"src": "6777:236:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "7061:166:6",
																					"nodeType": "YulBlock",
																					"src": "7061:166:6",
																					"statements": [
																						{
																							"nativeSrc": "7079:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7079:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7106:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "7106:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7111:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "7111:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7102:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "7102:3:6"
																										},
																										"nativeSrc": "7102:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7102:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7096:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7096:5:6"
																								},
																								"nativeSrc": "7096:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7096:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7083:9:6",
																									"nodeType": "YulTypedName",
																									"src": "7083:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7146:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7146:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7158:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "7158:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "7185:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "7185:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "7188:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "7188:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "7181:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "7181:3:6"
																																		},
																																		"nativeSrc": "7181:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "7181:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7197:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "7197:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "7177:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "7177:3:6"
																																},
																																"nativeSrc": "7177:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "7177:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7207:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "7207:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "7203:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "7203:3:6"
																																},
																																"nativeSrc": "7203:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "7203:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "7173:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "7173:3:6"
																														},
																														"nativeSrc": "7173:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "7173:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "7169:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "7169:3:6"
																												},
																												"nativeSrc": "7169:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "7169:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "7154:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "7154:3:6"
																										},
																										"nativeSrc": "7154:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7154:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7139:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7139:6:6"
																								},
																								"nativeSrc": "7139:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7139:74:6"
																							},
																							"nativeSrc": "7139:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "7139:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7032:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7032:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7041:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7041:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7029:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7029:2:6"
																					},
																					"nativeSrc": "7029:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7029:19:6"
																				},
																				"nativeSrc": "7026:201:6",
																				"nodeType": "YulIf",
																				"src": "7026:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7247:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7247:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "7261:1:6",
																											"nodeType": "YulLiteral",
																											"src": "7261:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "7264:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "7264:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "7257:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "7257:3:6"
																									},
																									"nativeSrc": "7257:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "7257:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7273:1:6",
																									"nodeType": "YulLiteral",
																									"src": "7273:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7253:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "7253:3:6"
																							},
																							"nativeSrc": "7253:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7253:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7240:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7240:6:6"
																					},
																					"nativeSrc": "7240:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7240:36:6"
																				},
																				"nativeSrc": "7240:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7240:36:6"
																			}
																		]
																	},
																	"nativeSrc": "6623:663:6",
																	"nodeType": "YulCase",
																	"src": "6623:663:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6628:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6628:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7303:234:6",
																		"nodeType": "YulBlock",
																		"src": "7303:234:6",
																		"statements": [
																			{
																				"nativeSrc": "7317:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7317:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7330:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7330:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7321:5:6",
																						"nodeType": "YulTypedName",
																						"src": "7321:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7366:67:6",
																					"nodeType": "YulBlock",
																					"src": "7366:67:6",
																					"statements": [
																						{
																							"nativeSrc": "7384:35:6",
																							"nodeType": "YulAssignment",
																							"src": "7384:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7403:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "7403:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7408:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "7408:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7399:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "7399:3:6"
																										},
																										"nativeSrc": "7399:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7399:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7393:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7393:5:6"
																								},
																								"nativeSrc": "7393:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7393:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7384:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7384:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7347:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7347:6:6"
																				},
																				"nativeSrc": "7344:89:6",
																				"nodeType": "YulIf",
																				"src": "7344:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7453:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7453:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7512:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7512:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7519:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7519:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7459:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "7459:52:6"
																							},
																							"nativeSrc": "7459:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7459:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7446:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7446:6:6"
																					},
																					"nativeSrc": "7446:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7446:81:6"
																				},
																				"nativeSrc": "7446:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7446:81:6"
																			}
																		]
																	},
																	"nativeSrc": "7295:242:6",
																	"nodeType": "YulCase",
																	"src": "7295:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6603:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6603:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6611:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6611:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6600:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6600:2:6"
																},
																"nativeSrc": "6600:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6600:14:6"
															},
															"nativeSrc": "6593:944:6",
															"nodeType": "YulSwitch",
															"src": "6593:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6198:1345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6279:4:6",
														"nodeType": "YulTypedName",
														"src": "6279:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6285:3:6",
														"nodeType": "YulTypedName",
														"src": "6285:3:6",
														"type": ""
													}
												],
												"src": "6198:1345:6"
											},
											{
												"body": {
													"nativeSrc": "7586:74:6",
													"nodeType": "YulBlock",
													"src": "7586:74:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7609:22:6",
																"nodeType": "YulBlock",
																"src": "7609:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7611:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7611:16:6"
																			},
																			"nativeSrc": "7611:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7611:18:6"
																		},
																		"nativeSrc": "7611:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7611:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7606:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7606:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7599:6:6"
																},
																"nativeSrc": "7599:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7599:9:6"
															},
															"nativeSrc": "7596:35:6",
															"nodeType": "YulIf",
															"src": "7596:35:6"
														},
														{
															"nativeSrc": "7640:14:6",
															"nodeType": "YulAssignment",
															"src": "7640:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7649:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7649:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7652:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7652:1:6"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "7645:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7645:3:6"
																},
																"nativeSrc": "7645:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7645:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7640:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7640:1:6"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "7548:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7571:1:6",
														"nodeType": "YulTypedName",
														"src": "7571:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7574:1:6",
														"nodeType": "YulTypedName",
														"src": "7574:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7580:1:6",
														"nodeType": "YulTypedName",
														"src": "7580:1:6",
														"type": ""
													}
												],
												"src": "7548:112:6"
											},
											{
												"body": {
													"nativeSrc": "7772:87:6",
													"nodeType": "YulBlock",
													"src": "7772:87:6",
													"statements": [
														{
															"nativeSrc": "7782:26:6",
															"nodeType": "YulAssignment",
															"src": "7782:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7794:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7794:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7805:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7805:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7790:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7790:3:6"
																},
																"nativeSrc": "7790:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7790:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7782:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7782:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7824:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7824:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7839:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7839:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7847:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7847:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7835:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:6"
																		},
																		"nativeSrc": "7835:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7835:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7817:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7817:6:6"
																},
																"nativeSrc": "7817:36:6",
																"nodeType": "YulFunctionCall",
																"src": "7817:36:6"
															},
															"nativeSrc": "7817:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "7817:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7665:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7741:9:6",
														"nodeType": "YulTypedName",
														"src": "7741:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7752:6:6",
														"nodeType": "YulTypedName",
														"src": "7752:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7763:4:6",
														"nodeType": "YulTypedName",
														"src": "7763:4:6",
														"type": ""
													}
												],
												"src": "7665:194:6"
											},
											{
												"body": {
													"nativeSrc": "7896:95:6",
													"nodeType": "YulBlock",
													"src": "7896:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7913:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7913:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7920:3:6",
																				"nodeType": "YulLiteral",
																				"src": "7920:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7925:10:6",
																				"nodeType": "YulLiteral",
																				"src": "7925:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:6"
																		},
																		"nativeSrc": "7916:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7906:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:6"
																},
																"nativeSrc": "7906:31:6",
																"nodeType": "YulFunctionCall",
																"src": "7906:31:6"
															},
															"nativeSrc": "7906:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "7906:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7953:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7953:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7956:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7956:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7946:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:6"
																},
																"nativeSrc": "7946:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7946:15:6"
															},
															"nativeSrc": "7946:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7946:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7977:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7977:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7980:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7980:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7970:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7970:6:6"
																},
																"nativeSrc": "7970:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7970:15:6"
															},
															"nativeSrc": "7970:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7970:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7864:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7864:127:6"
											},
											{
												"body": {
													"nativeSrc": "8170:228:6",
													"nodeType": "YulBlock",
													"src": "8170:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8187:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8187:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8198:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8198:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8180:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8180:6:6"
																},
																"nativeSrc": "8180:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8180:21:6"
															},
															"nativeSrc": "8180:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8180:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8221:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8221:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8232:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8232:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8217:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8217:3:6"
																		},
																		"nativeSrc": "8217:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8217:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8237:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8237:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8210:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:6"
																},
																"nativeSrc": "8210:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8210:30:6"
															},
															"nativeSrc": "8210:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8210:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8260:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8260:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8271:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8271:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8256:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:6"
																		},
																		"nativeSrc": "8256:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "8276:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8276:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8249:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8249:6:6"
																},
																"nativeSrc": "8249:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8249:62:6"
															},
															"nativeSrc": "8249:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8249:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8331:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8331:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8342:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8342:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8327:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8327:3:6"
																		},
																		"nativeSrc": "8327:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8327:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "8347:8:6",
																		"nodeType": "YulLiteral",
																		"src": "8347:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8320:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8320:6:6"
																},
																"nativeSrc": "8320:36:6",
																"nodeType": "YulFunctionCall",
																"src": "8320:36:6"
															},
															"nativeSrc": "8320:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "8320:36:6"
														},
														{
															"nativeSrc": "8365:27:6",
															"nodeType": "YulAssignment",
															"src": "8365:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8377:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8377:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8388:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8388:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8373:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8373:3:6"
																},
																"nativeSrc": "8373:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8373:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8365:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8365:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7996:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8147:9:6",
														"nodeType": "YulTypedName",
														"src": "8147:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8161:4:6",
														"nodeType": "YulTypedName",
														"src": "8161:4:6",
														"type": ""
													}
												],
												"src": "7996:402:6"
											},
											{
												"body": {
													"nativeSrc": "8577:226:6",
													"nodeType": "YulBlock",
													"src": "8577:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8594:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8594:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8605:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8605:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8587:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8587:6:6"
																},
																"nativeSrc": "8587:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8587:21:6"
															},
															"nativeSrc": "8587:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8587:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8628:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8628:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8639:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8639:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8624:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8624:3:6"
																		},
																		"nativeSrc": "8624:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8624:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8644:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8644:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8617:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8617:6:6"
																},
																"nativeSrc": "8617:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8617:30:6"
															},
															"nativeSrc": "8617:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8617:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8667:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8667:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8678:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8678:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8663:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8663:3:6"
																		},
																		"nativeSrc": "8663:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8663:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8683:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8683:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8656:6:6"
																},
																"nativeSrc": "8656:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8656:62:6"
															},
															"nativeSrc": "8656:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8656:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8738:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8738:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8749:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8749:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8734:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8734:3:6"
																		},
																		"nativeSrc": "8734:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8734:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8754:6:6",
																		"nodeType": "YulLiteral",
																		"src": "8754:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8727:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8727:6:6"
																},
																"nativeSrc": "8727:34:6",
																"nodeType": "YulFunctionCall",
																"src": "8727:34:6"
															},
															"nativeSrc": "8727:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "8727:34:6"
														},
														{
															"nativeSrc": "8770:27:6",
															"nodeType": "YulAssignment",
															"src": "8770:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8782:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8782:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8793:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8793:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8778:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8778:3:6"
																},
																"nativeSrc": "8778:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8778:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8770:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8770:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8403:400:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8554:9:6",
														"nodeType": "YulTypedName",
														"src": "8554:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8568:4:6",
														"nodeType": "YulTypedName",
														"src": "8568:4:6",
														"type": ""
													}
												],
												"src": "8403:400:6"
											},
											{
												"body": {
													"nativeSrc": "8982:224:6",
													"nodeType": "YulBlock",
													"src": "8982:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8999:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8999:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9010:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9010:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8992:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8992:6:6"
																},
																"nativeSrc": "8992:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8992:21:6"
															},
															"nativeSrc": "8992:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8992:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9033:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9033:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9044:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9044:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9029:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9029:3:6"
																		},
																		"nativeSrc": "9029:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9029:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9049:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9049:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9022:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9022:6:6"
																},
																"nativeSrc": "9022:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9022:30:6"
															},
															"nativeSrc": "9022:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9022:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9072:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9072:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9083:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9083:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9068:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:6"
																		},
																		"nativeSrc": "9068:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9068:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "9088:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9088:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9061:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9061:6:6"
																},
																"nativeSrc": "9061:62:6",
																"nodeType": "YulFunctionCall",
																"src": "9061:62:6"
															},
															"nativeSrc": "9061:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "9061:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9143:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9143:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9154:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9154:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9139:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9139:3:6"
																		},
																		"nativeSrc": "9139:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9139:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "9159:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9159:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:6"
																},
																"nativeSrc": "9132:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9132:32:6"
															},
															"nativeSrc": "9132:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "9132:32:6"
														},
														{
															"nativeSrc": "9173:27:6",
															"nodeType": "YulAssignment",
															"src": "9173:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9185:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9185:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9196:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9196:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:6"
																},
																"nativeSrc": "9181:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9181:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9173:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9173:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8808:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8959:9:6",
														"nodeType": "YulTypedName",
														"src": "8959:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8973:4:6",
														"nodeType": "YulTypedName",
														"src": "8973:4:6",
														"type": ""
													}
												],
												"src": "8808:398:6"
											},
											{
												"body": {
													"nativeSrc": "9385:227:6",
													"nodeType": "YulBlock",
													"src": "9385:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9402:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9402:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9395:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9395:6:6"
																},
																"nativeSrc": "9395:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9395:21:6"
															},
															"nativeSrc": "9395:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9395:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9436:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9436:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9447:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9447:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9432:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9432:3:6"
																		},
																		"nativeSrc": "9432:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9432:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9452:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9452:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9425:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:6"
																},
																"nativeSrc": "9425:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9425:30:6"
															},
															"nativeSrc": "9425:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9425:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9475:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9475:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9486:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9486:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9471:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9471:3:6"
																		},
																		"nativeSrc": "9471:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9471:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "9491:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9491:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9464:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9464:6:6"
																},
																"nativeSrc": "9464:62:6",
																"nodeType": "YulFunctionCall",
																"src": "9464:62:6"
															},
															"nativeSrc": "9464:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "9464:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9546:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9546:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9557:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9557:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9542:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9542:3:6"
																		},
																		"nativeSrc": "9542:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9542:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "9562:7:6",
																		"nodeType": "YulLiteral",
																		"src": "9562:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9535:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9535:6:6"
																},
																"nativeSrc": "9535:35:6",
																"nodeType": "YulFunctionCall",
																"src": "9535:35:6"
															},
															"nativeSrc": "9535:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "9535:35:6"
														},
														{
															"nativeSrc": "9579:27:6",
															"nodeType": "YulAssignment",
															"src": "9579:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9591:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9591:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9602:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9602:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9587:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9587:3:6"
																},
																"nativeSrc": "9587:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9587:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9579:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9579:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9211:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9362:9:6",
														"nodeType": "YulTypedName",
														"src": "9362:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9376:4:6",
														"nodeType": "YulTypedName",
														"src": "9376:4:6",
														"type": ""
													}
												],
												"src": "9211:401:6"
											},
											{
												"body": {
													"nativeSrc": "9791:225:6",
													"nodeType": "YulBlock",
													"src": "9791:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9808:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9808:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9819:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9819:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9801:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9801:6:6"
																},
																"nativeSrc": "9801:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9801:21:6"
															},
															"nativeSrc": "9801:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9801:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9842:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9853:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9838:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9838:3:6"
																		},
																		"nativeSrc": "9838:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9838:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9858:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9831:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9831:6:6"
																},
																"nativeSrc": "9831:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9831:30:6"
															},
															"nativeSrc": "9831:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9831:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9881:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9881:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9892:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9892:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9877:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9877:3:6"
																		},
																		"nativeSrc": "9877:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9877:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "9897:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9897:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9870:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9870:6:6"
																},
																"nativeSrc": "9870:62:6",
																"nodeType": "YulFunctionCall",
																"src": "9870:62:6"
															},
															"nativeSrc": "9870:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "9870:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9952:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9963:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9963:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9948:3:6"
																		},
																		"nativeSrc": "9948:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9948:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "9968:5:6",
																		"nodeType": "YulLiteral",
																		"src": "9968:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9941:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9941:6:6"
																},
																"nativeSrc": "9941:33:6",
																"nodeType": "YulFunctionCall",
																"src": "9941:33:6"
															},
															"nativeSrc": "9941:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "9941:33:6"
														},
														{
															"nativeSrc": "9983:27:6",
															"nodeType": "YulAssignment",
															"src": "9983:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9995:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9995:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10006:3:6",
																		"nodeType": "YulLiteral",
																		"src": "10006:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9991:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9991:3:6"
																},
																"nativeSrc": "9991:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9991:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9983:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9983:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9617:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9768:9:6",
														"nodeType": "YulTypedName",
														"src": "9768:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9782:4:6",
														"nodeType": "YulTypedName",
														"src": "9782:4:6",
														"type": ""
													}
												],
												"src": "9617:399:6"
											},
											{
												"body": {
													"nativeSrc": "10195:231:6",
													"nodeType": "YulBlock",
													"src": "10195:231:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10212:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10212:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10223:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10223:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10205:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10205:6:6"
																},
																"nativeSrc": "10205:21:6",
																"nodeType": "YulFunctionCall",
																"src": "10205:21:6"
															},
															"nativeSrc": "10205:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "10205:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10246:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10246:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10257:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10257:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10242:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10242:3:6"
																		},
																		"nativeSrc": "10242:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10242:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10262:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10262:2:6",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10235:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10235:6:6"
																},
																"nativeSrc": "10235:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10235:30:6"
															},
															"nativeSrc": "10235:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "10235:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10285:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10285:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10296:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10296:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10281:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10281:3:6"
																		},
																		"nativeSrc": "10281:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10281:18:6"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nativeSrc": "10301:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10301:34:6",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10274:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10274:6:6"
																},
																"nativeSrc": "10274:62:6",
																"nodeType": "YulFunctionCall",
																"src": "10274:62:6"
															},
															"nativeSrc": "10274:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "10274:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10356:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10356:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10367:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10367:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10352:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10352:3:6"
																		},
																		"nativeSrc": "10352:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10352:18:6"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "10372:11:6",
																		"nodeType": "YulLiteral",
																		"src": "10372:11:6",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10345:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10345:6:6"
																},
																"nativeSrc": "10345:39:6",
																"nodeType": "YulFunctionCall",
																"src": "10345:39:6"
															},
															"nativeSrc": "10345:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "10345:39:6"
														},
														{
															"nativeSrc": "10393:27:6",
															"nodeType": "YulAssignment",
															"src": "10393:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10405:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10405:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10416:3:6",
																		"nodeType": "YulLiteral",
																		"src": "10416:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10401:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10401:3:6"
																},
																"nativeSrc": "10401:19:6",
																"nodeType": "YulFunctionCall",
																"src": "10401:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10393:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10393:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10021:405:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10172:9:6",
														"nodeType": "YulTypedName",
														"src": "10172:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10186:4:6",
														"nodeType": "YulTypedName",
														"src": "10186:4:6",
														"type": ""
													}
												],
												"src": "10021:405:6"
											},
											{
												"body": {
													"nativeSrc": "10605:230:6",
													"nodeType": "YulBlock",
													"src": "10605:230:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10622:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10622:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10633:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10615:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10615:6:6"
																},
																"nativeSrc": "10615:21:6",
																"nodeType": "YulFunctionCall",
																"src": "10615:21:6"
															},
															"nativeSrc": "10615:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "10615:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10656:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10656:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10667:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10667:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10652:3:6"
																		},
																		"nativeSrc": "10652:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10652:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10672:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10672:2:6",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10645:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10645:6:6"
																},
																"nativeSrc": "10645:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10645:30:6"
															},
															"nativeSrc": "10645:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "10645:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10695:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10695:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10706:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10706:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10691:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10691:3:6"
																		},
																		"nativeSrc": "10691:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10691:18:6"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206578636565647320746865206d617854",
																		"kind": "string",
																		"nativeSrc": "10711:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10711:34:6",
																		"type": "",
																		"value": "Transfer amount exceeds the maxT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10684:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10684:6:6"
																},
																"nativeSrc": "10684:62:6",
																"nodeType": "YulFunctionCall",
																"src": "10684:62:6"
															},
															"nativeSrc": "10684:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "10684:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10766:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10766:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10777:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10777:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10762:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:6"
																		},
																		"nativeSrc": "10762:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10762:18:6"
																	},
																	{
																		"hexValue": "78416d6f756e742e",
																		"kind": "string",
																		"nativeSrc": "10782:10:6",
																		"nodeType": "YulLiteral",
																		"src": "10782:10:6",
																		"type": "",
																		"value": "xAmount."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10755:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10755:6:6"
																},
																"nativeSrc": "10755:38:6",
																"nodeType": "YulFunctionCall",
																"src": "10755:38:6"
															},
															"nativeSrc": "10755:38:6",
															"nodeType": "YulExpressionStatement",
															"src": "10755:38:6"
														},
														{
															"nativeSrc": "10802:27:6",
															"nodeType": "YulAssignment",
															"src": "10802:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10814:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10814:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10825:3:6",
																		"nodeType": "YulLiteral",
																		"src": "10825:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10810:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10810:3:6"
																},
																"nativeSrc": "10810:19:6",
																"nodeType": "YulFunctionCall",
																"src": "10810:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10802:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10802:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10431:404:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10582:9:6",
														"nodeType": "YulTypedName",
														"src": "10582:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10596:4:6",
														"nodeType": "YulTypedName",
														"src": "10596:4:6",
														"type": ""
													}
												],
												"src": "10431:404:6"
											},
											{
												"body": {
													"nativeSrc": "11014:182:6",
													"nodeType": "YulBlock",
													"src": "11014:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11031:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11031:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11042:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11042:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11024:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11024:6:6"
																},
																"nativeSrc": "11024:21:6",
																"nodeType": "YulFunctionCall",
																"src": "11024:21:6"
															},
															"nativeSrc": "11024:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "11024:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11065:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11065:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11076:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11076:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11061:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11061:3:6"
																		},
																		"nativeSrc": "11061:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11061:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11081:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11081:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11054:6:6"
																},
																"nativeSrc": "11054:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11054:30:6"
															},
															"nativeSrc": "11054:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "11054:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11104:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11104:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11115:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11115:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11100:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11100:3:6"
																		},
																		"nativeSrc": "11100:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11100:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11120:34:6",
																		"nodeType": "YulLiteral",
																		"src": "11120:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11093:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11093:6:6"
																},
																"nativeSrc": "11093:62:6",
																"nodeType": "YulFunctionCall",
																"src": "11093:62:6"
															},
															"nativeSrc": "11093:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "11093:62:6"
														},
														{
															"nativeSrc": "11164:26:6",
															"nodeType": "YulAssignment",
															"src": "11164:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11176:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11176:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11187:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11187:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11172:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11172:3:6"
																},
																"nativeSrc": "11172:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11172:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11164:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11164:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10840:356:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10991:9:6",
														"nodeType": "YulTypedName",
														"src": "10991:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11005:4:6",
														"nodeType": "YulTypedName",
														"src": "11005:4:6",
														"type": ""
													}
												],
												"src": "10840:356:6"
											},
											{
												"body": {
													"nativeSrc": "11375:233:6",
													"nodeType": "YulBlock",
													"src": "11375:233:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11392:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11392:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11403:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11403:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11385:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11385:6:6"
																},
																"nativeSrc": "11385:21:6",
																"nodeType": "YulFunctionCall",
																"src": "11385:21:6"
															},
															"nativeSrc": "11385:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "11385:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11426:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11426:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11437:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11437:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11422:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11422:3:6"
																		},
																		"nativeSrc": "11422:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11422:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11442:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11442:2:6",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11415:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:6"
																},
																"nativeSrc": "11415:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11415:30:6"
															},
															"nativeSrc": "11415:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "11415:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11465:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11465:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11476:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11476:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11461:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11461:3:6"
																		},
																		"nativeSrc": "11461:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11461:18:6"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nativeSrc": "11481:34:6",
																		"nodeType": "YulLiteral",
																		"src": "11481:34:6",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11454:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11454:6:6"
																},
																"nativeSrc": "11454:62:6",
																"nodeType": "YulFunctionCall",
																"src": "11454:62:6"
															},
															"nativeSrc": "11454:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "11454:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11536:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11547:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:6"
																		},
																		"nativeSrc": "11532:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:6"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "11552:13:6",
																		"nodeType": "YulLiteral",
																		"src": "11552:13:6",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11525:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:6"
																},
																"nativeSrc": "11525:41:6",
																"nodeType": "YulFunctionCall",
																"src": "11525:41:6"
															},
															"nativeSrc": "11525:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "11525:41:6"
														},
														{
															"nativeSrc": "11575:27:6",
															"nodeType": "YulAssignment",
															"src": "11575:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11587:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11587:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11598:3:6",
																		"nodeType": "YulLiteral",
																		"src": "11598:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11583:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11583:3:6"
																},
																"nativeSrc": "11583:19:6",
																"nodeType": "YulFunctionCall",
																"src": "11583:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11575:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11575:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11201:407:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11352:9:6",
														"nodeType": "YulTypedName",
														"src": "11352:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11366:4:6",
														"nodeType": "YulTypedName",
														"src": "11366:4:6",
														"type": ""
													}
												],
												"src": "11201:407:6"
											},
											{
												"body": {
													"nativeSrc": "11750:150:6",
													"nodeType": "YulBlock",
													"src": "11750:150:6",
													"statements": [
														{
															"nativeSrc": "11760:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "11760:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11780:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11774:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11774:5:6"
																},
																"nativeSrc": "11774:13:6",
																"nodeType": "YulFunctionCall",
																"src": "11774:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11764:6:6",
																	"nodeType": "YulTypedName",
																	"src": "11764:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11835:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11835:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11843:4:6",
																				"nodeType": "YulLiteral",
																				"src": "11843:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11831:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11831:3:6"
																		},
																		"nativeSrc": "11831:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11831:17:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11850:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11850:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11855:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11855:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11796:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "11796:34:6"
																},
																"nativeSrc": "11796:66:6",
																"nodeType": "YulFunctionCall",
																"src": "11796:66:6"
															},
															"nativeSrc": "11796:66:6",
															"nodeType": "YulExpressionStatement",
															"src": "11796:66:6"
														},
														{
															"nativeSrc": "11871:23:6",
															"nodeType": "YulAssignment",
															"src": "11871:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11882:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11882:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11887:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11887:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11878:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11878:3:6"
																},
																"nativeSrc": "11878:16:6",
																"nodeType": "YulFunctionCall",
																"src": "11878:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11871:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11871:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11613:287:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11726:3:6",
														"nodeType": "YulTypedName",
														"src": "11726:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11731:6:6",
														"nodeType": "YulTypedName",
														"src": "11731:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11742:3:6",
														"nodeType": "YulTypedName",
														"src": "11742:3:6",
														"type": ""
													}
												],
												"src": "11613:287:6"
											},
											{
												"body": {
													"nativeSrc": "12079:177:6",
													"nodeType": "YulBlock",
													"src": "12079:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12096:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12096:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12107:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12107:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12089:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12089:6:6"
																},
																"nativeSrc": "12089:21:6",
																"nodeType": "YulFunctionCall",
																"src": "12089:21:6"
															},
															"nativeSrc": "12089:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "12089:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12130:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12130:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12141:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12141:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12126:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12126:3:6"
																		},
																		"nativeSrc": "12126:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12126:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12146:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12146:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12119:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12119:6:6"
																},
																"nativeSrc": "12119:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12119:30:6"
															},
															"nativeSrc": "12119:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "12119:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12169:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12169:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12180:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12180:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12165:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12165:3:6"
																		},
																		"nativeSrc": "12165:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12165:18:6"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nativeSrc": "12185:29:6",
																		"nodeType": "YulLiteral",
																		"src": "12185:29:6",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12158:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12158:6:6"
																},
																"nativeSrc": "12158:57:6",
																"nodeType": "YulFunctionCall",
																"src": "12158:57:6"
															},
															"nativeSrc": "12158:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "12158:57:6"
														},
														{
															"nativeSrc": "12224:26:6",
															"nodeType": "YulAssignment",
															"src": "12224:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12236:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12236:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12247:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12247:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12232:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12232:3:6"
																},
																"nativeSrc": "12232:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12232:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12224:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12224:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11905:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12056:9:6",
														"nodeType": "YulTypedName",
														"src": "12056:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12070:4:6",
														"nodeType": "YulTypedName",
														"src": "12070:4:6",
														"type": ""
													}
												],
												"src": "11905:351:6"
											},
											{
												"body": {
													"nativeSrc": "12435:298:6",
													"nodeType": "YulBlock",
													"src": "12435:298:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12452:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12452:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12463:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12463:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12445:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12445:6:6"
																},
																"nativeSrc": "12445:21:6",
																"nodeType": "YulFunctionCall",
																"src": "12445:21:6"
															},
															"nativeSrc": "12445:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "12445:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12486:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12486:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12497:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12497:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12482:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12482:3:6"
																		},
																		"nativeSrc": "12482:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12482:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12502:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12502:2:6",
																		"type": "",
																		"value": "68"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12475:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12475:6:6"
																},
																"nativeSrc": "12475:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12475:30:6"
															},
															"nativeSrc": "12475:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "12475:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12525:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12525:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12536:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12536:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12521:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12521:3:6"
																		},
																		"nativeSrc": "12521:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12521:18:6"
																	},
																	{
																		"hexValue": "43616e6e6f74207075726368617365206d6f7265207468616e2031306d202830",
																		"kind": "string",
																		"nativeSrc": "12541:34:6",
																		"nodeType": "YulLiteral",
																		"src": "12541:34:6",
																		"type": "",
																		"value": "Cannot purchase more than 10m (0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12514:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12514:6:6"
																},
																"nativeSrc": "12514:62:6",
																"nodeType": "YulFunctionCall",
																"src": "12514:62:6"
															},
															"nativeSrc": "12514:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "12514:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12596:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12596:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12607:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12607:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12592:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12592:3:6"
																		},
																		"nativeSrc": "12592:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12592:18:6"
																	},
																	{
																		"hexValue": "2e312529206f6620737570706c7920696e2073696e676c65207472616e736163",
																		"kind": "string",
																		"nativeSrc": "12612:34:6",
																		"nodeType": "YulLiteral",
																		"src": "12612:34:6",
																		"type": "",
																		"value": ".1%) of supply in single transac"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12585:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12585:6:6"
																},
																"nativeSrc": "12585:62:6",
																"nodeType": "YulFunctionCall",
																"src": "12585:62:6"
															},
															"nativeSrc": "12585:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "12585:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12667:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12667:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12678:3:6",
																				"nodeType": "YulLiteral",
																				"src": "12678:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12663:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12663:3:6"
																		},
																		"nativeSrc": "12663:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12663:19:6"
																	},
																	{
																		"hexValue": "74696f6e",
																		"kind": "string",
																		"nativeSrc": "12684:6:6",
																		"nodeType": "YulLiteral",
																		"src": "12684:6:6",
																		"type": "",
																		"value": "tion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12656:6:6"
																},
																"nativeSrc": "12656:35:6",
																"nodeType": "YulFunctionCall",
																"src": "12656:35:6"
															},
															"nativeSrc": "12656:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "12656:35:6"
														},
														{
															"nativeSrc": "12700:27:6",
															"nodeType": "YulAssignment",
															"src": "12700:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12712:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12712:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12723:3:6",
																		"nodeType": "YulLiteral",
																		"src": "12723:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12708:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12708:3:6"
																},
																"nativeSrc": "12708:19:6",
																"nodeType": "YulFunctionCall",
																"src": "12708:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12700:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12700:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12261:472:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12412:9:6",
														"nodeType": "YulTypedName",
														"src": "12412:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12426:4:6",
														"nodeType": "YulTypedName",
														"src": "12426:4:6",
														"type": ""
													}
												],
												"src": "12261:472:6"
											},
											{
												"body": {
													"nativeSrc": "12790:116:6",
													"nodeType": "YulBlock",
													"src": "12790:116:6",
													"statements": [
														{
															"nativeSrc": "12800:20:6",
															"nodeType": "YulAssignment",
															"src": "12800:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12815:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12815:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12818:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12818:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12811:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12811:3:6"
																},
																"nativeSrc": "12811:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12811:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12800:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "12800:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12878:22:6",
																"nodeType": "YulBlock",
																"src": "12878:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12880:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12880:16:6"
																			},
																			"nativeSrc": "12880:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12880:18:6"
																		},
																		"nativeSrc": "12880:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12880:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12849:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "12849:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12842:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "12842:6:6"
																				},
																				"nativeSrc": "12842:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12842:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12856:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "12856:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12863:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "12863:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12872:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "12872:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12859:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "12859:3:6"
																						},
																						"nativeSrc": "12859:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "12859:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12853:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "12853:2:6"
																				},
																				"nativeSrc": "12853:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12853:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12839:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "12839:2:6"
																		},
																		"nativeSrc": "12839:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12839:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12832:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12832:6:6"
																},
																"nativeSrc": "12832:45:6",
																"nodeType": "YulFunctionCall",
																"src": "12832:45:6"
															},
															"nativeSrc": "12829:71:6",
															"nodeType": "YulIf",
															"src": "12829:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12738:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12769:1:6",
														"nodeType": "YulTypedName",
														"src": "12769:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12772:1:6",
														"nodeType": "YulTypedName",
														"src": "12772:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12778:7:6",
														"nodeType": "YulTypedName",
														"src": "12778:7:6",
														"type": ""
													}
												],
												"src": "12738:168:6"
											},
											{
												"body": {
													"nativeSrc": "13085:248:6",
													"nodeType": "YulBlock",
													"src": "13085:248:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13102:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13102:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13113:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13113:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13095:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13095:6:6"
																},
																"nativeSrc": "13095:21:6",
																"nodeType": "YulFunctionCall",
																"src": "13095:21:6"
															},
															"nativeSrc": "13095:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "13095:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13136:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13136:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13147:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13147:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13132:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13132:3:6"
																		},
																		"nativeSrc": "13132:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13132:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13152:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13152:2:6",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13125:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13125:6:6"
																},
																"nativeSrc": "13125:30:6",
																"nodeType": "YulFunctionCall",
																"src": "13125:30:6"
															},
															"nativeSrc": "13125:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "13125:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13175:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13175:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13186:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13186:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13171:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13171:3:6"
																		},
																		"nativeSrc": "13171:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13171:18:6"
																	},
																	{
																		"hexValue": "43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c",
																		"kind": "string",
																		"nativeSrc": "13191:34:6",
																		"nodeType": "YulLiteral",
																		"src": "13191:34:6",
																		"type": "",
																		"value": "Cannot sell more than 10% of bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13164:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13164:6:6"
																},
																"nativeSrc": "13164:62:6",
																"nodeType": "YulFunctionCall",
																"src": "13164:62:6"
															},
															"nativeSrc": "13164:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "13164:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13246:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13246:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13257:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13257:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13242:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13242:3:6"
																		},
																		"nativeSrc": "13242:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13242:18:6"
																	},
																	{
																		"hexValue": "616e636520696e2073696e676c65207472616e73616374696f6e",
																		"kind": "string",
																		"nativeSrc": "13262:28:6",
																		"nodeType": "YulLiteral",
																		"src": "13262:28:6",
																		"type": "",
																		"value": "ance in single transaction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13235:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13235:6:6"
																},
																"nativeSrc": "13235:56:6",
																"nodeType": "YulFunctionCall",
																"src": "13235:56:6"
															},
															"nativeSrc": "13235:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "13235:56:6"
														},
														{
															"nativeSrc": "13300:27:6",
															"nodeType": "YulAssignment",
															"src": "13300:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13312:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13312:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13323:3:6",
																		"nodeType": "YulLiteral",
																		"src": "13323:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13308:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13308:3:6"
																},
																"nativeSrc": "13308:19:6",
																"nodeType": "YulFunctionCall",
																"src": "13308:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13300:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13300:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12911:422:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13062:9:6",
														"nodeType": "YulTypedName",
														"src": "13062:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13076:4:6",
														"nodeType": "YulTypedName",
														"src": "13076:4:6",
														"type": ""
													}
												],
												"src": "12911:422:6"
											},
											{
												"body": {
													"nativeSrc": "13512:179:6",
													"nodeType": "YulBlock",
													"src": "13512:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13529:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13529:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13540:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13540:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13522:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13522:6:6"
																},
																"nativeSrc": "13522:21:6",
																"nodeType": "YulFunctionCall",
																"src": "13522:21:6"
															},
															"nativeSrc": "13522:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "13522:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13563:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13563:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13574:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13574:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13559:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13559:3:6"
																		},
																		"nativeSrc": "13559:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13559:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13579:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13579:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13552:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13552:6:6"
																},
																"nativeSrc": "13552:30:6",
																"nodeType": "YulFunctionCall",
																"src": "13552:30:6"
															},
															"nativeSrc": "13552:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "13552:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13602:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13602:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13613:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13613:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13598:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13598:3:6"
																		},
																		"nativeSrc": "13598:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13598:18:6"
																	},
																	{
																		"hexValue": "596f7520676f747461206b6565702031204d45544820616c7761797321",
																		"kind": "string",
																		"nativeSrc": "13618:31:6",
																		"nodeType": "YulLiteral",
																		"src": "13618:31:6",
																		"type": "",
																		"value": "You gotta keep 1 METH always!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13591:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13591:6:6"
																},
																"nativeSrc": "13591:59:6",
																"nodeType": "YulFunctionCall",
																"src": "13591:59:6"
															},
															"nativeSrc": "13591:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "13591:59:6"
														},
														{
															"nativeSrc": "13659:26:6",
															"nodeType": "YulAssignment",
															"src": "13659:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13671:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13671:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13682:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13682:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13667:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13667:3:6"
																},
																"nativeSrc": "13667:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13667:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13659:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13659:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13338:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13489:9:6",
														"nodeType": "YulTypedName",
														"src": "13489:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13503:4:6",
														"nodeType": "YulTypedName",
														"src": "13503:4:6",
														"type": ""
													}
												],
												"src": "13338:353:6"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Transfer amount exceeds the maxT\")\n        mstore(add(headStart, 96), \"xAmount.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already excluded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"Cannot purchase more than 10m (0\")\n        mstore(add(headStart, 96), \".1%) of supply in single transac\")\n        mstore(add(headStart, 128), \"tion\")\n        tail := add(headStart, 160)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Cannot sell more than 10% of bal\")\n        mstore(add(headStart, 96), \"ance in single transaction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"You gotta keep 1 METH always!\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101bb575f3560e01c80638129fc1c116100f3578063a457c2d711610093578063af465a271161006e578063af465a27146103ae578063cba0e996146103b7578063dd62ed3e146103e2578063f2fde38b1461041a575f80fd5b8063a457c2d714610380578063a9059cbb14610393578063aae5ddd2146103a6575f80fd5b80638da5cb5b116100ce5780638da5cb5b1461035757806394e107841461036857806395d89b411461037057806397a9d56014610378575f80fd5b80638129fc1c1461033357806383f24c091461033b5780638c0b5e221461034e575f80fd5b80634d09deb31161015e578063658c27a911610139578063658c27a9146102a157806370a08231146102cc578063715018a6146102df57806380da2287146102e9575f80fd5b80634d09deb3146102565780634dacf3f5146102815780635319e78f1461028e575f80fd5b806323b872dd1161019957806323b872dd14610212578063313ce56714610225578063395093511461023a57806345e0b9d41461024d575f80fd5b806306fdde03146101bf578063095ea7b3146101dd57806318160ddd14610200575b5f80fd5b6101c761042d565b6040516101d49190611ba8565b60405180910390f35b6101f06101eb366004611bf0565b6104bd565b60405190151581526020016101d4565b606f545b6040519081526020016101d4565b6101f0610220366004611c18565b6104d3565b60675460405160ff90911681526020016101d4565b6101f0610248366004611bf0565b610523565b61020460705481565b610269610264366004611c51565b610559565b6040516001600160a01b0390911681526020016101d4565b6072546101f09060ff1681565b61020461029c366004611c68565b610581565b6101f06102af366004611c68565b6001600160a01b03165f908152606d602052604090205460ff1690565b6102046102da366004611c68565b610630565b6102e7610679565b005b61031e6102f7366004611c68565b6001600160a01b03165f90815260696020908152604080832054606a909252909120549091565b604080519283526020830191909152016101d4565b6102e761068c565b6102e7610349366004611c88565b61094d565b61020460715481565b6033546001600160a01b0316610269565b610204610968565b6101c7610989565b61031e610998565b6101f061038e366004611bf0565b610a4c565b6101f06103a1366004611bf0565b610a82565b610204610a8e565b610204606f5481565b6101f06103c5366004611c68565b6001600160a01b03165f908152606c602052604090205460ff1690565b6102046103f0366004611ca7565b6001600160a01b039182165f908152606b6020908152604080832093909416825291909152205490565b6102e7610428366004611c68565b610aa9565b60606065805461043c90611cd8565b80601f016020809104026020016040519081016040528092919081815260200182805461046890611cd8565b80156104b35780601f1061048a576101008083540402835291602001916104b3565b820191905f5260205f20905b81548152906001019060200180831161049657829003601f168201915b5050505050905090565b5f6104c9338484610b1f565b5060015b92915050565b5f6104df848484610c42565b6001600160a01b0384165f908152606b6020908152604080832033808552925290912054610519918691610514908690611d24565b610b1f565b5060019392505050565b335f818152606b602090815260408083206001600160a01b038716845290915281205490916104c9918590610514908690611d37565b60688181548110610568575f80fd5b5f918252602090912001546001600160a01b0316905081565b6001600160a01b0381165f908152606a60205260408120546070548111156106035760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b5f61060c610968565b9050815f0361061e57505f9392505050565b6106288183611d5e565b949350505050565b6001600160a01b0381165f908152606c602052604081205460ff161561066b57506001600160a01b03165f9081526069602052604090205490565b6104cd82610581565b919050565b610681610fb1565b61068a5f61100b565b565b5f54610100900460ff16158080156106aa57505f54600160ff909116105b806106c35750303b1580156106c357505f5460ff166001145b6107265760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105fa565b5f805460ff191660011790558015610747575f805461ff0019166101001790555b61074f61105c565b60408051808201909152600681526526aa22a9aa2360d11b60208201526065906107799082611dd0565b5060408051808201909152600681526526aa22a9aa2360d11b60208201526066906107a49082611dd0565b506067805460ff191660121790556b204fce5e3e25026110000000606f8190555f19606e8190556107d59190611e90565b606e546107e29190611d24565b6070819055606a5f6107fc6033546001600160a01b031690565b6001600160a01b031681526020808201929092526040015f90812092909255606f54607155606c90527f7febd347df14ea35c529e50fb2dd629d4a6226f5ccc893710fb466f8b83823fc805460ff1990811660019081179092557f8c482e007f935c93984ddf7a647e33ef99566883ffae3563aa616dc14d1632f780548216831790557fb6e99d88b536ae7728c4b89ca5a6073cf06fd2059e0aff5b1a4de2c799d9cb968054821683179055610369909252607280549092161790556108ca6033546001600160a01b031690565b6001600160a01b03165f6001600160a01b03165f80516020611f7d833981519152606f546040516108fd91815260200190565b60405180910390a3801561094a575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b610955610fb1565b6072805460ff1916911515919091179055565b5f805f610973610998565b90925090506109828183611d5e565b9250505090565b60606066805461043c90611cd8565b607054606f545f918291825b606854811015610a4257606a5f606883815481106109c4576109c4611ea3565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546109f29084611d24565b925060695f60688381548110610a0a57610a0a611ea3565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054610a389083611d24565b91506001016109a4565b5090939092509050565b335f818152606b602090815260408083206001600160a01b038716845290915281205490916104c9918590610514908690611d24565b5f6104c9338484610c42565b5f600a610a9a33610630565b610aa49190611d5e565b905090565b610ab1610fb1565b6001600160a01b038116610b165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105fa565b61094a8161100b565b6001600160a01b038316610b815760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105fa565b6001600160a01b038216610be25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105fa565b6001600160a01b038381165f818152606b602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b607254610100900460ff1615610c56575f80fd5b6072805461ff0019166101001790556001600160a01b038316610cc95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105fa565b6001600160a01b038216610d2b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105fa565b5f8111610d8c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105fa565b610d958361108a565b15156001148015610dbe57506001600160a01b0383165f908152606d602052604090205460ff16155b8015610de257506001600160a01b0383165f908152606c602052604090205460ff16155b15610df957610df083611123565b610df9836111ae565b610e028261108a565b15156001148015610e2b57506001600160a01b0382165f908152606d602052604090205460ff16155b8015610e4f57506001600160a01b0382165f908152606c602052604090205460ff16155b15610e6657610e5d82611123565b610e66826111ae565b6033546001600160a01b03848116911614801590610e9257506033546001600160a01b03838116911614155b15610efe576001600160a01b0383165f908152606d602052604090205460ff16158015610ed757506001600160a01b0382165f908152606d602052604090205460ff16155b15610efe57607154811115610efe5760405162461bcd60e51b81526004016105fa90611eb7565b6033546001600160a01b03848116911614801590610f2a57506033546001600160a01b03838116911614155b15610f96576001600160a01b0383165f908152606d602052604090205460ff16158015610f6f57506001600160a01b0382165f908152606d602052604090205460ff16155b15610f9657607154811115610f965760405162461bcd60e51b81526004016105fa90611eb7565b610fa18383836112ba565b50506072805461ff001916905550565b6033546001600160a01b0316331461068a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105fa565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f54610100900460ff166110825760405162461bcd60e51b81526004016105fa90611eff565b61068a6113b6565b60408051600481526024810182526020810180516001600160e01b031663c45a015560e01b17905290515f91829182916001600160a01b038616916110cf9190611f4a565b5f60405180830381855afa9150503d805f8114611107576040519150601f19603f3d011682016040523d82523d5f602084013e61110c565b606091505b509150915081801561062857505115159392505050565b6001600160a01b0381165f908152606d602052604090205460ff161561118b5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c75646564000000000060448201526064016105fa565b6001600160a01b03165f908152606d60205260409020805460ff19166001179055565b6001600160a01b0381165f908152606c602052604090205460ff16156112165760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c75646564000000000060448201526064016105fa565b6001600160a01b0381165f908152606a6020526040902054156112555761123c81610581565b6001600160a01b0382165f908152606960205260409020555b6001600160a01b03165f818152606c60205260408120805460ff191660019081179091556068805491820181559091527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530180546001600160a01b0319169091179055565b6001600160a01b0383165f908152606c602052604090205460ff1680156112f957506001600160a01b0382165f908152606c602052604090205460ff16155b1561130e576113098383836113e5565b505050565b6001600160a01b0383165f908152606c602052604090205460ff1615801561134d57506001600160a01b0382165f908152606c602052604090205460ff165b1561135d5761130983838361164d565b6001600160a01b0383165f908152606c602052604090205460ff16801561139b57506001600160a01b0382165f908152606c602052604090205460ff165b156113ab57611309838383611895565b6113098383836119e9565b5f54610100900460ff166113dc5760405162461bcd60e51b81526004016105fa90611eff565b61068a3361100b565b6113ed611b43565b60725460ff16151560010361148f576103e8606f5461140c9190611d5e565b82111561148f5760405162461bcd60e51b8152602060048201526044602482018190527f43616e6e6f74207075726368617365206d6f7265207468616e2031306d202830908201527f2e312529206f6620737570706c7920696e2073696e676c65207472616e7361636064820152633a34b7b760e11b608482015260a4016105fa565b81815261149a610968565b6114a49083611f65565b60208201525f60408201819052612710906114bf9084611f65565b6114c99190611d5e565b60808201526114d6610968565b81608001516114e59190611f65565b60a08201819052156114fd5760a08101516101008201525b80516001600160a01b0385165f9081526069602052604081208054909190611526908490611d24565b90915550506020808201516001600160a01b0386165f908152606a90925260408220805491929091611559908490611d24565b909155505060a081015160208201516115729190611d24565b6001600160a01b0384165f908152606a602052604081208054909190611599908490611d37565b9091555050610100810151607080545f906115b5908490611d24565b9091555050608081015181516001600160a01b0380861692908716915f80516020611f7d833981519152916115e991611d24565b60405190815260200160405180910390a3805160808201517fe6ef78c5a1f105fc4b9500eeb7cd09b041367bdee35f1d85761735ee78b3ff2e919061162e9082611d24565b604080519283526020830191909152015b60405180910390a150505050565b611655611b43565b600a61166085610581565b61166a9190611d5e565b8211156116df5760405162461bcd60e51b815260206004820152603a60248201527f43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c60448201527f616e636520696e2073696e676c65207472616e73616374696f6e00000000000060648201526084016105fa565b8181526116ea610968565b6116f49083611f65565b60208201525f606082018190526127109061170f9084611f65565b6117199190611d5e565b60c0820152611726610968565b8160c001516117359190611f65565b60e082018190521561174d5760e08101516101008201525b8060200151606a5f866001600160a01b03166001600160a01b031681526020019081526020015f205f8282546117839190611d24565b909155505060c081015181516117999190611d24565b6001600160a01b0384165f90815260696020526040812080549091906117c0908490611d37565b909155505060e081015160208201516117d99190611d24565b6001600160a01b0384165f908152606a602052604081208054909190611800908490611d37565b9091555050610100810151607080545f9061181c908490611d24565b909155505060c081015181516001600160a01b0380861692908716915f80516020611f7d8339815191529161185091611d24565b60405190815260200160405180910390a3805160c08201517fff000e16c1c0d33b07404c2b2abb9832356b5cfd57566d73c9d09611f030890d919061162e9082611d24565b61189d611b43565b8181526118a8610968565b6118b29083611f65565b60208083019190915281516001600160a01b0386165f9081526069909252604082208054919290916118e5908490611d24565b90915550506020808201516001600160a01b0386165f908152606a90925260408220805491929091611918908490611d24565b909155505080516001600160a01b0384165f9081526069602052604081208054909190611946908490611d37565b90915550506020808201516001600160a01b0385165f908152606a90925260408220805491929091611979908490611d37565b909155505080516040519081526001600160a01b0384811691908616905f80516020611f7d8339815191529060200160405180910390a380516040805182815260208101929092527f2541109a23d530c06d62a3bf63d8d03107194870126fddb7170c0daef360cd8a910161163f565b6119f1611b43565b670de0b6b3a7640000611a0385610581565b611a0d9190611d24565b821115611a5c5760405162461bcd60e51b815260206004820152601d60248201527f596f7520676f747461206b6565702031204d45544820616c776179732100000060448201526064016105fa565b818152611a67610968565b611a719083611f65565b60208083018290526001600160a01b0386165f908152606a909152604081208054909190611aa0908490611d24565b90915550506020808201516001600160a01b0385165f908152606a90925260408220805491929091611ad3908490611d37565b909155505080516040519081526001600160a01b0384811691908616905f80516020611f7d8339815191529060200160405180910390a380516040805182815260208101929092527fd9923e08d9d88ff7a7e9b8460f3163dc6b887fabe315449da3b5cd16bb5e9340910161163f565b6040518061012001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b5f5b83811015611ba0578181015183820152602001611b88565b50505f910152565b602081525f8251806020840152611bc6816040850160208701611b86565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610674575f80fd5b5f8060408385031215611c01575f80fd5b611c0a83611bda565b946020939093013593505050565b5f805f60608486031215611c2a575f80fd5b611c3384611bda565b9250611c4160208501611bda565b9150604084013590509250925092565b5f60208284031215611c61575f80fd5b5035919050565b5f60208284031215611c78575f80fd5b611c8182611bda565b9392505050565b5f60208284031215611c98575f80fd5b81358015158114611c81575f80fd5b5f8060408385031215611cb8575f80fd5b611cc183611bda565b9150611ccf60208401611bda565b90509250929050565b600181811c90821680611cec57607f821691505b602082108103611d0a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104cd576104cd611d10565b808201808211156104cd576104cd611d10565b634e487b7160e01b5f52601260045260245ffd5b5f82611d6c57611d6c611d4a565b500490565b634e487b7160e01b5f52604160045260245ffd5b601f82111561130957805f5260205f20601f840160051c81016020851015611daa5750805b601f840160051c820191505b81811015611dc9575f8155600101611db6565b5050505050565b815167ffffffffffffffff811115611dea57611dea611d71565b611dfe81611df88454611cd8565b84611d85565b602080601f831160018114611e31575f8415611e1a5750858301515b5f19600386901b1c1916600185901b178555611e88565b5f85815260208120601f198616915b82811015611e5f57888601518255948401946001909101908401611e40565b5085821015611e7c57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f82611e9e57611e9e611d4a565b500690565b634e487b7160e01b5f52603260045260245ffd5b60208082526028908201527f5472616e7366657220616d6f756e74206578636565647320746865206d6178546040820152673c20b6b7bab73a1760c11b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f8251611f5b818460208701611b86565b9190910192915050565b80820281158282048414176104cd576104cd611d1056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220607425d2163f166c2eb888682e1a778ebca45eaea882550e8f989d032ff94c4164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8129FC1C GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xAF465A27 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAF465A27 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xAAE5DDD2 EQ PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x94E10784 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x97A9D560 EQ PUSH2 0x378 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x83F24C09 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4D09DEB3 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x658C27A9 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x658C27A9 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x80DA2287 EQ PUSH2 0x2E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4D09DEB3 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x4DACF3F5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x5319E78F EQ PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x45E0B9D4 EQ PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x200 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x6F SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C18 JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C51 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x1F0 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6A SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x204 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x269 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x998 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x204 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x204 PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x43C SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x468 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x496 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4C9 CALLER DUP5 DUP5 PUSH2 0xB1F JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4DF DUP5 DUP5 DUP5 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x519 SWAP2 DUP7 SWAP2 PUSH2 0x514 SWAP1 DUP7 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4C9 SWAP2 DUP6 SWAP1 PUSH2 0x514 SWAP1 DUP7 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x68 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x568 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x70 SLOAD DUP2 GT ISZERO PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x60C PUSH2 0x968 JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 SUB PUSH2 0x61E JUMPI POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x628 DUP2 DUP4 PUSH2 0x1D5E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4CD DUP3 PUSH2 0x581 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x681 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x68A PUSH0 PUSH2 0x100B JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x6AA JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x6C3 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x747 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x74F PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x26AA22A9AA23 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x65 SWAP1 PUSH2 0x779 SWAP1 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x26AA22A9AA23 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x66 SWAP1 PUSH2 0x7A4 SWAP1 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH0 NOT PUSH1 0x6E DUP2 SWAP1 SSTORE PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x70 DUP2 SWAP1 SSTORE PUSH1 0x6A PUSH0 PUSH2 0x7FC PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 SWAP1 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x6F SLOAD PUSH1 0x71 SSTORE PUSH1 0x6C SWAP1 MSTORE PUSH32 0x7FEBD347DF14EA35C529E50FB2DD629D4A6226F5CCC893710FB466F8B83823FC DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH32 0x8C482E007F935C93984DDF7A647E33EF99566883FFAE3563AA616DC14D1632F7 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0xB6E99D88B536AE7728C4B89CA5A6073CF06FD2059E0AFF5B1A4DE2C799D9CB96 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH2 0x369 SWAP1 SWAP3 MSTORE PUSH1 0x72 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x8CA PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x6F SLOAD PUSH1 0x40 MLOAD PUSH2 0x8FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x94A JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x955 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x973 PUSH2 0x998 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x982 DUP2 DUP4 PUSH2 0x1D5E JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x43C SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x6F SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x68 SLOAD DUP2 LT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x6A PUSH0 PUSH1 0x68 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9C4 JUMPI PUSH2 0x9C4 PUSH2 0x1EA3 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x9F2 SWAP1 DUP5 PUSH2 0x1D24 JUMP JUMPDEST SWAP3 POP PUSH1 0x69 PUSH0 PUSH1 0x68 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0x1EA3 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xA38 SWAP1 DUP4 PUSH2 0x1D24 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x9A4 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4C9 SWAP2 DUP6 SWAP1 PUSH2 0x514 SWAP1 DUP7 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH0 PUSH2 0x4C9 CALLER DUP5 DUP5 PUSH2 0xC42 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH2 0xA9A CALLER PUSH2 0x630 JUMP JUMPDEST PUSH2 0xAA4 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAB1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x94A DUP2 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC56 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0xD95 DUP4 PUSH2 0x108A JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDBE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDE2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xDF9 JUMPI PUSH2 0xDF0 DUP4 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0xDF9 DUP4 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0xE02 DUP3 PUSH2 0x108A JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xE2B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE4F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE66 JUMPI PUSH2 0xE5D DUP3 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0xE66 DUP3 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xE92 JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEFE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xED7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xEFE JUMPI PUSH1 0x71 SLOAD DUP2 GT ISZERO PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xF2A JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xF96 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF96 JUMPI PUSH1 0x71 SLOAD DUP2 GT ISZERO PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0xFA1 DUP4 DUP4 DUP4 PUSH2 0x12BA JUMP JUMPDEST POP POP PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0x68A PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x10CF SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1107 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x110C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x628 JUMPI POP MLOAD ISZERO ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1255 JUMPI PUSH2 0x123C DUP2 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xA2153420D844928B4421650203C77BABC8B33D7F2E7B450E2966DB0C22097753 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x12F9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x130E JUMPI PUSH2 0x1309 DUP4 DUP4 DUP4 PUSH2 0x13E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x134D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x135D JUMPI PUSH2 0x1309 DUP4 DUP4 DUP4 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x139B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x13AB JUMPI PUSH2 0x1309 DUP4 DUP4 DUP4 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x1309 DUP4 DUP4 DUP4 PUSH2 0x19E9 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0x68A CALLER PUSH2 0x100B JUMP JUMPDEST PUSH2 0x13ED PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x148F JUMPI PUSH2 0x3E8 PUSH1 0x6F SLOAD PUSH2 0x140C SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x43616E6E6F74207075726368617365206D6F7265207468616E2031306D202830 SWAP1 DUP3 ADD MSTORE PUSH32 0x2E312529206F6620737570706C7920696E2073696E676C65207472616E736163 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5FA JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x149A PUSH2 0x968 JUMP JUMPDEST PUSH2 0x14A4 SWAP1 DUP4 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2710 SWAP1 PUSH2 0x14BF SWAP1 DUP5 PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x14C9 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x14D6 PUSH2 0x968 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x14FD JUMPI PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1526 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1559 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1572 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1599 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x70 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x15B5 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x80 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x15E9 SWAP2 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH32 0xE6EF78C5A1F105FC4B9500EEB7CD09B041367BDEE35F1D85761735EE78B3FF2E SWAP2 SWAP1 PUSH2 0x162E SWAP1 DUP3 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x1655 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1660 DUP6 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x166A SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656C6C206D6F7265207468616E20313025206F662062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E636520696E2073696E676C65207472616E73616374696F6E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FA JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x16EA PUSH2 0x968 JUMP JUMPDEST PUSH2 0x16F4 SWAP1 DUP4 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2710 SWAP1 PUSH2 0x170F SWAP1 DUP5 PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1719 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1726 PUSH2 0x968 JUMP JUMPDEST DUP2 PUSH1 0xC0 ADD MLOAD PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x174D JUMPI PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x6A PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1783 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC0 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x1799 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x17C0 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1800 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x70 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x181C SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC0 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x1850 SWAP2 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0xC0 DUP3 ADD MLOAD PUSH32 0xFF000E16C1C0D33B07404C2B2ABB9832356B5CFD57566D73C9D09611F030890D SWAP2 SWAP1 PUSH2 0x162E SWAP1 DUP3 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x189D PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x18A8 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x18B2 SWAP1 DUP4 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x18E5 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1918 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1946 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1979 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x2541109A23D530C06D62A3BF63D8D03107194870126FDDB7170C0DAEF360CD8A SWAP2 ADD PUSH2 0x163F JUMP JUMPDEST PUSH2 0x19F1 PUSH2 0x1B43 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A03 DUP6 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x1A0D SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1A5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520676F747461206B6565702031204D45544820616C7761797321000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FA JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x1A67 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x1A71 SWAP1 DUP4 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1AA0 SWAP1 DUP5 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1AD3 SWAP1 DUP5 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F7D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xD9923E08D9D88FF7A7E9B8460F3163DC6B887FABE315449DA3B5CD16BB5E9340 SWAP2 ADD PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B88 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1BC6 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x674 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C0A DUP4 PUSH2 0x1BDA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C33 DUP5 PUSH2 0x1BDA JUMP JUMPDEST SWAP3 POP PUSH2 0x1C41 PUSH1 0x20 DUP6 ADD PUSH2 0x1BDA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C61 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C78 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C81 DUP3 PUSH2 0x1BDA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C98 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1C81 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CC1 DUP4 PUSH2 0x1BDA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCF PUSH1 0x20 DUP5 ADD PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CEC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0x1D10 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0x1D10 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1D6C JUMPI PUSH2 0x1D6C PUSH2 0x1D4A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1309 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1DAA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DC9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DB6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DEA JUMPI PUSH2 0x1DEA PUSH2 0x1D71 JUMP JUMPDEST PUSH2 0x1DFE DUP2 PUSH2 0x1DF8 DUP5 SLOAD PUSH2 0x1CD8 JUMP JUMPDEST DUP5 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E31 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1E1A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E88 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E5F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E40 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E7C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E9E JUMPI PUSH2 0x1E9E PUSH2 0x1D4A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206578636565647320746865206D617854 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3C20B6B7BAB73A17 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1F5B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B86 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0x1D10 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x74 0x25 0xD2 AND EXTCODEHASH AND PUSH13 0x2EB888682E1A778EBCA45EAEA8 DUP3 SSTORE 0xE DUP16 SWAP9 SWAP14 SUB 0x2F 0xF9 0x4C COINBASE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "3954:21657:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7284:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9336:181;;;;;;:::i;:::-;;:::i;:::-;;;1272:14:6;;1265:22;1247:41;;1235:2;1220:18;9336:181:0;1107:187:6;7694:115:0;7794:7;;7694:115;;;1445:25:6;;;1433:2;1418:18;7694:115:0;1299:177:6;8662:336:0;;;;;;:::i;:::-;;:::i;7532:83::-;7598:9;;7532:83;;7598:9;;;;1956:36:6;;1944:2;1929:18;7532:83:0;1814:184:6;9590:215:0;;;;;;:::i;:::-;;:::i;5294:22::-;;;;;;4179:26;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2352:32:6;;;2334:51;;2322:2;2307:18;4179:26:0;2188:203:6;5395:21:0;;;;;;;;;12139:576;;;;;;:::i;:::-;;:::i;24717:128::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24808:29:0;24784:4;24808:29;;;:20;:29;;;;;;;;;24717:128;7932:378;;;;;;:::i;:::-;;:::i;2085:101:1:-;;;:::i;:::-;;25271:226:0;;;;;;:::i;:::-;-1:-1:-1;;;;;25388:17:0;25340:7;25388:17;;;:7;:17;;;;;;;;;25435:7;:17;;;;;;;25388;;25271:226;;;;;2761:25:6;;;2817:2;2802:18;;2795:34;;;;2734:18;25271:226:0;2587:248:6;5762:1433:0;;;:::i;10292:99::-;;;;;;:::i;:::-;;:::i;5360:26::-;;;;;;1462:85:1;1534:6;;-1:-1:-1;;;;;1534:6:1;1462:85;;12782:261:0;;;:::i;7405:87::-;;;:::i;13140:639::-;;;:::i;9878:225::-;;;;;;:::i;:::-;;:::i;8382:187::-;;;;;;:::i;:::-;;:::i;18586:117::-;;;:::i;5102:22::-;;;;;;24924:110;;;;;;:::i;:::-;-1:-1:-1;;;;;25006:20:0;24982:4;25006:20;;;:11;:20;;;;;;;;;24924:110;9091:163;;;;;;:::i;:::-;-1:-1:-1;;;;;9219:18:0;;;9192:7;9219:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;9091:163;2335:198:1;;;;;;:::i;:::-;;:::i;7284:83:0:-;7321:13;7354:5;7347:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7284:83;:::o;9336:181::-;9431:4;9448:39;965:10:5;9471:7:0;9480:6;9448:8;:39::i;:::-;-1:-1:-1;9505:4:0;9336:181;;;;;:::o;8662:336::-;8830:4;8847:36;8857:6;8865:9;8876:6;8847:9;:36::i;:::-;-1:-1:-1;;;;;8925:19:0;;;;;;:11;:19;;;;;;;;965:10:5;8925:33:0;;;;;;;;;8894:74;;8903:6;;8925:42;;8961:6;;8925:42;:::i;:::-;8894:8;:74::i;:::-;-1:-1:-1;8986:4:0;8662:336;;;;;:::o;9590:215::-;965:10:5;9678:4:0;9727:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;9727:34:0;;;;;;;;;;9678:4;;9695:80;;9718:7;;9727:47;;9764:10;;9727:47;:::i;4179:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4179:26:0;;-1:-1:-1;4179:26:0;:::o;12139:576::-;-1:-1:-1;;;;;12234:16:0;;12197:7;12234:16;;;:7;:16;;;;;;12358:7;;12348:17;;;12340:72;;;;-1:-1:-1;;;12340:72:0;;4365:2:6;12340:72:0;;;4347:21:6;4404:2;4384:18;;;4377:30;4443:34;4423:18;;;4416:62;-1:-1:-1;;;4494:18:6;;;4487:40;4544:19;;12340:72:0;;;;;;;;;12489:19;12511:10;:8;:10::i;:::-;12489:32;;12536:6;12546:1;12536:11;12532:176;;-1:-1:-1;12571:1:0;;12139:576;-1:-1:-1;;;12139:576:0:o;12532:176::-;12676:20;12685:11;12676:6;:20;:::i;:::-;12669:27;12139:576;-1:-1:-1;;;;12139:576:0:o;7932:378::-;-1:-1:-1;;;;;8103:20:0;;8018:7;8103:20;;;:11;:20;;;;;;;;8099:204;;;-1:-1:-1;;;;;;8147:16:0;;;;;:7;:16;;;;;;;7932:378::o;8099:204::-;8272:19;8283:7;8272:10;:19::i;8099:204::-;7932:378;;;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;5762:1433:0:-;3279:19:2;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:2;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:2;1713:19:4;:23;;;3387:66:2;;-1:-1:-1;3436:12:2;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:2;;5033:2:6;3325:201:2;;;5015:21:6;5072:2;5052:18;;;5045:30;5111:34;5091:18;;;5084:62;-1:-1:-1;;;5162:18:6;;;5155:44;5216:19;;3325:201:2;4831:410:6;3325:201:2;3536:12;:16;;-1:-1:-1;;3536:16:2;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:2;;;;;3562:65;5940:35:0::1;:33;:35::i;:::-;6020:16;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;6020:16:0::1;::::0;::::1;::::0;:5:::1;::::0;:16:::1;::::0;:5;:16:::1;:::i;:::-;-1:-1:-1::0;6047:18:0::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;6047:18:0::1;::::0;::::1;::::0;:7:::1;::::0;:18:::1;::::0;:7;:18:::1;:::i;:::-;-1:-1:-1::0;6076:9:0::1;:14:::0;;-1:-1:-1;;6076:14:0::1;6088:2;6076:14;::::0;;6199:29:::1;6189:7;:39:::0;;;-1:-1:-1;;6273:4:0::1;:18:::0;;;6370:14:::1;::::0;6199:29;6370:14:::1;:::i;:::-;6362:4;;:23;;;;:::i;:::-;6351:7;:35:::0;;;6502:7:::1;:16;6510:7;1534:6:1::0;;-1:-1:-1;;;;;1534:6:1;;1462:85;6510:7:0::1;-1:-1:-1::0;;;;;6502:16:0::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;6502:16:0;;;:26;;;;6556:7:::1;::::0;6542:11:::1;:21:::0;6637:11:::1;:23:::0;;;:30;;-1:-1:-1;;6637:30:0;;::::1;6663:4;6637:30:::0;;::::1;::::0;;;6678:64;:71;;;::::1;::::0;::::1;::::0;;6760:64;:71;;;::::1;::::0;::::1;::::0;;6780:42:::1;7021:64:::0;;;7105:9:::1;:16:::0;;;;::::1;;::::0;;7160:7:::1;1534:6:1::0;;-1:-1:-1;;;;;1534:6:1;;1462:85;7160:7:0::1;-1:-1:-1::0;;;;;7139:38:0::1;7156:1;-1:-1:-1::0;;;;;7139:38:0::1;-1:-1:-1::0;;;;;;;;;;;7169:7:0::1;;7139:38;;;;1445:25:6::0;;1433:2;1418:18;;1299:177;7139:38:0::1;;;;;;;;3651:14:2::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:2;;;3721:14;;-1:-1:-1;1956:36:6;;3721:14:2;;1944:2:6;1929:18;3721:14:2;;;;;;;3647:99;3269:483;5762:1433:0:o;10292:99::-;1355:13:1;:11;:13::i;:::-;10364:9:0::1;:19:::0;;-1:-1:-1;;10364:19:0::1;::::0;::::1;;::::0;;;::::1;::::0;;10292:99::o;12782:261::-;12823:7;12905:15;12922;12941:19;:17;:19::i;:::-;12904:56;;-1:-1:-1;12904:56:0;-1:-1:-1;13018:17:0;12904:56;;13018:17;:::i;:::-;13011:24;;;;12782:261;:::o;7405:87::-;7444:13;7477:7;7470:14;;;;;:::i;13140:639::-;13296:7;;13332;;13190;;;;;13407:327;13431:9;:16;13427:20;;13407:327;;;13569:7;:21;13577:9;13587:1;13577:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;13577:12:0;13569:21;;;;;;;;;;;;;13559:31;;:7;:31;:::i;:::-;13549:41;;13701:7;:21;13709:9;13719:1;13709:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;13709:12:0;13701:21;;;;;;;;;;;;;13691:31;;:7;:31;:::i;:::-;13681:41;-1:-1:-1;13449:3:0;;13407:327;;;-1:-1:-1;13754:7:0;;13763;;-1:-1:-1;13140:639:0;-1:-1:-1;13140:639:0:o;9878:225::-;965:10:5;9971:4:0;10020:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10020:34:0;;;;;;;;;;9971:4;;9988:85;;10011:7;;10020:52;;10057:15;;10020:52;:::i;8382:187::-;8480:4;8497:42;965:10:5;8521:9:0;8532:6;8497:9;:42::i;18586:117::-;18640:7;18692:2;18668:21;18678:10;18668:9;:21::i;:::-;:26;;;;:::i;:::-;18660:35;;18586:117;:::o;2335:198:1:-;1355:13;:11;:13::i;:::-;-1:-1:-1;;;;;2423:22:1;::::1;2415:73;;;::::0;-1:-1:-1;;;2415:73:1;;8198:2:6;2415:73:1::1;::::0;::::1;8180:21:6::0;8237:2;8217:18;;;8210:30;8276:34;8256:18;;;8249:62;-1:-1:-1;;;8327:18:6;;;8320:36;8373:19;;2415:73:1::1;7996:402:6::0;2415:73:1::1;2498:28;2517:8;2498:18;:28::i;13863:506:0:-:0;-1:-1:-1;;;;;14054:19:0;;14046:68;;;;-1:-1:-1;;;14046:68:0;;8605:2:6;14046:68:0;;;8587:21:6;8644:2;8624:18;;;8617:30;8683:34;8663:18;;;8656:62;-1:-1:-1;;;8734:18:6;;;8727:34;8778:19;;14046:68:0;8403:400:6;14046:68:0;-1:-1:-1;;;;;14133:21:0;;14125:68;;;;-1:-1:-1;;;14125:68:0;;9010:2:6;14125:68:0;;;8992:21:6;9049:2;9029:18;;;9022:30;9088:34;9068:18;;;9061:62;-1:-1:-1;;;9139:18:6;;;9132:32;9181:19;;14125:68:0;8808:398:6;14125:68:0;-1:-1:-1;;;;;14277:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14329:32;;1445:25:6;;;14329:32:0;;1418:18:6;14329:32:0;;;;;;;13863:506;;;:::o;14492:2505::-;14651:5;;;;;;;:14;14643:23;;;;;;14677:5;:12;;-1:-1:-1;;14677:12:0;;;;;-1:-1:-1;;;;;14760:18:0;;14752:68;;;;-1:-1:-1;;;14752:68:0;;9413:2:6;14752:68:0;;;9395:21:6;9452:2;9432:18;;;9425:30;9491:34;9471:18;;;9464:62;-1:-1:-1;;;9542:18:6;;;9535:35;9587:19;;14752:68:0;9211:401:6;14752:68:0;-1:-1:-1;;;;;14839:16:0;;14831:64;;;;-1:-1:-1;;;14831:64:0;;9819:2:6;14831:64:0;;;9801:21:6;9858:2;9838:18;;;9831:30;9897:34;9877:18;;;9870:62;-1:-1:-1;;;9948:18:6;;;9941:33;9991:19;;14831:64:0;9617:399:6;14831:64:0;14923:1;14914:6;:10;14906:64;;;;-1:-1:-1;;;14906:64:0;;10223:2:6;14906:64:0;;;10205:21:6;10262:2;10242:18;;;10235:30;10301:34;10281:18;;;10274:62;-1:-1:-1;;;10352:18:6;;;10345:39;10401:19;;14906:64:0;10021:405:6;14906:64:0;15215:14;15224:4;15215:8;:14::i;:::-;:22;;15233:4;15215:22;:67;;;;-1:-1:-1;;;;;;15256:26:0;;;;;;:20;:26;;;;;;;;15255:27;15215:67;:102;;;;-1:-1:-1;;;;;;15300:17:0;;;;;;:11;:17;;;;;;;;15299:18;15215:102;15197:228;;;15352:22;15369:4;15352:16;:22::i;:::-;15393:20;15408:4;15393:14;:20::i;:::-;15455:12;15464:2;15455:8;:12::i;:::-;:20;;15471:4;15455:20;:63;;;;-1:-1:-1;;;;;;15494:24:0;;;;;;:20;:24;;;;;;;;15493:25;15455:63;:96;;;;-1:-1:-1;;;;;;15536:15:0;;;;;;:11;:15;;;;;;;;15535:16;15455:96;15437:218;;;15586:20;15603:2;15586:16;:20::i;:::-;15625:18;15640:2;15625:14;:18::i;:::-;1534:6:1;;-1:-1:-1;;;;;15750:15:0;;;1534:6:1;;15750:15:0;;;;:32;;-1:-1:-1;1534:6:1;;-1:-1:-1;;;;;15769:13:0;;;1534:6:1;;15769:13:0;;15750:32;15746:463;;;-1:-1:-1;;;;;15973:26:0;;;;;;:20;:26;;;;;;;;15972:27;:56;;;;-1:-1:-1;;;;;;16004:24:0;;;;;;:20;:24;;;;;;;;16003:25;15972:56;15968:230;;;16126:11;;16116:6;:21;;16108:74;;;;-1:-1:-1;;;16108:74:0;;;;;;;:::i;:::-;1534:6:1;;-1:-1:-1;;;;;16284:15:0;;;1534:6:1;;16284:15:0;;;;:32;;-1:-1:-1;1534:6:1;;-1:-1:-1;;;;;16303:13:0;;;1534:6:1;;16303:13:0;;16284:32;16280:452;;;-1:-1:-1;;;;;16496:26:0;;;;;;:20;:26;;;;;;;;16495:27;:56;;;;-1:-1:-1;;;;;;16527:24:0;;;;;;:20;:24;;;;;;;;16526:25;16495:56;16491:230;;;16649:11;;16639:6;:21;;16631:74;;;;-1:-1:-1;;;16631:74:0;;;;;;;:::i;:::-;16931:32;16946:4;16952:2;16956:6;16931:14;:32::i;:::-;-1:-1:-1;;16976:5:0;:13;;-1:-1:-1;;16976:13:0;;;-1:-1:-1;14492:2505:0:o;1620:130:1:-;1534:6;;-1:-1:-1;;;;;1534:6:1;965:10:5;1683:23:1;1675:68;;;;-1:-1:-1;;;1675:68:1;;11042:2:6;1675:68:1;;;11024:21:6;;;11061:18;;;11054:30;11120:34;11100:18;;;11093:62;11172:18;;1675:68:1;10840:356:6;2687:187:1;2779:6;;;-1:-1:-1;;;;;2795:17:1;;;-1:-1:-1;;;;;;2795:17:1;;;;;;;2827:40;;2779:6;;;2795:17;2779:6;;2827:40;;2760:16;;2827:40;2750:124;2687:187;:::o;1024:95::-;5374:13:2;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:2;;;;;;;:::i;:::-;1086:26:1::1;:24;:26::i;10557:217:0:-:0;10689:32;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10689:32:0;-1:-1:-1;;;10689:32:0;;;10669:53;;10616:4;;;;;;-1:-1:-1;;;;;10669:19:0;;;:53;;10689:32;10669:53;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10633:89;;;;10740:7;:26;;;;-1:-1:-1;10751:11:0;:15;;;10733:33;-1:-1:-1;;;10557:217:0:o;10958:187::-;-1:-1:-1;;;;;11029:29:0;;;;;;:20;:29;;;;;;;;11028:30;11020:70;;;;-1:-1:-1;;;11020:70:0;;12107:2:6;11020:70:0;;;12089:21:6;12146:2;12126:18;;;12119:30;12185:29;12165:18;;;12158:57;12232:18;;11020:70:0;11905:351:6;11020:70:0;-1:-1:-1;;;;;11101:29:0;;;;;:20;:29;;;;;:36;;-1:-1:-1;;11101:36:0;11133:4;11101:36;;;10958:187::o;11398:584::-;-1:-1:-1;;;;;11467:20:0;;;;;;:11;:20;;;;;;;;11466:21;11458:61;;;;-1:-1:-1;;;11458:61:0;;12107:2:6;11458:61:0;;;12089:21:6;12146:2;12126:18;;;12119:30;12185:29;12165:18;;;12158:57;12232:18;;11458:61:0;11905:351:6;11458:61:0;-1:-1:-1;;;;;11584:16:0;;11603:1;11584:16;;;:7;:16;;;;;;:20;11580:214;;11763:19;11774:7;11763:10;:19::i;:::-;-1:-1:-1;;;;;11744:16:0;;;;;;:7;:16;;;;;:38;11580:214;-1:-1:-1;;;;;11848:20:0;;;;;:11;:20;;;;;:27;;-1:-1:-1;;11848:27:0;11871:4;11848:27;;;;;;11951:9;:23;;;;;;;;;;;;;;-1:-1:-1;;;;;;11951:23:0;;;;;;11398:584::o;17077:955::-;-1:-1:-1;;;;;17228:19:0;;;;;;:11;:19;;;;;;;;:46;;;;-1:-1:-1;;;;;;17252:22:0;;;;;;:11;:22;;;;;;;;17251:23;17228:46;17224:801;;;17292:48;17314:6;17322:9;17333:6;17292:21;:48::i;:::-;17077:955;;;:::o;17224:801::-;-1:-1:-1;;;;;17498:19:0;;;;;;:11;:19;;;;;;;;17497:20;:46;;;;-1:-1:-1;;;;;;17521:22:0;;;;;;:11;:22;;;;;;;;17497:46;17493:532;;;17560:46;17580:6;17588:9;17599:6;17560:19;:46::i;17493:532::-;-1:-1:-1;;;;;17770:19:0;;;;;;:11;:19;;;;;;;;:45;;;;-1:-1:-1;;;;;;17793:22:0;;;;;;:11;:22;;;;;;;;17770:45;17766:259;;;17833:48;17855:6;17863:9;17874:6;17833:21;:48::i;17766:259::-;17969:44;17987:6;17995:9;18006:6;17969:17;:44::i;1125:111:1:-;5374:13:2;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:2;;;;;;;:::i;:::-;1197:32:1::1;965:10:5::0;1197:18:1::1;:32::i;20674:1797:0:-:0;20776:24;;:::i;:::-;20878:9;;;;:17;;:9;:17;20875:157;;20942:4;20932:7;;:14;;;;:::i;:::-;20920:7;:27;;20912:108;;;;-1:-1:-1;;;20912:108:0;;12463:2:6;20912:108:0;;;12445:21:6;12502:2;12482:18;;;12475:30;;;12541:34;12521:18;;;12514:62;12612:34;12592:18;;;12585:62;-1:-1:-1;;;12663:19:6;;;12656:35;12708:19;;20912:108:0;12261:472:6;20912:108:0;21090:26;;;21156:10;:8;:10::i;:::-;21146:20;;:7;:20;:::i;:::-;21127:16;;;:39;21256:1;21234:19;;;:23;;;21379:5;;21346:29;;:7;:29;:::i;:::-;21345:39;;;;:::i;:::-;21325:17;;;:59;21435:10;:8;:10::i;:::-;21415:4;:17;;;:30;;;;:::i;:::-;21395:17;;;:50;;;21545:21;21527:108;;21606:17;;;;21583:20;;;:40;21527:108;21800:16;;-1:-1:-1;;;;;21781:15:0;;21800:16;21781:15;;;:7;:15;;;;;:35;;:15;;21800:16;21781:35;;21800:16;;21781:35;:::i;:::-;;;;-1:-1:-1;;21846:16:0;;;;;-1:-1:-1;;;;;21827:15:0;;;;;;:7;:15;;;;;;:35;;21846:16;;21827:15;;:35;;21846:16;;21827:35;:::i;:::-;;;;-1:-1:-1;;22030:17:0;;;;22011:16;;;;:36;;22030:17;22011:36;:::i;:::-;-1:-1:-1;;;;;21988:18:0;;;;;;:7;:18;;;;;:60;;:18;;;:60;;;;;:::i;:::-;;;;-1:-1:-1;;22154:20:0;;;;22143:7;:31;;:7;;:31;;22154:20;;22143:31;:::i;:::-;;;;-1:-1:-1;;22299:17:0;;;;22280:16;;-1:-1:-1;;;;;22251:67:0;;;;;;;;-1:-1:-1;;;;;;;;;;;22251:67:0;22280:36;;;:::i;:::-;22251:67;;1445:25:6;;;1433:2;1418:18;22251:67:0;;;;;;;22379:16;;22430:17;;;;22344:119;;22379:16;22411:36;;22379:16;22411:36;:::i;:::-;22344:119;;;2761:25:6;;;2817:2;2802:18;;2795:34;;;;2734:18;22344:119:0;;;;;;;;20765:1706;20674:1797;;;:::o;18772:1760::-;18872:24;;:::i;:::-;19070:2;19049:18;19060:6;19049:10;:18::i;:::-;:23;;;;:::i;:::-;19038:7;:34;;19030:105;;;;-1:-1:-1;;;19030:105:0;;13113:2:6;19030:105:0;;;13095:21:6;13152:2;13132:18;;;13125:30;13191:34;13171:18;;;13164:62;13262:28;13242:18;;;13235:56;13308:19;;19030:105:0;12911:422:6;19030:105:0;19196:26;;;19262:10;:8;:10::i;:::-;19252:20;;:7;:20;:::i;:::-;19233:16;;;:39;19308:1;19285:20;;;:24;;;19433:5;;19399:30;;:7;:30;:::i;:::-;19398:40;;;;:::i;:::-;19377:18;;;:61;19491:10;:8;:10::i;:::-;19470:4;:18;;;:31;;;;:::i;:::-;19449:18;;;:52;;;19587:22;19583:97;;19650:18;;;;19627:20;;;:41;19583:97;19831:4;:16;;;19812:7;:15;19820:6;-1:-1:-1;;;;;19812:15:0;-1:-1:-1;;;;;19812:15:0;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;;20026:18:0;;;;20007:16;;:37;;20026:18;20007:37;:::i;:::-;-1:-1:-1;;;;;19984:18:0;;;;;;:7;:18;;;;;:61;;:18;;;:61;;;;;:::i;:::-;;;;-1:-1:-1;;20098:18:0;;;;20079:16;;;;:37;;20098:18;20079:37;:::i;:::-;-1:-1:-1;;;;;20056:18:0;;;;;;:7;:18;;;;;:61;;:18;;;:61;;;;;:::i;:::-;;;;-1:-1:-1;;20223:20:0;;;;20212:7;:31;;:7;;:31;;20223:20;;20212:31;:::i;:::-;;;;-1:-1:-1;;20368:18:0;;;;20349:16;;-1:-1:-1;;;;;20320:68:0;;;;;;;;-1:-1:-1;;;;;;;;;;;20320:68:0;20349:37;;;:::i;:::-;20320:68;;1445:25:6;;;1433:2;1418:18;20320:68:0;;;;;;;20439:16;;20490:18;;;;20406:118;;20439:16;20471:37;;20439:16;20471:37;:::i;22644:936::-;22746:24;;:::i;:::-;22884:26;;;22950:10;:8;:10::i;:::-;22940:20;;:7;:20;:::i;:::-;22921:16;;;;:39;;;;23077:16;;-1:-1:-1;;;;;23058:15:0;;23077:16;23058:15;;;:7;:15;;;;;;:35;;23077:16;;23058:15;;:35;;23077:16;;23058:35;:::i;:::-;;;;-1:-1:-1;;23123:16:0;;;;;-1:-1:-1;;;;;23104:15:0;;;;;;:7;:15;;;;;;:35;;23123:16;;23104:15;;:35;;23123:16;;23104:35;:::i;:::-;;;;-1:-1:-1;;23243:16:0;;-1:-1:-1;;;;;23221:18:0;;23243:16;23221:18;;;:7;:18;;;;;:38;;:18;;23243:16;23221:38;;23243:16;;23221:38;:::i;:::-;;;;-1:-1:-1;;23292:16:0;;;;;-1:-1:-1;;;;;23270:18:0;;;;;;:7;:18;;;;;;:38;;23292:16;;23270:18;;:38;;23292:16;;23270:38;:::i;:::-;;;;-1:-1:-1;;23413:16:0;;23385:45;;1445:25:6;;;-1:-1:-1;;;;;23385:45:0;;;;;;;;-1:-1:-1;;;;;;;;;;;23385:45:0;1433:2:6;1418:18;23385:45:0;;;;;;;23483:16;;23448:124;;;2761:25:6;;;2817:2;2802:18;;2795:34;;;;23448:124:0;;2734:18:6;23448:124:0;2587:248:6;23721:927:0;23819:24;;:::i;:::-;23989:19;23968:18;23979:6;23968:10;:18::i;:::-;:40;;;;:::i;:::-;23957:7;:51;;23949:93;;;;-1:-1:-1;;;23949:93:0;;13540:2:6;23949:93:0;;;13522:21:6;13579:2;13559:18;;;13552:30;13618:31;13598:18;;;13591:59;13667:18;;23949:93:0;13338:353:6;23949:93:0;24101:26;;;24167:10;:8;:10::i;:::-;24157:20;;:7;:20;:::i;:::-;24138:16;;;;:39;;;-1:-1:-1;;;;;24294:15:0;;;;;;:7;:15;;;;;;:35;;:15;;;:35;;24138:39;;24294:35;:::i;:::-;;;;-1:-1:-1;;24448:16:0;;;;;-1:-1:-1;;;;;24426:18:0;;;;;;:7;:18;;;;;;:38;;24448:16;;24426:18;;:38;;24448:16;;24426:38;:::i;:::-;;;;-1:-1:-1;;24511:16:0;;24482:47;;1445:25:6;;;-1:-1:-1;;;;;24482:47:0;;;;;;;;-1:-1:-1;;;;;;;;;;;24482:47:0;1433:2:6;1418:18;24482:47:0;;;;;;;24578:16;;24547:93;;;2761:25:6;;;2817:2;2802:18;;2795:34;;;;24547:93:0;;2734:18:6;24547:93:0;2587:248:6;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:250:6:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:6;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:6;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:6:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:6;;777:42;;767:70;;833:1;830;823:12;848:254;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:6:o;1481:328::-;1558:6;1566;1574;1627:2;1615:9;1606:7;1602:23;1598:32;1595:52;;;1643:1;1640;1633:12;1595:52;1666:29;1685:9;1666:29;:::i;:::-;1656:39;;1714:38;1748:2;1737:9;1733:18;1714:38;:::i;:::-;1704:48;;1799:2;1788:9;1784:18;1771:32;1761:42;;1481:328;;;;;:::o;2003:180::-;2062:6;2115:2;2103:9;2094:7;2090:23;2086:32;2083:52;;;2131:1;2128;2121:12;2083:52;-1:-1:-1;2154:23:6;;2003:180;-1:-1:-1;2003:180:6:o;2396:186::-;2455:6;2508:2;2496:9;2487:7;2483:23;2479:32;2476:52;;;2524:1;2521;2514:12;2476:52;2547:29;2566:9;2547:29;:::i;:::-;2537:39;2396:186;-1:-1:-1;;;2396:186:6:o;2840:273::-;2896:6;2949:2;2937:9;2928:7;2924:23;2920:32;2917:52;;;2965:1;2962;2955:12;2917:52;3004:9;2991:23;3057:5;3050:13;3043:21;3036:5;3033:32;3023:60;;3079:1;3076;3069:12;3118:260;3186:6;3194;3247:2;3235:9;3226:7;3222:23;3218:32;3215:52;;;3263:1;3260;3253:12;3215:52;3286:29;3305:9;3286:29;:::i;:::-;3276:39;;3334:38;3368:2;3357:9;3353:18;3334:38;:::i;:::-;3324:48;;3118:260;;;;;:::o;3383:380::-;3462:1;3458:12;;;;3505;;;3526:61;;3580:4;3572:6;3568:17;3558:27;;3526:61;3633:2;3625:6;3622:14;3602:18;3599:38;3596:161;;3679:10;3674:3;3670:20;3667:1;3660:31;3714:4;3711:1;3704:15;3742:4;3739:1;3732:15;3596:161;;3383:380;;;:::o;3768:127::-;3829:10;3824:3;3820:20;3817:1;3810:31;3860:4;3857:1;3850:15;3884:4;3881:1;3874:15;3900:128;3967:9;;;3988:11;;;3985:37;;;4002:18;;:::i;4033:125::-;4098:9;;;4119:10;;;4116:36;;;4132:18;;:::i;4574:127::-;4635:10;4630:3;4626:20;4623:1;4616:31;4666:4;4663:1;4656:15;4690:4;4687:1;4680:15;4706:120;4746:1;4772;4762:35;;4777:18;;:::i;:::-;-1:-1:-1;4811:9:6;;4706:120::o;5246:127::-;5307:10;5302:3;5298:20;5295:1;5288:31;5338:4;5335:1;5328:15;5362:4;5359:1;5352:15;5504:518;5606:2;5601:3;5598:11;5595:421;;;5642:5;5639:1;5632:16;5686:4;5683:1;5673:18;5756:2;5744:10;5740:19;5737:1;5733:27;5727:4;5723:38;5792:4;5780:10;5777:20;5774:47;;;-1:-1:-1;5815:4:6;5774:47;5870:2;5865:3;5861:12;5858:1;5854:20;5848:4;5844:31;5834:41;;5925:81;5943:2;5936:5;5933:13;5925:81;;;6002:1;5988:16;;5969:1;5958:13;5925:81;;;5929:3;;5504:518;;;:::o;6198:1345::-;6324:3;6318:10;6351:18;6343:6;6340:30;6337:56;;;6373:18;;:::i;:::-;6402:97;6492:6;6452:38;6484:4;6478:11;6452:38;:::i;:::-;6446:4;6402:97;:::i;:::-;6554:4;;6611:2;6600:14;;6628:1;6623:663;;;;7330:1;7347:6;7344:89;;;-1:-1:-1;7399:19:6;;;7393:26;7344:89;-1:-1:-1;;6155:1:6;6151:11;;;6147:24;6143:29;6133:40;6179:1;6175:11;;;6130:57;7446:81;;6593:944;;6623:663;5451:1;5444:14;;;5488:4;5475:18;;-1:-1:-1;;6659:20:6;;;6777:236;6791:7;6788:1;6785:14;6777:236;;;6880:19;;;6874:26;6859:42;;6972:27;;;;6940:1;6928:14;;;;6807:19;;6777:236;;;6781:3;7041:6;7032:7;7029:19;7026:201;;;7102:19;;;7096:26;-1:-1:-1;;7185:1:6;7181:14;;;7197:3;7177:24;7173:37;7169:42;7154:58;7139:74;;7026:201;;;7273:1;7264:6;7261:1;7257:14;7253:22;7247:4;7240:36;6593:944;;;;;6198:1345;;:::o;7548:112::-;7580:1;7606;7596:35;;7611:18;;:::i;:::-;-1:-1:-1;7645:9:6;;7548:112::o;7864:127::-;7925:10;7920:3;7916:20;7913:1;7906:31;7956:4;7953:1;7946:15;7980:4;7977:1;7970:15;10431:404;10633:2;10615:21;;;10672:2;10652:18;;;10645:30;10711:34;10706:2;10691:18;;10684:62;-1:-1:-1;;;10777:2:6;10762:18;;10755:38;10825:3;10810:19;;10431:404::o;11201:407::-;11403:2;11385:21;;;11442:2;11422:18;;;11415:30;11481:34;11476:2;11461:18;;11454:62;-1:-1:-1;;;11547:2:6;11532:18;;11525:41;11598:3;11583:19;;11201:407::o;11613:287::-;11742:3;11780:6;11774:13;11796:66;11855:6;11850:3;11843:4;11835:6;11831:17;11796:66;:::i;:::-;11878:16;;;;;11613:287;-1:-1:-1;;11613:287:6:o;12738:168::-;12811:9;;;12842;;12859:15;;;12853:22;;12839:37;12829:71;;12880:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1629200",
								"executionCost": "25924",
								"totalCost": "1655124"
							},
							"external": {
								"_excluded(uint256)": "4657",
								"_getCurrentSupply()": "infinite",
								"_getRate()": "infinite",
								"_rTotal()": "2406",
								"_tTotal()": "2338",
								"allowance(address,address)": "infinite",
								"antiWhale()": "2377",
								"approve(address,uint256)": "24662",
								"balanceOf(address)": "infinite",
								"decimals()": "2356",
								"decreaseAllowance(address,uint256)": "infinite",
								"getTenPercentOfBalance()": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize()": "infinite",
								"isExcluded(address)": "2612",
								"isExcludedFromMaxTx(address)": "2591",
								"maxTxAmount()": "2384",
								"name()": "infinite",
								"owner()": "2375",
								"rBalanceOf(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setAntiWhaleStatus(bool)": "26724",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"viewTBalanceRBalance(address)": "4841"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_tokenTransfer(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite",
								"excludeAddress(address)": "infinite",
								"excludeFromMaxTx(address)": "infinite",
								"isRouter(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3954,
									"end": 25611,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14379,
									"end": 14405,
									"name": "PUSH",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 14379,
									"end": 14405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14379,
									"end": 14405,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 14379,
									"end": 14405,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14379,
									"end": 14405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14379,
									"end": 14405,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3954,
									"end": 25611,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220607425d2163f166c2eb888682e1a778ebca45eaea882550e8f989d032ff94c4164736f6c63430008180033",
									".code": [
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "8129FC1C"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "AF465A27"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "AF465A27"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "CBA0E996"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "AAE5DDD2"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "94E10784"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "97A9D560"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "8129FC1C"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "83F24C09"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "8C0B5E22"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "4D09DEB3"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "658C27A9"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "658C27A9"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "80DA2287"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "4D09DEB3"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "4DACF3F5"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "5319E78F"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "45E0B9D4"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 25611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7284,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7284,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9336,
											"end": 9517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9336,
											"end": 9517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1286,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1294,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7694,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7801,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 7794,
											"end": 7801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7694,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7694,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7694,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7694,
											"end": 7809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7694,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1476,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8662,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8662,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7615,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7532,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1998,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9590,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9590,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5294,
											"end": 5316,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5294,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5294,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5294,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5294,
											"end": 5316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5294,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5294,
											"end": 5316,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4179,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4179,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2384,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2384,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2391,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12139,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12139,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 24717,
											"end": 24845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24828,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24845,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7932,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7932,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2085,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25271,
											"end": 25497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25340,
											"end": 25347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25395,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25442,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 25435,
											"end": 25452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25452,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25435,
											"end": 25452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25388,
											"end": 25405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 25271,
											"end": 25497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5762,
											"end": 7195,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5762,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5762,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5762,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10292,
											"end": 10391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10292,
											"end": 10391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12782,
											"end": 13043,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12782,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12782,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 12782,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 12782,
											"end": 13043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7405,
											"end": 7492,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7405,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7405,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7405,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7405,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13140,
											"end": 13779,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13140,
											"end": 13779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13140,
											"end": 13779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13140,
											"end": 13779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13140,
											"end": 13779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9878,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9878,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8382,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8382,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18586,
											"end": 18703,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18586,
											"end": 18703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18586,
											"end": 18703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 18586,
											"end": 18703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 18586,
											"end": 18703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 24924,
											"end": 25034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24982,
											"end": 24986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25017,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24924,
											"end": 25034,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 9091,
											"end": 9254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9192,
											"end": 9199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9230,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9254,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2335,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2335,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7334,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7354,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7347,
											"end": 7359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7347,
											"end": 7359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9431,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9471,
											"end": 9478,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9486,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 9448,
											"end": 9487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9487,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9448,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9505,
											"end": 9509,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9336,
											"end": 9517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8865,
											"end": 8874,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8876,
											"end": 8882,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8847,
											"end": 8883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 8883,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8847,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8936,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8944,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8894,
											"end": 8968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8903,
											"end": 8909,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8903,
											"end": 8909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8925,
											"end": 8967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 8967,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 8967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8925,
											"end": 8967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8967,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8925,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8894,
											"end": 8968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8968,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8894,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8986,
											"end": 8990,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8662,
											"end": 8998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9590,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9738,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9695,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9695,
											"end": 9775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 9727,
											"end": 9774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9774,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9727,
											"end": 9774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4179,
											"end": 4205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 12204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12241,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12358,
											"end": 12365,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12358,
											"end": 12365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4367,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 4384,
											"end": 4402,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4384,
											"end": 4402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65666C656374696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4563,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4544,
											"end": 4563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12340,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12489,
											"end": 12508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12511,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 12511,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12489,
											"end": 12521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12489,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12546,
											"end": 12547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 12547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12532,
											"end": 12708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12571,
											"end": 12572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12571,
											"end": 12572,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12139,
											"end": 12715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12708,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12532,
											"end": 12708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12676,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 12685,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12676,
											"end": 12682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12676,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12676,
											"end": 12696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12676,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 12676,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12696,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12139,
											"end": 12715,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12139,
											"end": 12715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8099,
											"end": 8303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8303,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8099,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8272,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8283,
											"end": 8290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8272,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8272,
											"end": 8291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8303,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8099,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2176,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2149,
											"end": 2179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 7195,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5762,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5033,
											"end": 5035,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5015,
											"end": 5036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "2E"
										},
										{
											"begin": 5052,
											"end": 5070,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5052,
											"end": 5070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5052,
											"end": 5070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 5091,
											"end": 5109,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5091,
											"end": 5109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5091,
											"end": 5109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5155,
											"end": 5199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5235,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5216,
											"end": 5235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4831,
											"end": 5241,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5940,
											"end": 5975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5940,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5940,
											"end": 5975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5940,
											"end": 5975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26AA22A9AA23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6020,
											"end": 6025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6020,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6025,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6020,
											"end": 6036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6020,
											"end": 6036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26AA22A9AA23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6047,
											"end": 6054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6047,
											"end": 6065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6047,
											"end": 6065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6076,
											"end": 6090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6076,
											"end": 6090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6090,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6088,
											"end": 6090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6076,
											"end": 6090,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6076,
											"end": 6090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6076,
											"end": 6090,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 6189,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 6189,
											"end": 6228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6228,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6273,
											"end": 6277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6E"
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6370,
											"end": 6384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6370,
											"end": 6384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6370,
											"end": 6384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6362,
											"end": 6366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6E"
										},
										{
											"begin": 6362,
											"end": 6366,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6362,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6362,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6362,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6362,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6362,
											"end": 6385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6362,
											"end": 6385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6362,
											"end": 6385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6351,
											"end": 6358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6351,
											"end": 6386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6351,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6351,
											"end": 6386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 6502,
											"end": 6518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6510,
											"end": 6517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6518,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6502,
											"end": 6528,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6556,
											"end": 6563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 6556,
											"end": 6563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6542,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6542,
											"end": 6563,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 6637,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "7FEBD347DF14EA35C529E50FB2DD629D4A6226F5CCC893710FB466F8B83823FC"
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6667,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6637,
											"end": 6667,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6742,
											"name": "PUSH",
											"source": 0,
											"value": "8C482E007F935C93984DDF7A647E33EF99566883FFAE3563AA616DC14D1632F7"
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6749,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6749,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6824,
											"name": "PUSH",
											"source": 0,
											"value": "B6E99D88B536AE7728C4B89CA5A6073CF06FD2059E0AFF5B1A4DE2C799D9CB96"
										},
										{
											"begin": 6760,
											"end": 6831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6831,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6831,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 7021,
											"end": 7085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7121,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 7160,
											"end": 7167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7169,
											"end": 7176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 7169,
											"end": 7176,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1476,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7177,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 2,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5762,
											"end": 7195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10292,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10364,
											"end": 10373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10364,
											"end": 10383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10364,
											"end": 10383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12782,
											"end": 13043,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 12782,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12823,
											"end": 12830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12905,
											"end": 12920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12922,
											"end": 12937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12941,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 12941,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12941,
											"end": 12960,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12941,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12904,
											"end": 12960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12904,
											"end": 12960,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12904,
											"end": 12960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13018,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12904,
											"end": 12960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12904,
											"end": 12960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13018,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 13018,
											"end": 13035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13018,
											"end": 13035,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 13018,
											"end": 13035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13035,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12782,
											"end": 13043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12782,
											"end": 13043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7405,
											"end": 7492,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7405,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7457,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7477,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7470,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13140,
											"end": 13779,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13140,
											"end": 13779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13303,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13296,
											"end": 13303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13332,
											"end": 13339,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 13332,
											"end": 13339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13431,
											"end": 13440,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13431,
											"end": 13447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13427,
											"end": 13447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13427,
											"end": 13447,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13576,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13577,
											"end": 13586,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13587,
											"end": 13588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 13577,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 13559,
											"end": 13590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13566,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13559,
											"end": 13590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13590,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 13559,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13708,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13709,
											"end": 13718,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13719,
											"end": 13720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 13709,
											"end": 13721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13701,
											"end": 13722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13691,
											"end": 13722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 13691,
											"end": 13722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13691,
											"end": 13698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13691,
											"end": 13722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13691,
											"end": 13722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13691,
											"end": 13722,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 13691,
											"end": 13722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13449,
											"end": 13452,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13449,
											"end": 13452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 13407,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13754,
											"end": 13761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13754,
											"end": 13761,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13763,
											"end": 13770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13763,
											"end": 13770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13140,
											"end": 13779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13140,
											"end": 13779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9878,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9971,
											"end": 9975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10031,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9971,
											"end": 9975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9971,
											"end": 9975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9988,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9988,
											"end": 10073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10011,
											"end": 10018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10011,
											"end": 10018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 10020,
											"end": 10072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10057,
											"end": 10072,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10057,
											"end": 10072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10020,
											"end": 10072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8382,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8480,
											"end": 8484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 8521,
											"end": 8530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8497,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8497,
											"end": 8539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18586,
											"end": 18703,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 18586,
											"end": 18703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18640,
											"end": 18647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18692,
											"end": 18694,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 18668,
											"end": 18689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 18678,
											"end": 18688,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18668,
											"end": 18677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18668,
											"end": 18689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18668,
											"end": 18689,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 18668,
											"end": 18689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18668,
											"end": 18694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18660,
											"end": 18695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18660,
											"end": 18695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18586,
											"end": 18703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18586,
											"end": 18703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8200,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8180,
											"end": 8201,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8239,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8310,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8311,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8320,
											"end": 8356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8373,
											"end": 8392,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8373,
											"end": 8392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7996,
											"end": 8398,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2517,
											"end": 2525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2498,
											"end": 2526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13863,
											"end": 14369,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 13863,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14054,
											"end": 14073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14054,
											"end": 14073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8607,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8587,
											"end": 8608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8683,
											"end": 8717,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 8797,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8778,
											"end": 8797,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8403,
											"end": 8803,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 14046,
											"end": 14114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14133,
											"end": 14154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14133,
											"end": 14154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9010,
											"end": 9012,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9013,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9049,
											"end": 9051,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9029,
											"end": 9047,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9029,
											"end": 9047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9022,
											"end": 9052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9122,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9061,
											"end": 9123,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9132,
											"end": 9164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8808,
											"end": 9206,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 14125,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14288,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14329,
											"end": 14361,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 14369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 14369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 14369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 14369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14492,
											"end": 16997,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14492,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 14643,
											"end": 14666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14643,
											"end": 14666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14666,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 14643,
											"end": 14666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14682,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14677,
											"end": 14689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14677,
											"end": 14689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14689,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14677,
											"end": 14689,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14689,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9452,
											"end": 9454,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9425,
											"end": 9455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9525,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9464,
											"end": 9526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9606,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9587,
											"end": 9606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9211,
											"end": 9612,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 14752,
											"end": 14820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14839,
											"end": 14855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14839,
											"end": 14855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9801,
											"end": 9822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 9838,
											"end": 9856,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9838,
											"end": 9856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9838,
											"end": 9856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9831,
											"end": 9861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9897,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9870,
											"end": 9932,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9991,
											"end": 10010,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9991,
											"end": 10010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9617,
											"end": 10016,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 14831,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14914,
											"end": 14920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14914,
											"end": 14924,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10223,
											"end": 10225,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10262,
											"end": 10264,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10301,
											"end": 10335,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10336,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10352,
											"end": 10370,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10352,
											"end": 10370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10352,
											"end": 10370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10345,
											"end": 10384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10401,
											"end": 10420,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 10401,
											"end": 10420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10021,
											"end": 10426,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 14906,
											"end": 14970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 15224,
											"end": 15228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 15215,
											"end": 15229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15229,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 15215,
											"end": 15229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15237,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15215,
											"end": 15237,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15276,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15256,
											"end": 15282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15255,
											"end": 15282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 15215,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 15215,
											"end": 15317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15311,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15215,
											"end": 15317,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 15215,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15197,
											"end": 15425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15197,
											"end": 15425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 15197,
											"end": 15425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 15369,
											"end": 15373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 15352,
											"end": 15374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15374,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 15352,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15393,
											"end": 15413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 15408,
											"end": 15412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15393,
											"end": 15407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 15393,
											"end": 15413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15393,
											"end": 15413,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 15393,
											"end": 15413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 15464,
											"end": 15466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 15455,
											"end": 15467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15467,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 15455,
											"end": 15467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15471,
											"end": 15475,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 15455,
											"end": 15518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15514,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15494,
											"end": 15518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15518,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 15455,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 15455,
											"end": 15551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15547,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15536,
											"end": 15551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15551,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 15455,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15655,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15437,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 15437,
											"end": 15655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 15603,
											"end": 15605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 15586,
											"end": 15606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15586,
											"end": 15606,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 15586,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 15640,
											"end": 15642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 15625,
											"end": 15643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15643,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 15625,
											"end": 15643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15750,
											"end": 15765,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 15750,
											"end": 15782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15769,
											"end": 15782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15769,
											"end": 15782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15782,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 15750,
											"end": 15782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 16209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15746,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 15746,
											"end": 16209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15993,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 15999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 16028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 16028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 16028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 15972,
											"end": 16028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16024,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16003,
											"end": 16028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 16028,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 15972,
											"end": 16028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15968,
											"end": 16198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15968,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 15968,
											"end": 16198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16126,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16126,
											"end": 16137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16116,
											"end": 16122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16116,
											"end": 16137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16116,
											"end": 16137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 16108,
											"end": 16182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 16108,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16284,
											"end": 16299,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16284,
											"end": 16299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16284,
											"end": 16299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16284,
											"end": 16299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16284,
											"end": 16299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16284,
											"end": 16299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16284,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 16284,
											"end": 16316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16303,
											"end": 16316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16303,
											"end": 16316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16284,
											"end": 16316,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 16284,
											"end": 16316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 16280,
											"end": 16732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16516,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16496,
											"end": 16522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 16495,
											"end": 16551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16547,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16527,
											"end": 16551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16526,
											"end": 16551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16551,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 16495,
											"end": 16551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 16491,
											"end": 16721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16649,
											"end": 16660,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16649,
											"end": 16660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16660,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 16631,
											"end": 16705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 16631,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 16946,
											"end": 16950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16952,
											"end": 16954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 16962,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 16931,
											"end": 16963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16931,
											"end": 16963,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 16931,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16976,
											"end": 16981,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16976,
											"end": 16989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16976,
											"end": 16989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16976,
											"end": 16989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16976,
											"end": 16989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16976,
											"end": 16989,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14492,
											"end": 16997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1750,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1620,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1706,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11044,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11024,
											"end": 11045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11024,
											"end": 11045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11061,
											"end": 11079,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11061,
											"end": 11079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11061,
											"end": 11079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11054,
											"end": 11084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11120,
											"end": 11154,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11093,
											"end": 11155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 10840,
											"end": 11196,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1119,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1024,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1086,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1086,
											"end": 1112,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10774,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 10557,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C45A0155"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10669,
											"end": 10688,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 10669,
											"end": 10722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10633,
											"end": 10722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10633,
											"end": 10722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10633,
											"end": 10722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10633,
											"end": 10722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 10747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 10766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 10766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10740,
											"end": 10766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10751,
											"end": 10762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10751,
											"end": 10766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10751,
											"end": 10766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10751,
											"end": 10766,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10733,
											"end": 10766,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10557,
											"end": 10774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11145,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 10958,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11029,
											"end": 11058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12107,
											"end": 12109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12146,
											"end": 12148,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12119,
											"end": 12149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12185,
											"end": 12214,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12158,
											"end": 12215,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11905,
											"end": 12256,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 11020,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11130,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11137,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 11145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11398,
											"end": 11982,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 11398,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11478,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11466,
											"end": 11487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12107,
											"end": 12109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12146,
											"end": 12148,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12119,
											"end": 12149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12185,
											"end": 12214,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12158,
											"end": 12215,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11905,
											"end": 12256,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 11458,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11603,
											"end": 11604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11591,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11580,
											"end": 11794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 11580,
											"end": 11794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 11774,
											"end": 11781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11763,
											"end": 11782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11751,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11744,
											"end": 11782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11580,
											"end": 11794,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 11580,
											"end": 11794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11859,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11875,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "PUSH",
											"source": 0,
											"value": "A2153420D844928B4421650203C77BABC8B33D7F2E7B450E2966DB0C22097753"
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11398,
											"end": 11982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17077,
											"end": 18032,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 17077,
											"end": 18032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17239,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17228,
											"end": 17247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 17228,
											"end": 17274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17263,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17252,
											"end": 17274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17251,
											"end": 17274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17274,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 17228,
											"end": 17274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17224,
											"end": 18025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17224,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 17224,
											"end": 18025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 17314,
											"end": 17320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17322,
											"end": 17331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17333,
											"end": 17339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 17292,
											"end": 17340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17340,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 17292,
											"end": 17340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17077,
											"end": 18032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17077,
											"end": 18032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17077,
											"end": 18032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17077,
											"end": 18032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17224,
											"end": 18025,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 17224,
											"end": 18025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17509,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17498,
											"end": 17517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 17497,
											"end": 17543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17532,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17521,
											"end": 17543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17543,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 17497,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 18025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 17493,
											"end": 18025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17560,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 17580,
											"end": 17586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17599,
											"end": 17605,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17560,
											"end": 17579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 17560,
											"end": 17606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 18025,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 17493,
											"end": 18025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17781,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17770,
											"end": 17789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 17770,
											"end": 17815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17804,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17793,
											"end": 17815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17770,
											"end": 17815,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 17770,
											"end": 17815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17766,
											"end": 18025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17766,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 17766,
											"end": 18025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17833,
											"end": 17881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 17855,
											"end": 17861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17863,
											"end": 17872,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17874,
											"end": 17880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17833,
											"end": 17854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 17833,
											"end": 17881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17766,
											"end": 18025,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 17766,
											"end": 18025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 18013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 17987,
											"end": 17993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17995,
											"end": 18004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18006,
											"end": 18012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 17969,
											"end": 18013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1125,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1197,
											"end": 1229,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20674,
											"end": 22471,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 20674,
											"end": 22471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20776,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 20776,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 20776,
											"end": 20800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20776,
											"end": 20800,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 20776,
											"end": 20800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20878,
											"end": 20887,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 20878,
											"end": 20887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20878,
											"end": 20895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20875,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 20875,
											"end": 21032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20942,
											"end": 20946,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 20932,
											"end": 20939,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 20932,
											"end": 20939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 20932,
											"end": 20946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20932,
											"end": 20946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20946,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 20932,
											"end": 20946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20947,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20920,
											"end": 20947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12465,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12541,
											"end": 12575,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F74207075726368617365206D6F7265207468616E2031306D202830"
										},
										{
											"begin": 12521,
											"end": 12539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12521,
											"end": 12539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12521,
											"end": 12539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12514,
											"end": 12576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12612,
											"end": 12646,
											"name": "PUSH",
											"source": 6,
											"value": "2E312529206F6620737570706C7920696E2073696E676C65207472616E736163"
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12585,
											"end": 12647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12663,
											"end": 12682,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 12663,
											"end": 12682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12663,
											"end": 12682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12656,
											"end": 12691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12708,
											"end": 12727,
											"name": "PUSH",
											"source": 6,
											"value": "A4"
										},
										{
											"begin": 12708,
											"end": 12727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12261,
											"end": 12733,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 20912,
											"end": 21020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21090,
											"end": 21116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21090,
											"end": 21116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21090,
											"end": 21116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21156,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 21156,
											"end": 21164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21156,
											"end": 21166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21156,
											"end": 21166,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 21156,
											"end": 21166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 21146,
											"end": 21166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21146,
											"end": 21166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21166,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 21146,
											"end": 21166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21127,
											"end": 21143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21256,
											"end": 21257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21234,
											"end": 21253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21234,
											"end": 21253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21379,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 21379,
											"end": 21384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 21346,
											"end": 21375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21353,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21346,
											"end": 21375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21346,
											"end": 21375,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 21346,
											"end": 21375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21345,
											"end": 21384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 21345,
											"end": 21384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21345,
											"end": 21384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21345,
											"end": 21384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21345,
											"end": 21384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21345,
											"end": 21384,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 21345,
											"end": 21384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21342,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21325,
											"end": 21342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21435,
											"end": 21445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 21435,
											"end": 21443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21435,
											"end": 21445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21435,
											"end": 21445,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 21435,
											"end": 21445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21432,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21415,
											"end": 21432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 21415,
											"end": 21445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21415,
											"end": 21445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21445,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 21415,
											"end": 21445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21412,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 21395,
											"end": 21412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21395,
											"end": 21445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21545,
											"end": 21566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21527,
											"end": 21635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 21527,
											"end": 21635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21606,
											"end": 21623,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 21606,
											"end": 21623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21606,
											"end": 21623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21606,
											"end": 21623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21583,
											"end": 21603,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21583,
											"end": 21603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21583,
											"end": 21603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21583,
											"end": 21623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21527,
											"end": 21635,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 21527,
											"end": 21635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21800,
											"end": 21816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21800,
											"end": 21816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21800,
											"end": 21816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21788,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21800,
											"end": 21816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21800,
											"end": 21816,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21800,
											"end": 21816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21781,
											"end": 21816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21816,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21834,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21846,
											"end": 21862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21827,
											"end": 21862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22030,
											"end": 22047,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 22030,
											"end": 22047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22030,
											"end": 22047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22030,
											"end": 22047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22011,
											"end": 22027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22011,
											"end": 22027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22011,
											"end": 22027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22011,
											"end": 22027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22011,
											"end": 22047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 22011,
											"end": 22047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22030,
											"end": 22047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22011,
											"end": 22047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 22011,
											"end": 22047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22011,
											"end": 22047,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 22011,
											"end": 22047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 21995,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21988,
											"end": 22048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 22048,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22154,
											"end": 22174,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22154,
											"end": 22174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22150,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22143,
											"end": 22150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22174,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 22143,
											"end": 22174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22143,
											"end": 22174,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22299,
											"end": 22316,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22299,
											"end": 22316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22299,
											"end": 22316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22299,
											"end": 22316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22280,
											"end": 22296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22280,
											"end": 22296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22280,
											"end": 22316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 22280,
											"end": 22316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22280,
											"end": 22316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 22280,
											"end": 22316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22280,
											"end": 22316,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 22280,
											"end": 22316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22318,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 22379,
											"end": 22395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22379,
											"end": 22395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22430,
											"end": 22447,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22430,
											"end": 22447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22430,
											"end": 22447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22430,
											"end": 22447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "PUSH",
											"source": 0,
											"value": "E6EF78C5A1F105FC4B9500EEB7CD09B041367BDEE35F1D85761735EE78B3FF2E"
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22379,
											"end": 22395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22411,
											"end": 22447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 22411,
											"end": 22447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22379,
											"end": 22395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22411,
											"end": 22447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 22411,
											"end": 22447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22411,
											"end": 22447,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 22411,
											"end": 22447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22344,
											"end": 22463,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 20765,
											"end": 22471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20674,
											"end": 22471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20674,
											"end": 22471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20674,
											"end": 22471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20674,
											"end": 22471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18772,
											"end": 20532,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 18772,
											"end": 20532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18872,
											"end": 18896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 18872,
											"end": 18896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 18872,
											"end": 18896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18872,
											"end": 18896,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 18872,
											"end": 18896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19070,
											"end": 19072,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19049,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 19060,
											"end": 19066,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19049,
											"end": 19067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19067,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 19049,
											"end": 19067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 19049,
											"end": 19072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19049,
											"end": 19072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19049,
											"end": 19072,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 19049,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19072,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19038,
											"end": 19072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13115,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13152,
											"end": 13154,
											"name": "PUSH",
											"source": 6,
											"value": "3A"
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13125,
											"end": 13155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F742073656C6C206D6F7265207468616E20313025206F662062616C"
										},
										{
											"begin": 13171,
											"end": 13189,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 13171,
											"end": 13189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13171,
											"end": 13189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13164,
											"end": 13226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13262,
											"end": 13290,
											"name": "PUSH",
											"source": 6,
											"value": "616E636520696E2073696E676C65207472616E73616374696F6E000000000000"
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13235,
											"end": 13291,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13308,
											"end": 13327,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 13308,
											"end": 13327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12911,
											"end": 13333,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 19030,
											"end": 19135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19262,
											"end": 19272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 19262,
											"end": 19270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19262,
											"end": 19272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19262,
											"end": 19272,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 19262,
											"end": 19272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19252,
											"end": 19272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 19252,
											"end": 19272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19252,
											"end": 19259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19252,
											"end": 19272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 19252,
											"end": 19272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19252,
											"end": 19272,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 19252,
											"end": 19272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19233,
											"end": 19249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19233,
											"end": 19272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19285,
											"end": 19305,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19285,
											"end": 19305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19433,
											"end": 19438,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 19433,
											"end": 19438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19399,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 19399,
											"end": 19429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19399,
											"end": 19406,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19399,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 19399,
											"end": 19429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19399,
											"end": 19429,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 19399,
											"end": 19429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19398,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 19398,
											"end": 19438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19398,
											"end": 19438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19398,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19398,
											"end": 19438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19398,
											"end": 19438,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 19398,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19377,
											"end": 19438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19491,
											"end": 19501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 19491,
											"end": 19499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19491,
											"end": 19501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19491,
											"end": 19501,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 19491,
											"end": 19501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19488,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 19470,
											"end": 19488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 19470,
											"end": 19501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 19470,
											"end": 19501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19501,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 19470,
											"end": 19501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19449,
											"end": 19467,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19449,
											"end": 19467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19449,
											"end": 19467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19449,
											"end": 19501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19449,
											"end": 19501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19449,
											"end": 19501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19583,
											"end": 19680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 19583,
											"end": 19680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19668,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19650,
											"end": 19668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19647,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19627,
											"end": 19647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19627,
											"end": 19668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19583,
											"end": 19680,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 19583,
											"end": 19680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19831,
											"end": 19835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19831,
											"end": 19847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19831,
											"end": 19847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19831,
											"end": 19847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19819,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19820,
											"end": 19826,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 19812,
											"end": 19847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19847,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20007,
											"end": 20023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20007,
											"end": 20023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20007,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 20007,
											"end": 20044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20007,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 20007,
											"end": 20044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20007,
											"end": 20044,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 20007,
											"end": 20044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 19991,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 19984,
											"end": 20045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20045,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20098,
											"end": 20116,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 20098,
											"end": 20116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20098,
											"end": 20116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20098,
											"end": 20116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20079,
											"end": 20095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20079,
											"end": 20095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20079,
											"end": 20095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20079,
											"end": 20095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20079,
											"end": 20116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 20079,
											"end": 20116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20098,
											"end": 20116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20079,
											"end": 20116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 20079,
											"end": 20116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20079,
											"end": 20116,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 20079,
											"end": 20116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20063,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20056,
											"end": 20117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20117,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20223,
											"end": 20243,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20223,
											"end": 20243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20223,
											"end": 20243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20223,
											"end": 20243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20219,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20212,
											"end": 20219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20223,
											"end": 20243,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20223,
											"end": 20243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 20212,
											"end": 20243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20212,
											"end": 20243,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20368,
											"end": 20386,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 20368,
											"end": 20386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20368,
											"end": 20386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20368,
											"end": 20386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20349,
											"end": 20365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20349,
											"end": 20365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20349,
											"end": 20386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 20349,
											"end": 20386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20349,
											"end": 20386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 20349,
											"end": 20386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20349,
											"end": 20386,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 20349,
											"end": 20386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20320,
											"end": 20388,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20439,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20439,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20490,
											"end": 20508,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 20490,
											"end": 20508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20490,
											"end": 20508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20490,
											"end": 20508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20524,
											"name": "PUSH",
											"source": 0,
											"value": "FF000E16C1C0D33B07404C2B2ABB9832356B5CFD57566D73C9D09611F030890D"
										},
										{
											"begin": 20406,
											"end": 20524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20439,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20471,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 20471,
											"end": 20508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20439,
											"end": 20455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20471,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 20471,
											"end": 20508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22644,
											"end": 23580,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 22644,
											"end": 23580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22746,
											"end": 22770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 22746,
											"end": 22770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 22746,
											"end": 22770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22746,
											"end": 22770,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 22746,
											"end": 22770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22884,
											"end": 22910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22884,
											"end": 22910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22884,
											"end": 22910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22950,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 22950,
											"end": 22958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 22950,
											"end": 22960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22950,
											"end": 22960,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 22950,
											"end": 22960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 22940,
											"end": 22960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 22940,
											"end": 22960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22940,
											"end": 22960,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 22940,
											"end": 22960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22921,
											"end": 22937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23077,
											"end": 23093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23077,
											"end": 23093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23077,
											"end": 23093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23065,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23077,
											"end": 23093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23077,
											"end": 23093,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23077,
											"end": 23093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23077,
											"end": 23093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 23058,
											"end": 23093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23058,
											"end": 23093,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23111,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23123,
											"end": 23139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 23104,
											"end": 23139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23139,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23243,
											"end": 23259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23243,
											"end": 23259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23243,
											"end": 23259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23228,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23243,
											"end": 23259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23243,
											"end": 23259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23243,
											"end": 23259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23221,
											"end": 23259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23221,
											"end": 23259,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23277,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23292,
											"end": 23308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23270,
											"end": 23308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23308,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23413,
											"end": 23429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 23429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23430,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23483,
											"end": 23499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23483,
											"end": 23499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23448,
											"end": 23572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 23448,
											"end": 23572,
											"name": "PUSH",
											"source": 0,
											"value": "2541109A23D530C06D62A3BF63D8D03107194870126FDDB7170C0DAEF360CD8A"
										},
										{
											"begin": 23448,
											"end": 23572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23448,
											"end": 23572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2587,
											"end": 2835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23721,
											"end": 24648,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 23721,
											"end": 24648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 23819,
											"end": 23843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 23819,
											"end": 23843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23843,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 23819,
											"end": 23843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23989,
											"end": 24008,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 23968,
											"end": 23986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23979,
											"end": 23985,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23968,
											"end": 23978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23968,
											"end": 23986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23968,
											"end": 23986,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23968,
											"end": 23986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23968,
											"end": 24008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 23968,
											"end": 24008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23968,
											"end": 24008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23968,
											"end": 24008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 23968,
											"end": 24008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23968,
											"end": 24008,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 23968,
											"end": 24008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23957,
											"end": 23964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23957,
											"end": 24008,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23957,
											"end": 24008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13540,
											"end": 13542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13543,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13579,
											"end": 13581,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13552,
											"end": 13582,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13618,
											"end": 13649,
											"name": "PUSH",
											"source": 6,
											"value": "596F7520676F747461206B6565702031204D45544820616C7761797321000000"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13591,
											"end": 13650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13667,
											"end": 13685,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 13667,
											"end": 13685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 13338,
											"end": 13691,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 23949,
											"end": 24042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24167,
											"end": 24177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 24167,
											"end": 24175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 24167,
											"end": 24177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24167,
											"end": 24177,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 24167,
											"end": 24177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24157,
											"end": 24164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 24157,
											"end": 24177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24138,
											"end": 24154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24177,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24294,
											"end": 24329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24294,
											"end": 24329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24433,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 24426,
											"end": 24464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24426,
											"end": 24464,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24511,
											"end": 24527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24511,
											"end": 24527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24482,
											"end": 24529,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24578,
											"end": 24594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24578,
											"end": 24594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24547,
											"end": 24640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24547,
											"end": 24640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24547,
											"end": 24640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 24547,
											"end": 24640,
											"name": "PUSH",
											"source": 0,
											"value": "D9923E08D9D88FF7A7E9B8460F3163DC6B887FABE315449DA3B5CD16BB5E9340"
										},
										{
											"begin": 24547,
											"end": 24640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 24547,
											"end": 24640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2587,
											"end": 2835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "378"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 269,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 269,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 444,
											"end": 457,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 473,
											"end": 491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 544,
											"end": 559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 509,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 588,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 509,
											"end": 588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 624,
											"end": 653,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 609,
											"end": 654,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 605,
											"end": 659,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 269,
											"end": 665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 670,
											"end": 843,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 670,
											"end": 843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 738,
											"end": 758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 738,
											"end": 758,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 787,
											"end": 818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 787,
											"end": 818,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 777,
											"end": 819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 777,
											"end": 819,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 767,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 767,
											"end": 837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 848,
											"end": 1102,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 848,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 916,
											"end": 922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 974,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 956,
											"end": 963,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 952,
											"end": 975,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 948,
											"end": 980,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 945,
											"end": 997,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 945,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 945,
											"end": 997,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 993,
											"end": 994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 983,
											"end": 995,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 945,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 945,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 1016,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1045,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 848,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1645,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 1666,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1695,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 1714,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "tag",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1797,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1803,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2183,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2003,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2101,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2113,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2118,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2121,
											"end": 2133,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2396,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2510,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2506,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2511,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2526,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 2547,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2576,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2396,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 3113,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2840,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 2967,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "tag",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3063,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3064,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3065,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 3023,
											"end": 3083,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3077,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3226,
											"end": 3233,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3245,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3218,
											"end": 3250,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3265,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 3305,
											"end": 3314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 3286,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3315,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 3286,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 3334,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3324,
											"end": 3372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3324,
											"end": 3372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3458,
											"end": 3470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3470,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3580,
											"end": 3584,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3636,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3637,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3689,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3674,
											"end": 3677,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3670,
											"end": 3690,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3718,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3704,
											"end": 3719,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3746,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3747,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3895,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 3768,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3839,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3824,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3864,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 4028,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3900,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4022,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3985,
											"end": 4022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 4002,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4158,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4033,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4152,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4116,
											"end": 4152,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 4132,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4701,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 4574,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4635,
											"end": 4645,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4630,
											"end": 4633,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4626,
											"end": 4646,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4670,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4656,
											"end": 4671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4694,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4687,
											"end": 4688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4695,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4826,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4706,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 4777,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4811,
											"end": 4820,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5246,
											"end": 5373,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 5246,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5317,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5302,
											"end": 5305,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5298,
											"end": 5318,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5359,
											"end": 5360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5367,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5608,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5601,
											"end": 5604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5609,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 6016,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 5595,
											"end": 6016,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5642,
											"end": 5647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5648,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 5690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5744,
											"end": 5754,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5733,
											"end": 5760,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5796,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5790,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5872,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5865,
											"end": 5868,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5854,
											"end": 5874,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5933,
											"end": 5946,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6002,
											"end": 6003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6004,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5958,
											"end": 5971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 5932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 5932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5504,
											"end": 6022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 7543,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6198,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6328,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6369,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6343,
											"end": 6349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6370,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 6373,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 6492,
											"end": 6498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 6484,
											"end": 6488,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6489,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6452,
											"end": 6490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6490,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 6452,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 6402,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6499,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 6402,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6554,
											"end": 6558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6611,
											"end": 6613,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 6629,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7353,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7399,
											"end": 7418,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7399,
											"end": 7418,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7399,
											"end": 7418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "tag",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6155,
											"end": 6156,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6147,
											"end": 6171,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6172,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6175,
											"end": 6186,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6186,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6187,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7527,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7527,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5492,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6799,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 6899,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 6899,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 6899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6874,
											"end": 6900,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 6901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 6901,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6941,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6928,
											"end": 6942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6928,
											"end": 6942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6928,
											"end": 6942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6928,
											"end": 6942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6781,
											"end": 6784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7047,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7039,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7121,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7121,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7096,
											"end": 7122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 7177,
											"end": 7201,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7173,
											"end": 7210,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 7169,
											"end": 7211,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7154,
											"end": 7212,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7213,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7264,
											"end": 7270,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 7262,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7257,
											"end": 7271,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7253,
											"end": 7275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7251,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "tag",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 7543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 7543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7660,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7548,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7580,
											"end": 7581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7606,
											"end": 7607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7596,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 7596,
											"end": 7631,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 7611,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7864,
											"end": 7991,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7864,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7925,
											"end": 7935,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 7920,
											"end": 7923,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7916,
											"end": 7936,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 7914,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7980,
											"end": 7984,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7985,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10431,
											"end": 10835,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 10431,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10633,
											"end": 10635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10672,
											"end": 10674,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10711,
											"end": 10745,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E7366657220616D6F756E74206578636565647320746865206D617854"
										},
										{
											"begin": 10706,
											"end": 10708,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10684,
											"end": 10746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3C20B6B7BAB73A17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10777,
											"end": 10779,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10755,
											"end": 10793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10825,
											"end": 10828,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10810,
											"end": 10829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10810,
											"end": 10829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10431,
											"end": 10835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11201,
											"end": 11608,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 11201,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11403,
											"end": 11405,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11442,
											"end": 11444,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11481,
											"end": 11515,
											"name": "PUSH",
											"source": 6,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 11476,
											"end": 11478,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11454,
											"end": 11516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11547,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11601,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 11583,
											"end": 11602,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11583,
											"end": 11602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11201,
											"end": 11608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11613,
											"end": 11900,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 11613,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11742,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11780,
											"end": 11786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11774,
											"end": 11787,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11796,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 11855,
											"end": 11861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11850,
											"end": 11853,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11843,
											"end": 11847,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11835,
											"end": 11841,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11831,
											"end": 11848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11796,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 11796,
											"end": 11862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11796,
											"end": 11862,
											"name": "tag",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 11796,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11613,
											"end": 11900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11613,
											"end": 11900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12738,
											"end": 12906,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 12738,
											"end": 12906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12811,
											"end": 12820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12811,
											"end": 12820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12811,
											"end": 12820,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12842,
											"end": 12851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12842,
											"end": 12851,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12859,
											"end": 12874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12859,
											"end": 12874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12859,
											"end": 12874,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12853,
											"end": 12875,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12853,
											"end": 12875,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12876,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12829,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 12829,
											"end": 12900,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 12880,
											"end": 12898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							},
							"sourceList": [
								"METH_unflattned.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_excluded(uint256)": "4d09deb3",
							"_getCurrentSupply()": "97a9d560",
							"_getRate()": "94e10784",
							"_rTotal()": "45e0b9d4",
							"_tTotal()": "af465a27",
							"allowance(address,address)": "dd62ed3e",
							"antiWhale()": "4dacf3f5",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getTenPercentOfBalance()": "aae5ddd2",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"isExcluded(address)": "cba0e996",
							"isExcludedFromMaxTx(address)": "658c27a9",
							"maxTxAmount()": "8c0b5e22",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"rBalanceOf(address)": "5319e78f",
							"renounceOwnership()": "715018a6",
							"setAntiWhaleStatus(bool)": "83f24c09",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"viewTBalanceRBalance(address)": "80da2287"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TransferBothExcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TransferFromExcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TransferStandard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TransferToExcluded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_excluded\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getCurrentSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiWhale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTenPercentOfBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromMaxTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"rBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setAntiWhaleStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"viewTBalanceRBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"METH Token developer team (info@crystalmeth.xyz)\",\"details\":\"Inherits multiple OpenZeppelin standards \",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"An ERC20 contract named METH\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_excluded(uint256)\":{\"notice\":\"array of address which are excluded from rewards\"},\"_getCurrentSupply()\":{\"notice\":\"used by the _getRate function to return two values: rSupply and tSupply\"},\"_getRate()\":{\"notice\":\"function used by the getValues function\"},\"_rTotal()\":{\"notice\":\"/// rTotal is a calculated value - rTotal = MAX \\u2212 (MAX mod tTotal) /// (Note: value will go down after each buy/sell transaction)  \"},\"_tTotal()\":{\"notice\":\"the total fixed supply of METH tokens\"},\"allowance(address,address)\":{\"notice\":\"uses \\\"override\\\" and returns the value from the _allowances function\"},\"approve(address,uint256)\":{\"notice\":\"uses \\\"override\\\" and returns the custom _approve function\"},\"balanceOf(address)\":{\"notice\":\"uses \\\"override\\\" - returns tOwned amounts for excluded addresses and rOwned amounts for all others\"},\"decimals()\":{\"notice\":\"token decimals\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"uses \\\"override\\\" and calls the _approve function\"},\"getTenPercentOfBalance()\":{\"notice\":\"allow holder to obtain the max value they can sell in a single transaction\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"uses \\\"override\\\" and calls the _approve function\"},\"isExcluded(address)\":{\"notice\":\"checks if address is excluded from reflection rewards\"},\"isExcludedFromMaxTx(address)\":{\"notice\":\"checks if address is excluded from Max Tx\"},\"maxTxAmount()\":{\"notice\":\"maximum transation amount\"},\"name()\":{\"notice\":\"token name\"},\"rBalanceOf(address)\":{\"notice\":\"Used by the standard ERC20 \\\"balanceOf()\\\" function /// returns the rAmount divided by the current rate value. \"},\"symbol()\":{\"notice\":\"token symbol\"},\"totalSupply()\":{\"notice\":\"uses \\\"override\\\" to return value from _tTotal (tSpace)\"},\"transfer(address,uint256)\":{\"notice\":\"uses \\\"override\\\" to call the _transfer function\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"uses \\\"override\\\" and calls the  _transfer and the _approve functions\"},\"viewTBalanceRBalance(address)\":{\"notice\":\"verify account balance in both tSpace and rSpace\"}},\"notice\":\"Serves as a dynamic reflection token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"METH_unflattned.sol\":\"METH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"METH_unflattned.sol\":{\"keccak256\":\"0xe90167ecad9b85a9ee3c566f13b987be68e55d7bc702dae398e2781351e57aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d03b5b756e142323ea1f804779e85a7aea9b622cd5e0cd6e962c9250af98ac\",\"dweb:/ipfs/QmVgcSz7XbRNHG9aT4Ewoax8KSXy1J4cvkS8x9Rcdc74xH\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1577,
								"contract": "METH_unflattned.sol:METH",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1580,
								"contract": "METH_unflattned.sol:METH",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2197,
								"contract": "METH_unflattned.sol:METH",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1449,
								"contract": "METH_unflattned.sol:METH",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 1569,
								"contract": "METH_unflattned.sol:METH",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 13,
								"contract": "METH_unflattned.sol:METH",
								"label": "_name",
								"offset": 0,
								"slot": "101",
								"type": "t_string_storage"
							},
							{
								"astId": 15,
								"contract": "METH_unflattned.sol:METH",
								"label": "_symbol",
								"offset": 0,
								"slot": "102",
								"type": "t_string_storage"
							},
							{
								"astId": 17,
								"contract": "METH_unflattned.sol:METH",
								"label": "_decimals",
								"offset": 0,
								"slot": "103",
								"type": "t_uint8"
							},
							{
								"astId": 21,
								"contract": "METH_unflattned.sol:METH",
								"label": "_excluded",
								"offset": 0,
								"slot": "104",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 26,
								"contract": "METH_unflattned.sol:METH",
								"label": "_tOwned",
								"offset": 0,
								"slot": "105",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 31,
								"contract": "METH_unflattned.sol:METH",
								"label": "_rOwned",
								"offset": 0,
								"slot": "106",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 38,
								"contract": "METH_unflattned.sol:METH",
								"label": "_allowances",
								"offset": 0,
								"slot": "107",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 43,
								"contract": "METH_unflattned.sol:METH",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "108",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 48,
								"contract": "METH_unflattned.sol:METH",
								"label": "_isExcludedFromMaxTx",
								"offset": 0,
								"slot": "109",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 51,
								"contract": "METH_unflattned.sol:METH",
								"label": "_MAX",
								"offset": 0,
								"slot": "110",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "METH_unflattned.sol:METH",
								"label": "_tTotal",
								"offset": 0,
								"slot": "111",
								"type": "t_uint256"
							},
							{
								"astId": 57,
								"contract": "METH_unflattned.sol:METH",
								"label": "_rTotal",
								"offset": 0,
								"slot": "112",
								"type": "t_uint256"
							},
							{
								"astId": 60,
								"contract": "METH_unflattned.sol:METH",
								"label": "maxTxAmount",
								"offset": 0,
								"slot": "113",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "METH_unflattned.sol:METH",
								"label": "antiWhale",
								"offset": 0,
								"slot": "114",
								"type": "t_bool"
							},
							{
								"astId": 675,
								"contract": "METH_unflattned.sol:METH",
								"label": "mutex",
								"offset": 1,
								"slot": "114",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"_excluded(uint256)": {
								"notice": "array of address which are excluded from rewards"
							},
							"_getCurrentSupply()": {
								"notice": "used by the _getRate function to return two values: rSupply and tSupply"
							},
							"_getRate()": {
								"notice": "function used by the getValues function"
							},
							"_rTotal()": {
								"notice": "/// rTotal is a calculated value - rTotal = MAX − (MAX mod tTotal) /// (Note: value will go down after each buy/sell transaction)  "
							},
							"_tTotal()": {
								"notice": "the total fixed supply of METH tokens"
							},
							"allowance(address,address)": {
								"notice": "uses \"override\" and returns the value from the _allowances function"
							},
							"approve(address,uint256)": {
								"notice": "uses \"override\" and returns the custom _approve function"
							},
							"balanceOf(address)": {
								"notice": "uses \"override\" - returns tOwned amounts for excluded addresses and rOwned amounts for all others"
							},
							"decimals()": {
								"notice": "token decimals"
							},
							"decreaseAllowance(address,uint256)": {
								"notice": "uses \"override\" and calls the _approve function"
							},
							"getTenPercentOfBalance()": {
								"notice": "allow holder to obtain the max value they can sell in a single transaction"
							},
							"increaseAllowance(address,uint256)": {
								"notice": "uses \"override\" and calls the _approve function"
							},
							"isExcluded(address)": {
								"notice": "checks if address is excluded from reflection rewards"
							},
							"isExcludedFromMaxTx(address)": {
								"notice": "checks if address is excluded from Max Tx"
							},
							"maxTxAmount()": {
								"notice": "maximum transation amount"
							},
							"name()": {
								"notice": "token name"
							},
							"rBalanceOf(address)": {
								"notice": "Used by the standard ERC20 \"balanceOf()\" function /// returns the rAmount divided by the current rate value. "
							},
							"symbol()": {
								"notice": "token symbol"
							},
							"totalSupply()": {
								"notice": "uses \"override\" to return value from _tTotal (tSpace)"
							},
							"transfer(address,uint256)": {
								"notice": "uses \"override\" to call the _transfer function"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "uses \"override\" and calls the  _transfer and the _approve functions"
							},
							"viewTBalanceRBalance(address)": {
								"notice": "verify account balance in both tSpace and rSpace"
							}
						},
						"notice": "Serves as a dynamic reflection token",
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1577,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1580,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2197,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1449,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 1569,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1577,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1580,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122086a5e0ce9cfa164e4b415626cd425b36c2eeb77c3f74e64cfe3eedea2196287464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122086a5e0ce9cfa164e4b415626cd425b36c2eeb77c3f74e64cfe3eedea2196287464736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xA5 0xE0 0xCE SWAP13 STATICCALL AND 0x4E 0x4B COINBASE JUMP 0x26 0xCD TIMESTAMP JUMPDEST CALLDATASIZE 0xC2 0xEE 0xB7 PUSH29 0x3F74E64CFE3EEDEA2196287464736F6C63430008180033000000000000 ",
							"sourceMap": "194:9180:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122086a5e0ce9cfa164e4b415626cd425b36c2eeb77c3f74e64cfe3eedea2196287464736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xA5 0xE0 0xCE SWAP13 STATICCALL AND 0x4E 0x4B COINBASE JUMP 0x26 0xCD TIMESTAMP JUMPDEST CALLDATASIZE 0xC2 0xEE 0xB7 PUSH29 0x3F74E64CFE3EEDEA2196287464736F6C63430008180033000000000000 ",
							"sourceMap": "194:9180:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086a5e0ce9cfa164e4b415626cd425b36c2eeb77c3f74e64cfe3eedea2196287464736f6c63430008180033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"METH_unflattned.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1577,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1580,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2197,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"METH_unflattned.sol": {
				"ast": {
					"absolutePath": "METH_unflattned.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2147
						],
						"ContextUpgradeable": [
							2198
						],
						"IERC20Upgradeable": [
							1817
						],
						"Initializable": [
							1739
						],
						"METH": [
							1437
						],
						"OwnableUpgradeable": [
							1570
						]
					},
					"id": 1438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3306:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 1818,
							"src": "3333:138:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 1571,
							"src": "3473:134:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 1740,
							"src": "3609:134:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Initializable",
										"nameLocations": [
											"3971:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1739,
										"src": "3971:13:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "3971:13:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"3986:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1817,
										"src": "3986:17:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "3986:17:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"4005:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "4005:18:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "4005:18:0"
								}
							],
							"canonicalName": "METH",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "3749:205:0",
								"text": "@title An ERC20 contract named METH\n @author METH Token developer team (info@crystalmeth.xyz)\n @notice Serves as a dynamic reflection token\n @dev Inherits multiple OpenZeppelin standards "
							},
							"fullyImplemented": true,
							"id": 1437,
							"linearizedBaseContracts": [
								1437,
								1570,
								2198,
								1817,
								1739
							],
							"name": "METH",
							"nameLocation": "3963:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "4048:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4033:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4033:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "4075:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4060:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 14,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4060:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "4103:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4089:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 16,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4089:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "4121:52:0",
										"text": "array of address which are excluded from rewards"
									},
									"functionSelector": "4d09deb3",
									"id": 21,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "4196:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4179:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4179:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 20,
										"nodeType": "ArrayTypeName",
										"src": "4179:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "4214:48:0",
										"text": "maps an address to an amount owned in tSpace"
									},
									"id": 26,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "4304:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4268:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 25,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4276:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4268:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4287:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "4318:48:0",
										"text": "maps an address to an amount owned in rSpace"
									},
									"id": 31,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "4408:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4372:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4380:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4372:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4391:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "4428:183:0",
										"text": "/// maps an owner to a spender, and the amount of tokens that the spender is \n/// approved to spend on behalf of the owner. Used in the custom _approve function "
									},
									"id": 38,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "4673:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4617:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 37,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 33,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4625:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4617:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 36,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 34,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4644:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4636:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 35,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4655:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "4693:72:0",
										"text": "maps addresses to whether they are excluded from Fees/Rewards or not"
									},
									"id": 43,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "4804:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4771:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 42,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4779:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4771:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 41,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4790:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "4824:70:0",
										"text": "maps addresses to whether they are excluded from the Max Tx or not"
									},
									"id": 48,
									"mutability": "mutable",
									"name": "_isExcludedFromMaxTx",
									"nameLocation": "4933:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "4900:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 47,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 45,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4908:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4900:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 46,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4919:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "4962:50:0",
										"text": "fixed value representing MAX which is 2**256-1"
									},
									"id": 51,
									"mutability": "mutable",
									"name": "_MAX",
									"nameLocation": "5034:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "5018:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5018:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "5047:49:0",
										"text": "@notice the total fixed supply of METH tokens"
									},
									"functionSelector": "af465a27",
									"id": 54,
									"mutability": "mutable",
									"name": "_tTotal",
									"nameLocation": "5117:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "5102:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5102:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "5133:155:0",
										"text": "/// rTotal is a calculated value - rTotal = MAX − (MAX mod tTotal)\n/// (Note: value will go down after each buy/sell transaction)  "
									},
									"functionSelector": "45e0b9d4",
									"id": 57,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "5309:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "5294:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 56,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5294:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "5325:29:0",
										"text": "maximum transation amount"
									},
									"functionSelector": "8c0b5e22",
									"id": 60,
									"mutability": "mutable",
									"name": "maxTxAmount",
									"nameLocation": "5375:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "5360:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 59,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5360:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4dacf3f5",
									"id": 62,
									"mutability": "mutable",
									"name": "antiWhale",
									"nameLocation": "5407:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "5395:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 61,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5395:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5865:1330:0",
										"statements": [
											{
												"documentation": "ownableUpgradeble call __Ownable_init function",
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 67,
															"name": "OwnableUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "5940:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$1570_$",
																"typeString": "type(contract OwnableUpgradeable)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5959:14:0",
														"memberName": "__Ownable_init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1465,
														"src": "5940:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5940:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "5940:35:0"
											},
											{
												"documentation": "sets token details",
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "6020:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4d5445535446",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6028:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_da93e4a1e3a5d465e89ddfd3c19b510d63e2875fde99ab4b0254211163011909",
															"typeString": "literal_string \"MTESTF\""
														},
														"value": "MTESTF"
													},
													"src": "6020:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "6020:16:0"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "6047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4d5445535446",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6057:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_da93e4a1e3a5d465e89ddfd3c19b510d63e2875fde99ab4b0254211163011909",
															"typeString": "literal_string \"MTESTF\""
														},
														"value": "MTESTF"
													},
													"src": "6047:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "6047:18:0"
											},
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 80,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "6076:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6088:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "6076:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "6076:14:0"
											},
											{
												"documentation": "total token supply is assigned to _tTotal, expressed in wei (10 Billion)",
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 84,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "6189:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030303030303030303030303030303030303030303030303030",
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000000000"
														},
														"value": "10000000000000000000000000000"
													},
													"src": "6189:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "6189:39:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 88,
														"name": "_MAX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "6273:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "~",
														"prefix": true,
														"src": "6280:11:0",
														"subExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6289:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6281:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 89,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6281:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6281:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6273:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "6273:18:0"
											},
											{
												"documentation": "rTotal calculated based on tTotal",
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "6351:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 97,
																	"name": "_MAX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "6362:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 98,
																				"name": "_MAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 51,
																				"src": "6370:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 99,
																				"name": "_tTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 54,
																				"src": "6377:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6370:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6369:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6362:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 103,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6361:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6351:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "6351:35:0"
											},
											{
												"documentation": "adds the rTotal value to owner array mapping which effectively gives owner initial supply",
												"expression": {
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 106,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "6502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 109,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 107,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "6510:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6510:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6502:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 110,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "6521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6502:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "6502:26:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "6542:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 114,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "6556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6542:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "6542:21:0"
											},
											{
												"documentation": "exclude These contracts from fees and rewards",
												"expression": {
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 117,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6637:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 122,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6657:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6649:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6649:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6649:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6637:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6663:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6637:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "6637:30:0"
											},
											{
												"expression": {
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 126,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6678:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 131,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6698:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x000000000000000000000000000000000000dEaD"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6690:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6690:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6678:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6745:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6678:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "6678:71:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 135,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6760:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 140,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030333639",
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6780:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x0000000000000000000000000000000000000369"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6772:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 136,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6772:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6772:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6760:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6827:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6760:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "6760:71:0"
											},
											{
												"documentation": "exclude These contracts from maxTxAmount",
												"expression": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 144,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6898:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 149,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6918:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 145,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6910:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6898:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6924:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6898:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "6898:30:0"
											},
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 153,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6939:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 158,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6959:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x000000000000000000000000000000000000dEaD"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6951:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6951:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6951:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6939:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7006:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6939:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "6939:71:0"
											},
											{
												"expression": {
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 162,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "7021:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 167,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030333639",
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7041:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x0000000000000000000000000000000000000369"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7033:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 163,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7033:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7033:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7021:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7021:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "7021:71:0"
											},
											{
												"expression": {
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 171,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "7105:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7117:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7105:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "7105:16:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7156:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7148:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7148:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7148:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 180,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "7160:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7160:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 182,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "7169:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 175,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "7139:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7139:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "EmitStatement",
												"src": "7134:43:0"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 65,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 64,
												"name": "initializer",
												"nameLocations": [
													"5844:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1641,
												"src": "5844:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5844:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "5771:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5781:62:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5865:0:0"
									},
									"scope": 1437,
									"src": "5762:1433:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "7336:31:0",
										"statements": [
											{
												"expression": {
													"id": 192,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "7354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 191,
												"id": 193,
												"nodeType": "Return",
												"src": "7347:12:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "7256:22:0",
										"text": "@notice token name"
									},
									"functionSelector": "06fdde03",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7293:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7297:2:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7321:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:15:0"
									},
									"scope": 1437,
									"src": "7284:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "7459:33:0",
										"statements": [
											{
												"expression": {
													"id": 201,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 15,
													"src": "7477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 200,
												"id": 202,
												"nodeType": "Return",
												"src": "7470:14:0"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7375:24:0",
										"text": "@notice token symbol"
									},
									"functionSelector": "95d89b41",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7414:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7420:2:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "7444:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7444:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7443:15:0"
									},
									"scope": 1437,
									"src": "7405:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "7580:35:0",
										"statements": [
											{
												"expression": {
													"id": 210,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "7598:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "7591:16:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "7500:26:0",
										"text": "@notice token decimals"
									},
									"functionSelector": "313ce567",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7541:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7549:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "7573:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 207,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7573:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7572:7:0"
									},
									"scope": 1437,
									"src": "7532:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1766
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "7776:33:0",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "7794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "7787:14:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "7623:65:0",
										"text": "@notice uses \"override\" to return value from _tTotal (tSpace)"
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7703:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 217,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 216,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"7739:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "7739:17:0"
											}
										],
										"src": "7729:28:0"
									},
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7714:2:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "7767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:9:0"
									},
									"scope": 1437,
									"src": "7694:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1774
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "8027:283:0",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 234,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "8103:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 236,
													"indexExpression": {
														"id": 235,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "8115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8103:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 246,
													"nodeType": "Block",
													"src": "8181:122:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "8283:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "rBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "8272:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8272:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 233,
															"id": 245,
															"nodeType": "Return",
															"src": "8265:26:0"
														}
													]
												},
												"id": 247,
												"nodeType": "IfStatement",
												"src": "8099:204:0",
												"trueBody": {
													"id": 241,
													"nodeType": "Block",
													"src": "8125:50:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 237,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "8147:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 239,
																"indexExpression": {
																	"id": 238,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "8155:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8147:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 233,
															"id": 240,
															"nodeType": "Return",
															"src": "8140:23:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "7817:109:0",
										"text": "@notice uses \"override\" - returns tOwned amounts for excluded addresses and rOwned amounts for all others"
									},
									"functionSelector": "70a08231",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7941:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 229,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"7990:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "7990:17:0"
											}
										],
										"src": "7980:28:0"
									},
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7959:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "7951:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7950:17:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8018:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8017:9:0"
									},
									"scope": 1437,
									"src": "7932:378:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1784
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "8486:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "8507:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8507:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8521:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "8532:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "8497:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8497:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "8497:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8557:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 260,
												"id": 269,
												"nodeType": "Return",
												"src": "8550:11:0"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "8318:58:0",
										"text": "@notice uses \"override\" to call the _transfer function"
									},
									"functionSelector": "a9059cbb",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8391:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 257,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 256,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"8452:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "8452:17:0"
											}
										],
										"src": "8442:28:0"
									},
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8408:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "8400:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "8419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8399:35:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "8480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8479:6:0"
									},
									"scope": 1437,
									"src": "8382:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1816
									],
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "8836:162:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8857:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8865:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 288,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "8876:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 285,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "8847:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8847:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "8847:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8903:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 293,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "8911:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8911:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 295,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "8925:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 297,
																	"indexExpression": {
																		"id": 296,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "8937:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8925:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 300,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 298,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2175,
																		"src": "8945:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8945:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8925:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 301,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8961:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8925:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 291,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "8894:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8894:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "8894:74:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 284,
												"id": 306,
												"nodeType": "Return",
												"src": "8979:11:0"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "8577:79:0",
										"text": "@notice uses \"override\" and calls the  _transfer and the _approve functions"
									},
									"functionSelector": "23b872dd",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "8671:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 281,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 280,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"8802:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "8802:17:0"
											}
										],
										"src": "8792:28:0"
									},
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8728:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8720:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8683:91:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8829:6:0"
									},
									"scope": 1437,
									"src": "8662:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1794
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "9201:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 320,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "9219:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 322,
														"indexExpression": {
															"id": 321,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "9231:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 324,
													"indexExpression": {
														"id": 323,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "9238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9219:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 325,
												"nodeType": "Return",
												"src": "9212:34:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "9006:79:0",
										"text": "@notice uses \"override\" and returns the value from the _allowances function"
									},
									"functionSelector": "dd62ed3e",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9100:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 316,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 315,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"9164:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "9164:17:0"
											}
										],
										"src": "9154:28:0"
									},
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9118:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "9110:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9133:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "9125:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9109:32:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "9192:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9191:9:0"
									},
									"scope": 1437,
									"src": "9091:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1804
									],
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "9437:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 340,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "9457:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9457:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "9471:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "9480:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "9448:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9448:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9505:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 338,
												"id": 347,
												"nodeType": "Return",
												"src": "9498:11:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "9262:68:0",
										"text": "@notice uses \"override\" and returns the custom _approve function"
									},
									"functionSelector": "095ea7b3",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9345:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 335,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 334,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"9403:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "9403:17:0"
											}
										],
										"src": "9393:28:0"
									},
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9361:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9378:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9370:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9352:33:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "9431:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9430:6:0"
									},
									"scope": 1437,
									"src": "9336:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "9684:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 360,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "9704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9704:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 363,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "9727:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 366,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 364,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2175,
																			"src": "9739:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9739:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9727:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 368,
																"indexExpression": {
																	"id": 367,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "9753:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9727:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 369,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "9764:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9727:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 359,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "9695:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9695:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "9695:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 358,
												"id": 374,
												"nodeType": "Return",
												"src": "9786:11:0"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "9525:59:0",
										"text": "@notice uses \"override\" and calls the _approve function"
									},
									"functionSelector": "39509351",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "9599:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9625:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9617:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "9642:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9634:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9616:37:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "9678:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9678:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9677:6:0"
									},
									"scope": 1437,
									"src": "9590:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "9977:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 387,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "9997:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9997:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "10011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 390,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "10020:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 393,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 391,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2175,
																			"src": "10032:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10032:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10020:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 395,
																"indexExpression": {
																	"id": 394,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "10046:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10020:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 396,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10057:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10020:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "9988:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9988:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "9988:85:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 385,
												"id": 401,
												"nodeType": "Return",
												"src": "10084:11:0"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "9813:59:0",
										"text": "@notice uses \"override\" and calls the _approve function"
									},
									"functionSelector": "a457c2d7",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "9887:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9913:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "9905:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "9930:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "9922:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9904:42:0"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "9971:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9971:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9970:6:0"
									},
									"scope": 1437,
									"src": "9878:225:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "10353:38:0",
										"statements": [
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 410,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "10364:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 411,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "10376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10364:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "10364:19:0"
											}
										]
									},
									"functionSelector": "83f24c09",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 407,
												"name": "onlyOwner",
												"nameLocations": [
													"10343:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1484,
												"src": "10343:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10343:9:0"
										}
									],
									"name": "setAntiWhaleStatus",
									"nameLocation": "10301:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "10325:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "10320:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10320:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10319:14:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10353:0:0"
									},
									"scope": 1437,
									"src": "10292:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": true,
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "10401:76:0",
										"text": "/// @notice checks if address is DEX-related smart contract"
									},
									"id": 424,
									"mutability": "constant",
									"name": "SELECTOR",
									"nameLocation": "10507:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "10483:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 417,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "10483:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "666163746f72792829",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10535:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c45a01550ceb4bc5c6b2e6f722b5033a03078f9bd6673457375ba94c26ac1cf0",
															"typeString": "literal_string \"factory()\""
														},
														"value": "factory()"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_c45a01550ceb4bc5c6b2e6f722b5033a03078f9bd6673457375ba94c26ac1cf0",
															"typeString": "literal_string \"factory()\""
														}
													],
													"id": 420,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967288,
													"src": "10525:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 422,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10525:22:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 419,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10518:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 418,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "10518:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10518:30:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "10622:152:0",
										"statements": [
											{
												"assignments": [
													432,
													434
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10639:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "10634:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10634:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "10661:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "10648:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 433,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10648:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 439,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "10712:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"id": 437,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10689:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10693:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "10689:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10689:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 435,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "10669:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10678:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "10669:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10669:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10633:89:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 443,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "10740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 444,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "10751:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10756:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10751:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10765:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10751:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10740:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 430,
												"id": 449,
												"nodeType": "Return",
												"src": "10733:33:0"
											}
										]
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRouter",
									"nameLocation": "10566:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "10583:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10575:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10574:18:0"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10616:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10615:6:0"
									},
									"scope": 1437,
									"src": "10557:217:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "11009:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11028:30:0",
															"subExpression": {
																"baseExpression": {
																	"id": 458,
																	"name": "_isExcludedFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "11029:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 460,
																"indexExpression": {
																	"id": 459,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "11050:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11029:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11060:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11020:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "11020:70:0"
											},
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 465,
															"name": "_isExcludedFromMaxTx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "11101:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 467,
														"indexExpression": {
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "11122:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11101:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11133:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11101:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "11101:36:0"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "10782:170:0",
										"text": "/// @notice as address as being excluded from Max Tx (usually DEX)\n/// IMPORTANT: once an address is marked excluded it becomes PERMANENTLY excluded"
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excludeFromMaxTx",
									"nameLocation": "10967:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10992:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "10984:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10983:17:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11009:0:0"
									},
									"scope": 1437,
									"src": "10958:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "11447:535:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11466:21:0",
															"subExpression": {
																"baseExpression": {
																	"id": 479,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "11467:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 481,
																"indexExpression": {
																	"id": 480,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "11479:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11467:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11489:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11458:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "11458:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 486,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "11584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 488,
														"indexExpression": {
															"id": 487,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "11592:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11584:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11603:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11584:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "if address is not a null address..",
												"id": 500,
												"nodeType": "IfStatement",
												"src": "11580:214:0",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "11606:188:0",
													"statements": [
														{
															"documentation": "then set tOwned value for account to be value based on \n caling the rBalanceOf() function",
															"expression": {
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 491,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "11744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 493,
																	"indexExpression": {
																		"id": 492,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "11752:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11744:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 495,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 475,
																			"src": "11774:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 494,
																		"name": "rBalanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "11763:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11763:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11744:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 498,
															"nodeType": "ExpressionStatement",
															"src": "11744:38:0"
														}
													]
												}
											},
											{
												"documentation": "also set address as excluded",
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 501,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "11848:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 503,
														"indexExpression": {
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "11860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11848:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11871:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11848:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "11848:27:0"
											},
											{
												"documentation": "also add address to the array of excluded addresses",
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "11966:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 507,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "11951:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11961:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "11951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11951:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "11951:23:0"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "11153:239:0",
										"text": "/// @notice marks an address as being excluded from rewards (usually DEX)\n/// and then adds the address the excluded address array\n/// IMPORTANT: once an address is marked excluded it becomes PERMANENTLY excluded"
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excludeAddress",
									"nameLocation": "11407:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11430:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "11422:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11421:17:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11447:0:0"
									},
									"scope": 1437,
									"src": "11398:584:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "12206:509:0",
										"statements": [
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "rOwned",
														"nameLocation": "12225:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 553,
														"src": "12217:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12217:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"baseExpression": {
														"id": 524,
														"name": "_rOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "12234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 526,
													"indexExpression": {
														"id": 525,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "12242:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12234:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12217:33:0"
											},
											{
												"documentation": "first check that rOwned balance is less than the rTotal",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 529,
																"name": "rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "12348:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 530,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "12358:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12348:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12367:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12340:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12340:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "12340:72:0"
											},
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "12497:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 553,
														"src": "12489:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "set the currentRate value from the _getRate function",
												"id": 540,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 538,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "12511:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12511:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12489:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 541,
														"name": "rOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "12536:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12546:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12536:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 551,
													"nodeType": "Block",
													"src": "12590:118:0",
													"statements": [
														{
															"documentation": "displays the rOwned amount expressed in tSpace",
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 547,
																	"name": "rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "12676:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 548,
																	"name": "currentRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "12685:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12676:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 521,
															"id": 550,
															"nodeType": "Return",
															"src": "12669:27:0"
														}
													]
												},
												"id": 552,
												"nodeType": "IfStatement",
												"src": "12532:176:0",
												"trueBody": {
													"id": 546,
													"nodeType": "Block",
													"src": "12549:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 521,
															"id": 545,
															"nodeType": "Return",
															"src": "12564:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "11990:143:0",
										"text": "/// @notice Used by the standard ERC20 \"balanceOf()\" function\n/// returns the rAmount divided by the current rate value. "
									},
									"functionSelector": "5319e78f",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rBalanceOf",
									"nameLocation": "12148:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12167:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "12159:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12158:17:0"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "12197:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12196:9:0"
									},
									"scope": 1437,
									"src": "12139:576:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "12832:211:0",
										"statements": [
											{
												"assignments": [
													561,
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "12913:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "12905:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "12930:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "12922:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "retrieve values from _getCurrentSupply function",
												"id": 566,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 564,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "12941:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12941:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12904:56:0"
											},
											{
												"documentation": "rsupply divided by tsupply",
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 567,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "13018:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 568,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "13028:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13018:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 559,
												"id": 570,
												"nodeType": "Return",
												"src": "13011:24:0"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "12725:51:0",
										"text": "@notice function used by the getValues function"
									},
									"functionSelector": "94e10784",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "12791:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12799:2:0"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "12823:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12822:9:0"
									},
									"scope": 1437,
									"src": "12782:261:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "13208:571:0",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "13286:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "13278:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13278:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "firstly set the values to _rTotal and _tTotal",
												"id": 584,
												"initialValue": {
													"id": 583,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "13296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13278:25:0"
											},
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "13322:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "13314:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13314:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"id": 587,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "13332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13314:25:0"
											},
											{
												"body": {
													"id": 620,
													"nodeType": "Block",
													"src": "13454:280:0",
													"statements": [
														{
															"documentation": "set rSupply to be rSupply minus excluded _rOwned value        ",
															"expression": {
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 600,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "13549:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 601,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "13559:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 602,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 31,
																			"src": "13569:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 606,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 603,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 21,
																				"src": "13577:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 605,
																			"indexExpression": {
																				"id": 604,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "13587:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13577:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13569:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13559:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13549:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 609,
															"nodeType": "ExpressionStatement",
															"src": "13549:41:0"
														},
														{
															"documentation": "set tSupply to be tSupply minus excluded _tOwned value    ",
															"expression": {
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "13681:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "13691:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 612,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "13701:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 616,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 613,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 21,
																				"src": "13709:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 615,
																			"indexExpression": {
																				"id": 614,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "13719:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13709:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13701:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13691:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13681:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "13681:41:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 593,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "13427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 594,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "13431:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13441:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13431:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13427:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "loop for each excluded address:          ",
												"id": 621,
												"initializationExpression": {
													"assignments": [
														590
													],
													"declarations": [
														{
															"constant": false,
															"id": 590,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13420:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 621,
															"src": "13412:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 589,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13412:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 592,
													"initialValue": {
														"hexValue": "30",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13424:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13412:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13449:3:0",
														"subExpression": {
															"id": 597,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "13449:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 599,
													"nodeType": "ExpressionStatement",
													"src": "13449:3:0"
												},
												"nodeType": "ForStatement",
												"src": "13407:327:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 622,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "13754:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 623,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "13763:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 624,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13753:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 579,
												"id": 625,
												"nodeType": "Return",
												"src": "13746:25:0"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "13051:83:0",
										"text": "@notice used by the _getRate function to return two values: rSupply and tSupply"
									},
									"functionSelector": "97a9d560",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "13149:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13166:2:0"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "13190:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "13199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13189:18:0"
									},
									"scope": 1437,
									"src": "13140:639:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "13971:398:0",
										"statements": [
											{
												"documentation": "check that owner and spender are not 0 addresses",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 638,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "14054:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14071:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 639,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14063:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14063:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14054:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14075:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14046:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14046:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "14046:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 648,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "14133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14144:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14144:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14144:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14133:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14156:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14125:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "14125:68:0"
											},
											{
												"documentation": "adds the amount to the owner->spender _allowances mapping",
												"expression": {
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 657,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "14277:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 660,
															"indexExpression": {
																"id": 658,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "14289:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14277:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 661,
														"indexExpression": {
															"id": 659,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "14296:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14277:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 662,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "14307:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14277:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "14277:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 666,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "14338:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "14345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "14354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 665,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "14329:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14329:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "EmitStatement",
												"src": "14324:37:0"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "13787:70:0",
										"text": "@notice CUSTOM approve function to override ERC20 approve function"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "13872:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13899:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "13891:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "13915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13949:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "13941:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13880:82:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13971:0:0"
									},
									"scope": 1437,
									"src": "13863:506:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 675,
									"mutability": "mutable",
									"name": "mutex",
									"nameLocation": "14392:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "14379:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 673,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "14379:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 674,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14400:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "14595:2402:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 686,
																"name": "mutex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "14651:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14660:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "14651:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14643:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14643:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "14643:23:0"
											},
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 691,
														"name": "mutex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "14677:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14685:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "14677:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "14677:12:0"
											},
											{
												"documentation": "checks all inputs are greater than 0",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "14760:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14776:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14768:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 697,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14768:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14768:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14760:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14780:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14752:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "14752:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 706,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "14839:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14853:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14845:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 707,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14845:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14845:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14839:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14857:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14831:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "14831:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 716,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "14914:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14914:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14926:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14906:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "14906:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 723,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "15224:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 722,
																	"name": "isRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "15215:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15215:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15233:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "15215:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15255:27:0",
															"subExpression": {
																"baseExpression": {
																	"id": 727,
																	"name": "_isExcludedFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "15256:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 729,
																"indexExpression": {
																	"id": 728,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "15277:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15256:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15215:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15299:18:0",
														"subExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "15300:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 734,
															"indexExpression": {
																"id": 733,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "15312:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15300:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15215:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "checks if the \"from\" address or the \"to\" address is a V2 Router\n If it is, and it's not already in the  _isExcluded and _isExcludedFromMaxTx arrays,\n then it should be added.",
												"id": 746,
												"nodeType": "IfStatement",
												"src": "15197:228:0",
												"trueBody": {
													"id": 745,
													"nodeType": "Block",
													"src": "15333:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "15369:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "excludeFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "15352:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15352:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "15352:22:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "15408:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 741,
																	"name": "excludeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "15393:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15393:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 744,
															"nodeType": "ExpressionStatement",
															"src": "15393:20:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 748,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "15464:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 747,
																	"name": "isRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "15455:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15455:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15471:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "15455:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15493:25:0",
															"subExpression": {
																"baseExpression": {
																	"id": 752,
																	"name": "_isExcludedFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "15494:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "15515:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15494:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15455:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15535:16:0",
														"subExpression": {
															"baseExpression": {
																"id": 757,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "15536:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 759,
															"indexExpression": {
																"id": 758,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "15548:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15536:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15455:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "15437:218:0",
												"trueBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "15567:88:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 763,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "15603:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 762,
																	"name": "excludeFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "15586:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15586:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "ExpressionStatement",
															"src": "15586:20:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 767,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "15640:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "excludeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "15625:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15625:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 769,
															"nodeType": "ExpressionStatement",
															"src": "15625:18:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 772,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "15750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 773,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "15758:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15758:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15750:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 776,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "15769:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 777,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "15775:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15775:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15769:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15750:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "checks if contract owner is either the \"from\" or the \"to\" address",
												"id": 800,
												"nodeType": "IfStatement",
												"src": "15746:463:0",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "15784:425:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15972:27:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 781,
																			"name": "_isExcludedFromMaxTx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "15973:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 783,
																		"indexExpression": {
																			"id": 782,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "15994:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15973:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "16003:25:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 785,
																			"name": "_isExcludedFromMaxTx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "16004:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 787,
																		"indexExpression": {
																			"id": 786,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "16025:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16004:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15972:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"documentation": "/// assuming neither addresses are owner, \n/// then if the from AND to addresses are NOT excluded from MAX Tx",
															"id": 798,
															"nodeType": "IfStatement",
															"src": "15968:230:0",
															"trueBody": {
																"id": 797,
																"nodeType": "Block",
																"src": "16030:168:0",
																"statements": [
																	{
																		"documentation": "check amount is less than maxTxAmount",
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 793,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 791,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 682,
																						"src": "16116:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 792,
																						"name": "maxTxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 60,
																						"src": "16126:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "16116:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5472616e7366657220616d6f756e74206578636565647320746865206d61785478416d6f756e742e",
																					"id": 794,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16139:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																						"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																					},
																					"value": "Transfer amount exceeds the maxTxAmount."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																						"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																					}
																				],
																				"id": 790,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "16108:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16108:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 796,
																		"nodeType": "ExpressionStatement",
																		"src": "16108:74:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 801,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "16284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 802,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "16292:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16292:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16284:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 805,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "16303:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 806,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "16309:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16309:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16303:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16284:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "checks if from AND to addresses are NOT owner",
												"id": 829,
												"nodeType": "IfStatement",
												"src": "16280:452:0",
												"trueBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "16318:414:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "16495:27:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 810,
																			"name": "_isExcludedFromMaxTx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "16496:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 812,
																		"indexExpression": {
																			"id": 811,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "16517:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16496:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "16526:25:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 814,
																			"name": "_isExcludedFromMaxTx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "16527:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 816,
																		"indexExpression": {
																			"id": 815,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "16548:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16527:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16495:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"documentation": "/// assuming neither addresses are owner...\n/// then if the from and to addresses are not excluded",
															"id": 827,
															"nodeType": "IfStatement",
															"src": "16491:230:0",
															"trueBody": {
																"id": 826,
																"nodeType": "Block",
																"src": "16553:168:0",
																"statements": [
																	{
																		"documentation": "check amount is less than maxTxAmount",
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 820,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 682,
																						"src": "16639:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 821,
																						"name": "maxTxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 60,
																						"src": "16649:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "16639:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5472616e7366657220616d6f756e74206578636565647320746865206d61785478416d6f756e742e",
																					"id": 823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16662:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																						"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																					},
																					"value": "Transfer amount exceeds the maxTxAmount."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																						"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																					}
																				],
																				"id": 819,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "16631:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16631:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 825,
																		"nodeType": "ExpressionStatement",
																		"src": "16631:74:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"documentation": "/// transfer amount, by calling the _tokenTransfer function. It will also pass in takeFee boolean\n/// (part of custom \"_transfer\" function)",
												"expression": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "16946:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "16952:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "16956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "16931:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16931:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "16931:32:0"
											},
											{
												"expression": {
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 836,
														"name": "mutex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "16976:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16984:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "16976:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "16976:13:0"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "14414:72:0",
										"text": "@notice CUSTOM transfer function to override ERC20 transfer function"
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "14501:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14529:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "14521:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14552:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "14544:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14573:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "14565:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14510:76:0"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14595:0:0"
									},
									"scope": 1437,
									"src": "14492:2505:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "17160:872:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 851,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "17228:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 853,
														"indexExpression": {
															"id": 852,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "17240:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17228:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "17251:23:0",
														"subExpression": {
															"baseExpression": {
																"id": 854,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "17252:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 856,
															"indexExpression": {
																"id": 855,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "17264:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17252:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17228:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "SENDER EXCLUDED ADDRESS - (Token buy)",
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17497:20:0",
															"subExpression": {
																"baseExpression": {
																	"id": 866,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "17498:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 868,
																"indexExpression": {
																	"id": 867,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "17510:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17498:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 870,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "17521:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 872,
															"indexExpression": {
																"id": 871,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "17533:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17521:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "17497:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 881,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "17770:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 883,
																"indexExpression": {
																	"id": 882,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "17782:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17770:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"baseExpression": {
																	"id": 884,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "17793:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 886,
																"indexExpression": {
																	"id": 885,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "17805:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17793:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17770:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 901,
															"nodeType": "Block",
															"src": "17954:71:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 896,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 844,
																				"src": "17987:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 897,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 846,
																				"src": "17995:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 898,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "18006:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 895,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "17969:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17969:44:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 900,
																	"nodeType": "ExpressionStatement",
																	"src": "17969:44:0"
																}
															]
														},
														"id": 902,
														"nodeType": "IfStatement",
														"src": "17766:259:0",
														"trueBody": {
															"id": 894,
															"nodeType": "Block",
															"src": "17817:131:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 889,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 844,
																				"src": "17855:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 890,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 846,
																				"src": "17863:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 891,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "17874:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 888,
																			"name": "_transferBothExcluded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "17833:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17833:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 893,
																	"nodeType": "ExpressionStatement",
																	"src": "17833:48:0"
																}
															]
														}
													},
													"id": 903,
													"nodeType": "IfStatement",
													"src": "17493:532:0",
													"trueBody": {
														"id": 880,
														"nodeType": "Block",
														"src": "17545:215:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 875,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "17580:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 876,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 846,
																			"src": "17588:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 877,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "17599:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 874,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "17560:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17560:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 879,
																"nodeType": "ExpressionStatement",
																"src": "17560:46:0"
															}
														]
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "17224:801:0",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "17276:211:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 860,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "17314:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 861,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "17322:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 862,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "17333:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 859,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "17292:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17292:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 864,
															"nodeType": "ExpressionStatement",
															"src": "17292:48:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "17007:64:0",
										"text": "@notice CUSTOM token transfer function called by _transfer()"
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "17086:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "17109:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "17101:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17125:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "17117:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "17136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17100:51:0"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17160:0:0"
									},
									"scope": 1437,
									"src": "17077:955:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "METH.TransferData",
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "18042:46:0",
										"text": "@notice struct used for transfer functions"
									},
									"id": 926,
									"members": [
										{
											"constant": false,
											"id": 909,
											"mutability": "mutable",
											"name": "tAmountSent",
											"nameLocation": "18133:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18125:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 908,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18125:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 911,
											"mutability": "mutable",
											"name": "rAmountSent",
											"nameLocation": "18163:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18155:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 910,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18155:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 913,
											"mutability": "mutable",
											"name": "totalBuyTaxBps",
											"nameLocation": "18193:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18185:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 912,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18185:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 915,
											"mutability": "mutable",
											"name": "totalSellTaxBps",
											"nameLocation": "18226:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18218:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 914,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18218:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 917,
											"mutability": "mutable",
											"name": "tBuyFeeTotal",
											"nameLocation": "18260:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18252:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 916,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18252:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 919,
											"mutability": "mutable",
											"name": "rBuyFeeTotal",
											"nameLocation": "18291:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18283:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 918,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18283:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 921,
											"mutability": "mutable",
											"name": "tSellFeeTotal",
											"nameLocation": "18322:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18314:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 920,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18314:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 923,
											"mutability": "mutable",
											"name": "rSellFeeTotal",
											"nameLocation": "18354:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18346:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 922,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18346:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 925,
											"mutability": "mutable",
											"name": "reflectedAmount",
											"nameLocation": "18386:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 926,
											"src": "18378:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18378:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferData",
									"nameLocation": "18101:12:0",
									"nodeType": "StructDefinition",
									"scope": 1437,
									"src": "18094:315:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ff000e16c1c0d33b07404c2b2abb9832356b5cfd57566d73c9d09611f030890d",
									"id": 932,
									"name": "TransferToExcluded",
									"nameLocation": "18423:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSent",
												"nameLocation": "18450:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "18442:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "18470:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "18462:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18441:44:0"
									},
									"src": "18417:69:0"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "18649:54:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 939,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "18678:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18682:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18678:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 938,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "18668:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18668:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18692:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "18668:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 944,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "18667:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 937,
												"id": 945,
												"nodeType": "Return",
												"src": "18660:35:0"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "18494:86:0",
										"text": "@notice allow holder to obtain the max value they can sell in a single transaction"
									},
									"functionSelector": "aae5ddd2",
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTenPercentOfBalance",
									"nameLocation": "18595:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18617:2:0"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "18640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18639:9:0"
									},
									"scope": 1437,
									"src": "18586:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "18861:1671:0",
										"statements": [
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "18892:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "18872:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
															"typeString": "struct METH.TransferData"
														},
														"typeName": {
															"id": 958,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 957,
																"name": "TransferData",
																"nameLocations": [
																	"18872:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 926,
																"src": "18872:12:0"
															},
															"referencedDeclaration": 926,
															"src": "18872:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_storage_ptr",
																"typeString": "struct METH.TransferData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"nodeType": "VariableDeclarationStatement",
												"src": "18872:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 962,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "19038:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 964,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "19060:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 963,
																		"name": "rBalanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "19049:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19049:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19070:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "19049:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19038:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c616e636520696e2073696e676c65207472616e73616374696f6e",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19074:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac",
																"typeString": "literal_string \"Cannot sell more than 10% of balance in single transaction\""
															},
															"value": "Cannot sell more than 10% of balance in single transaction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac",
																"typeString": "literal_string \"Cannot sell more than 10% of balance in single transaction\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19030:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19030:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "19030:105:0"
											},
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 972,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "19196:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19201:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "19196:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 975,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "19215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19196:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "19196:26:0"
											},
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "19233:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19238:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "19233:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 981,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "19252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 982,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "19262:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19262:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19252:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19233:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "19233:39:0"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 987,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "19285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19290:15:0",
														"memberName": "totalSellTaxBps",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "19285:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19308:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19285:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "19285:24:0"
											},
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 993,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "19377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19382:13:0",
														"memberName": "tSellFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 921,
														"src": "19377:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 996,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "19399:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 997,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "19409:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 998,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19414:15:0",
																		"memberName": "totalSellTaxBps",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 915,
																		"src": "19409:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19399:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1000,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "19398:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "19398:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19377:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "19377:61:0"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1005,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "19449:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19454:13:0",
														"memberName": "rSellFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "19449:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1008,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "19470:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19475:13:0",
															"memberName": "tSellFeeTotal",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 921,
															"src": "19470:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1010,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "19491:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19491:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19470:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19449:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "19449:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1015,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "19587:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19592:13:0",
														"memberName": "rSellFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "19587:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19608:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19587:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "19583:97:0",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "19612:68:0",
													"statements": [
														{
															"expression": {
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1019,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "19627:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "19632:15:0",
																	"memberName": "reflectedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 925,
																	"src": "19627:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1022,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "19650:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19655:13:0",
																	"memberName": "rSellFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 923,
																	"src": "19650:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19627:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1025,
															"nodeType": "ExpressionStatement",
															"src": "19627:41:0"
														}
													]
												}
											},
											{
												"documentation": "rOwned values reduced for the SENDER by the FULL amount",
												"expression": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1028,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "19812:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1030,
														"indexExpression": {
															"id": 1029,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "19820:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19812:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1031,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "19831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19836:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "19831:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19812:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "19812:35:0"
											},
											{
												"documentation": "tOwned and rOwned value updated for the recipient (non-excluded address) increased by the amount minus the fee",
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1035,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "19984:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1037,
														"indexExpression": {
															"id": 1036,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "19992:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19984:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1038,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "20007:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20012:11:0",
																	"memberName": "tAmountSent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 909,
																	"src": "20007:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1040,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "20026:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20031:13:0",
																	"memberName": "tSellFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 921,
																	"src": "20026:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20007:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1043,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "20006:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19984:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "19984:61:0"
											},
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1046,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "20056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1048,
														"indexExpression": {
															"id": 1047,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "20064:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20056:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1049,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "20079:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20084:11:0",
																	"memberName": "rAmountSent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 911,
																	"src": "20079:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1051,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "20098:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20103:13:0",
																	"memberName": "rSellFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 923,
																	"src": "20098:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20079:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1054,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "20078:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20056:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "20056:61:0"
											},
											{
												"expression": {
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1057,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "20212:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1058,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "20223:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20228:15:0",
														"memberName": "reflectedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "20223:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20212:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "20212:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1063,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "20329:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "20337:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1065,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "20349:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20354:11:0",
																		"memberName": "tAmountSent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 909,
																		"src": "20349:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1067,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "20368:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20373:13:0",
																		"memberName": "tSellFeeTotal",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 921,
																		"src": "20368:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20349:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1070,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20348:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1062,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "20320:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20320:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "EmitStatement",
												"src": "20315:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1074,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "20439:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "20444:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "20439:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1076,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "20471:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20476:11:0",
																		"memberName": "tAmountSent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 909,
																		"src": "20471:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1078,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "20490:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20495:13:0",
																		"memberName": "tSellFeeTotal",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 921,
																		"src": "20490:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20471:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1081,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20470:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1073,
														"name": "TransferToExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "20406:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20406:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "EmitStatement",
												"src": "20401:123:0"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "18713:53:0",
										"text": "@notice RECIPIENT excluded (usually a token sell)"
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "18781:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "18809:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "18801:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18825:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "18817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "18844:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "18836:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18800:52:0"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18861:0:0"
									},
									"scope": 1437,
									"src": "18772:1760:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e6ef78c5a1f105fc4b9500eeb7cd09b041367bdee35f1d85761735ee78b3ff2e",
									"id": 1091,
									"name": "TransferFromExcluded",
									"nameLocation": "20546:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSent",
												"nameLocation": "20575:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "20567:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "20595:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "20587:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20566:44:0"
									},
									"src": "20540:71:0"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "20765:1706:0",
										"statements": [
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "20796:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "20776:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
															"typeString": "struct METH.TransferData"
														},
														"typeName": {
															"id": 1102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1101,
																"name": "TransferData",
																"nameLocations": [
																	"20776:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 926,
																"src": "20776:12:0"
															},
															"referencedDeclaration": 926,
															"src": "20776:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_storage_ptr",
																"typeString": "struct METH.TransferData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"nodeType": "VariableDeclarationStatement",
												"src": "20776:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1105,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "20878:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20891:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "20878:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "IfStatement",
												"src": "20875:157:0",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "20897:135:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1109,
																			"name": "tAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "20920:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "_tTotal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 54,
																						"src": "20932:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "31303030",
																						"id": 1111,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20942:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000_by_1",
																							"typeString": "int_const 1000"
																						},
																						"value": "1000"
																					},
																					"src": "20932:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1113,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "20931:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20920:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43616e6e6f74207075726368617365206d6f7265207468616e2031306d2028302e312529206f6620737570706c7920696e2073696e676c65207472616e73616374696f6e",
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20949:70:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069",
																			"typeString": "literal_string \"Cannot purchase more than 10m (0.1%) of supply in single transaction\""
																		},
																		"value": "Cannot purchase more than 10m (0.1%) of supply in single transaction"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069",
																			"typeString": "literal_string \"Cannot purchase more than 10m (0.1%) of supply in single transaction\""
																		}
																	],
																	"id": 1108,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "20912:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20912:108:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1117,
															"nodeType": "ExpressionStatement",
															"src": "20912:108:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1120,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "21090:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "21095:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "21090:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1123,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "21109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21090:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "21090:26:0"
											},
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1126,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "21127:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "21132:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "21127:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1129,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "21146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1130,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "21156:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21156:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21146:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21127:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "21127:39:0"
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1135,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "21234:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "21239:14:0",
														"memberName": "totalBuyTaxBps",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 913,
														"src": "21234:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21256:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21234:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "21234:23:0"
											},
											{
												"expression": {
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1141,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "21325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "21330:12:0",
														"memberName": "tBuyFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 917,
														"src": "21325:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1144,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "21346:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1145,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "21356:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "21361:14:0",
																		"memberName": "totalBuyTaxBps",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 913,
																		"src": "21356:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21346:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1148,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "21345:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21379:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "21345:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21325:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "21325:59:0"
											},
											{
												"expression": {
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1153,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "21395:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "21400:12:0",
														"memberName": "rBuyFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 919,
														"src": "21395:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1156,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "21415:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21420:12:0",
															"memberName": "tBuyFeeTotal",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 917,
															"src": "21415:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1158,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "21435:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21435:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21415:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21395:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "21395:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1163,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "21545:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21550:12:0",
														"memberName": "rBuyFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 919,
														"src": "21545:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21545:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "21527:108:0",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "21568:67:0",
													"statements": [
														{
															"expression": {
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1167,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "21583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "21588:15:0",
																	"memberName": "reflectedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 925,
																	"src": "21583:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1170,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "21606:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "21611:12:0",
																	"memberName": "rBuyFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 919,
																	"src": "21606:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21583:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1173,
															"nodeType": "ExpressionStatement",
															"src": "21583:40:0"
														}
													]
												}
											},
											{
												"documentation": "both tOwned AND rOwned values reduced for the SENDER by the FULL amount",
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1176,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "21781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1178,
														"indexExpression": {
															"id": 1177,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "21789:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21781:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1179,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "21800:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21805:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "21800:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21781:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "21781:35:0"
											},
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1183,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "21827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1185,
														"indexExpression": {
															"id": 1184,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "21835:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21827:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1186,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "21846:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21851:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "21846:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21827:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "21827:35:0"
											},
											{
												"documentation": "rOwned value updated for the recipient (non-excluded address) increased by the amount minus the fee",
												"expression": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1190,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "21988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1192,
														"indexExpression": {
															"id": 1191,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "21996:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21988:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1193,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "22011:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22016:11:0",
																	"memberName": "rAmountSent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 911,
																	"src": "22011:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1195,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "22030:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22035:12:0",
																	"memberName": "rBuyFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 919,
																	"src": "22030:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22011:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1198,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "22010:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21988:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "21988:60:0"
											},
											{
												"expression": {
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1201,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "22143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "22154:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22159:15:0",
														"memberName": "reflectedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "22154:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22143:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "22143:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1207,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "22260:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "22268:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1209,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "22280:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22285:11:0",
																		"memberName": "tAmountSent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 909,
																		"src": "22280:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1211,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "22299:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22304:12:0",
																		"memberName": "tBuyFeeTotal",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 917,
																		"src": "22299:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22280:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1214,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "22279:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1206,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "22251:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22251:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "EmitStatement",
												"src": "22246:72:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1218,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "22379:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22384:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "22379:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1220,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "22411:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22416:11:0",
																		"memberName": "tAmountSent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 909,
																		"src": "22411:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1222,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "22430:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22435:12:0",
																		"memberName": "tBuyFeeTotal",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 917,
																		"src": "22430:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22411:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1225,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "22410:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "TransferFromExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "22344:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22344:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "EmitStatement",
												"src": "22339:124:0"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "20619:49:0",
										"text": "@notice SENDER excluded (usually a token buy)"
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "20683:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "20713:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "20705:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "20729:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "20721:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "20748:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "20740:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20704:52:0"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20765:0:0"
									},
									"scope": 1437,
									"src": "20674:1797:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2541109a23d530c06d62a3bf63d8d03107194870126fddb7170c0daef360cd8a",
									"id": 1235,
									"name": "TransferBothExcluded",
									"nameLocation": "22485:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSent",
												"nameLocation": "22514:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "22506:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "22534:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "22526:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22505:44:0"
									},
									"src": "22479:71:0"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "22735:845:0",
										"statements": [
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "22766:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1306,
														"src": "22746:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
															"typeString": "struct METH.TransferData"
														},
														"typeName": {
															"id": 1246,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1245,
																"name": "TransferData",
																"nameLocations": [
																	"22746:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 926,
																"src": "22746:12:0"
															},
															"referencedDeclaration": 926,
															"src": "22746:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_storage_ptr",
																"typeString": "struct METH.TransferData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"nodeType": "VariableDeclarationStatement",
												"src": "22746:24:0"
											},
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1249,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "22884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "22889:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "22884:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1252,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "22903:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22884:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "22884:26:0"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "22921:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "22926:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "22921:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1258,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "22940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1259,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "22950:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22950:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22940:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22921:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "22921:39:0"
											},
											{
												"documentation": "both tOwned AND rOwned values reduced for the SENDER by the FULL amount",
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1264,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "23058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1266,
														"indexExpression": {
															"id": 1265,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "23066:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23058:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1267,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "23077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23082:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "23077:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23058:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "23058:35:0"
											},
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1271,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "23104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1273,
														"indexExpression": {
															"id": 1272,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "23112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23104:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "23123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23128:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "23123:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23104:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "23104:35:0"
											},
											{
												"documentation": "both tOwned AND rOwned values are updated for recipient",
												"expression": {
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1278,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "23221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1280,
														"indexExpression": {
															"id": 1279,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "23229:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23221:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1281,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "23243:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23248:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "23243:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23221:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "23221:38:0"
											},
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1285,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "23270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1287,
														"indexExpression": {
															"id": 1286,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "23278:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23270:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "23292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23297:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "23292:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23270:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "23270:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1293,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "23394:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "23402:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1295,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "23413:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23418:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "23413:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1292,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "23385:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23385:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "EmitStatement",
												"src": "23380:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1300,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "23483:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23488:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "23483:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1302,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "23514:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23519:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "23514:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1299,
														"name": "TransferBothExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "23448:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23448:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "EmitStatement",
												"src": "23443:129:0"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "22562:76:0",
										"text": "@notice both excluded (token transfer from DEX to DEX) - no fees applied"
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "22653:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "22683:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "22675:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "22699:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "22691:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "22718:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "22710:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22674:52:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22735:0:0"
									},
									"scope": 1437,
									"src": "22644:936:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "d9923e08d9d88ff7a7e9b8460f3163dc6b887fabe315449da3b5cd16bb5e9340",
									"id": 1313,
									"name": "TransferStandard",
									"nameLocation": "23594:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSent",
												"nameLocation": "23619:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "23611:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "23639:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "23631:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23610:44:0"
									},
									"src": "23588:67:0"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "23808:840:0",
										"statements": [
											{
												"assignments": [
													1325
												],
												"declarations": [
													{
														"constant": false,
														"id": 1325,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "23839:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1382,
														"src": "23819:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
															"typeString": "struct METH.TransferData"
														},
														"typeName": {
															"id": 1324,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1323,
																"name": "TransferData",
																"nameLocations": [
																	"23819:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 926,
																"src": "23819:12:0"
															},
															"referencedDeclaration": 926,
															"src": "23819:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_storage_ptr",
																"typeString": "struct METH.TransferData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"nodeType": "VariableDeclarationStatement",
												"src": "23819:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1328,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "23957:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1330,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1316,
																			"src": "23979:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1329,
																		"name": "rBalanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "23968:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23968:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23989:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "23968:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23957:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520676f747461206b6565702031204d45544820616c7761797321",
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24010:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c",
																"typeString": "literal_string \"You gotta keep 1 METH always!\""
															},
															"value": "You gotta keep 1 METH always!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c",
																"typeString": "literal_string \"You gotta keep 1 METH always!\""
															}
														],
														"id": 1327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23949:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23949:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "23949:93:0"
											},
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1338,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "24101:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "24106:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "24101:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1341,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "24120:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24101:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "24101:26:0"
											},
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1344,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "24138:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "24143:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "24138:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1347,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "24157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1348,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "24167:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24167:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24157:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24138:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "24138:39:0"
											},
											{
												"documentation": "rOwned value reduced for the SENDER by the FULL amount",
												"expression": {
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1353,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "24294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1355,
														"indexExpression": {
															"id": 1354,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "24302:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24294:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1356,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "24313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24318:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "24313:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24294:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "24294:35:0"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1360,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "24426:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1362,
														"indexExpression": {
															"id": 1361,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "24434:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24426:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1363,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "24448:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24453:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "24448:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24426:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "24426:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1368,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "24491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1369,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "24499:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"components": [
																{
																	"expression": {
																		"id": 1370,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "24511:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24516:11:0",
																	"memberName": "tAmountSent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 909,
																	"src": "24511:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1372,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "24510:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1367,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "24482:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24482:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "EmitStatement",
												"src": "24477:52:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1376,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "24578:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24583:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "24578:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1378,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "24609:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$926_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24614:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "24609:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1375,
														"name": "TransferStandard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "24547:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24547:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "EmitStatement",
												"src": "24542:98:0"
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "23667:48:0",
										"text": "@notice standard transfer (wallet to wallet)"
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "23730:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23756:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "23748:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "23772:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "23764:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "23791:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "23783:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23747:52:0"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23808:0:0"
									},
									"scope": 1437,
									"src": "23721:927:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "24790:55:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1391,
														"name": "_isExcludedFromMaxTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "24808:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1393,
													"indexExpression": {
														"id": 1392,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "24829:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24808:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1390,
												"id": 1394,
												"nodeType": "Return",
												"src": "24801:36:0"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "24658:53:0",
										"text": "@notice checks if address is excluded from Max Tx"
									},
									"functionSelector": "658c27a9",
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromMaxTx",
									"nameLocation": "24726:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24754:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "24746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24745:17:0"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "24784:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24784:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24783:6:0"
									},
									"scope": 1437,
									"src": "24717:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "24988:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1404,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "25006:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1406,
													"indexExpression": {
														"id": 1405,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "25018:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25006:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1403,
												"id": 1407,
												"nodeType": "Return",
												"src": "24999:27:0"
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "24853:65:0",
										"text": "@notice checks if address is excluded from reflection rewards"
									},
									"functionSelector": "cba0e996",
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcluded",
									"nameLocation": "24933:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24952:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "24944:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:17:0"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "24982:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24982:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24981:6:0"
									},
									"scope": 1437,
									"src": "24924:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "25358:139:0",
										"statements": [
											{
												"assignments": [
													1420
												],
												"declarations": [
													{
														"constant": false,
														"id": 1420,
														"mutability": "mutable",
														"name": "tBalance",
														"nameLocation": "25377:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1435,
														"src": "25369:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1419,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25369:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1424,
												"initialValue": {
													"baseExpression": {
														"id": 1421,
														"name": "_tOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "25388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1423,
													"indexExpression": {
														"id": 1422,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "25396:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25388:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25369:36:0"
											},
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"mutability": "mutable",
														"name": "rBalance",
														"nameLocation": "25424:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1435,
														"src": "25416:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25416:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"baseExpression": {
														"id": 1427,
														"name": "_rOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "25435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1429,
													"indexExpression": {
														"id": 1428,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "25443:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25435:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25416:36:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1431,
															"name": "tBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "25470:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1432,
															"name": "rBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "25480:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1433,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "25469:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1418,
												"id": 1434,
												"nodeType": "Return",
												"src": "25463:26:0"
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "25205:60:0",
										"text": "@notice verify account balance in both tSpace and rSpace"
									},
									"functionSelector": "80da2287",
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewTBalanceRBalance",
									"nameLocation": "25280:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "25309:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "25301:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25300:18:0"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "25340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "25349:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25339:18:0"
									},
									"scope": 1437,
									"src": "25271:226:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1438,
							"src": "3954:21657:0",
							"usedErrors": [],
							"usedEvents": [
								932,
								1091,
								1235,
								1313,
								1455,
								1585,
								1751,
								1760
							]
						}
					],
					"src": "3306:22307:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							2198
						],
						"Initializable": [
							1739
						],
						"OwnableUpgradeable": [
							1570
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1439,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 1440,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1571,
							"sourceUnit": 2199,
							"src": "127:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1571,
							"sourceUnit": 1740,
							"src": "169:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1441,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1739,
										"src": "177:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1444,
										"name": "Initializable",
										"nameLocations": [
											"769:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1739,
										"src": "769:13:1"
									},
									"id": 1445,
									"nodeType": "InheritanceSpecifier",
									"src": "769:13:1"
								},
								{
									"baseName": {
										"id": 1446,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"784:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2198,
										"src": "784:18:1"
									},
									"id": 1447,
									"nodeType": "InheritanceSpecifier",
									"src": "784:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1443,
								"nodeType": "StructuredDocumentation",
								"src": "234:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1570,
							"linearizedBaseContracts": [
								1570,
								2198,
								1739
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "747:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1449,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "825:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1570,
									"src": "809:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1448,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1455,
									"name": "OwnershipTransferred",
									"nameLocation": "844:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "881:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "865:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "912:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "896:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:57:1"
									},
									"src": "838:84:1"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "1076:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1461,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "1086:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "1086:26:1"
											}
										]
									},
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "928:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1459,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1458,
												"name": "onlyInitializing",
												"nameLocations": [
													"1059:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1684,
												"src": "1059:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1059:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1033:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:2:1"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:1"
									},
									"scope": 1570,
									"src": "1024:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "1187:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1471,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "1216:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1216:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1470,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "1197:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "1197:32:1"
											}
										]
									},
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1468,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1467,
												"name": "onlyInitializing",
												"nameLocations": [
													"1170:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1684,
												"src": "1170:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1170:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1134:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:2:1"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:1"
									},
									"scope": 1570,
									"src": "1125:111:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "1345:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1479,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "1355:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "1355:13:1"
											},
											{
												"id": 1482,
												"nodeType": "PlaceholderStatement",
												"src": "1378:1:1"
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "1242:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1484,
									"name": "onlyOwner",
									"nameLocation": "1333:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:2:1"
									},
									"src": "1324:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "1517:30:1",
										"statements": [
											{
												"expression": {
													"id": 1490,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1449,
													"src": "1534:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1491,
												"nodeType": "Return",
												"src": "1527:13:1"
											}
										]
									},
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "1392:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1471:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:2:1"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1508:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:9:1"
									},
									"scope": 1570,
									"src": "1462:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "1665:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1498,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "1683:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1683:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1500,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "1694:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1694:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1683:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1708:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1675:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "1675:68:1"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "1553:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1629:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:2:1"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:1"
									},
									"scope": 1570,
									"src": "1620:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "2139:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2176:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2168:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2168:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1513,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "2149:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "2149:30:1"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "1756:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1511,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1510,
												"name": "onlyOwner",
												"nameLocations": [
													"2129:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1484,
												"src": "2129:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2129:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2094:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2111:2:1"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2139:0:1"
									},
									"scope": 1570,
									"src": "2085:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "2405:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1530,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "2423:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2443:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2435:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1531,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2435:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2435:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2423:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2447:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2415:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "2415:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2517:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1539,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "2498:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2498:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "2498:28:1"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "2192:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1527,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1526,
												"name": "onlyOwner",
												"nameLocations": [
													"2395:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1484,
												"src": "2395:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2395:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2344:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2370:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2362:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:18:1"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2405:0:1"
									},
									"scope": 1570,
									"src": "2335:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "2750:124:1",
										"statements": [
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2768:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "2760:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1550,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2760:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1553,
												"initialValue": {
													"id": 1552,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1449,
													"src": "2779:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2760:25:1"
											},
											{
												"expression": {
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1554,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "2795:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1555,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "2804:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2795:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "2795:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1559,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "2848:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1560,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "2858:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1558,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "2827:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2827:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "EmitStatement",
												"src": "2822:45:1"
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "2539:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2696:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2723:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2715:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:18:1"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2750:0:1"
									},
									"scope": 1570,
									"src": "2687:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "2880:254:1",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1569,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3159:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1570,
									"src": "3139:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1566,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3139:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1568,
										"length": {
											"hexValue": "3439",
											"id": 1567,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3147:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3139:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1571,
							"src": "729:2438:1",
							"usedErrors": [],
							"usedEvents": [
								1455,
								1585
							]
						}
					],
					"src": "102:3066:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2147
						],
						"Initializable": [
							1739
						]
					},
					"id": 1740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 1573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1740,
							"sourceUnit": 2148,
							"src": "138:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 1739,
							"linearizedBaseContracts": [
								1739
							],
							"name": "Initializable",
							"nameLocation": "2412:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:2",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 1577,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1739,
									"src": "2546:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1576,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:2",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 1580,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1739,
									"src": "2675:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1579,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 1585,
									"name": "Initialized",
									"nameLocation": "2809:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "2821:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1582,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:2"
									},
									"src": "2803:33:2"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "3269:483:2",
										"statements": [
											{
												"assignments": [
													1589
												],
												"declarations": [
													{
														"constant": false,
														"id": 1589,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 1640,
														"src": "3279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1588,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1592,
												"initialValue": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:2",
													"subExpression": {
														"id": 1590,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "3302:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1594,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "3347:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1595,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1577,
																				"src": "3365:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1599,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:2",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1604,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$1739",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$1739",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 1603,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1602,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1605,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 1600,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2147,
																						"src": "3388:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$2147_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:2",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1835,
																					"src": "3388:29:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 1606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1608,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1577,
																				"src": "3436:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 1593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:2"
											},
											{
												"expression": {
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1617,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "3536:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:2"
											},
											{
												"condition": {
													"id": 1621,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1589,
													"src": "3566:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1627,
												"nodeType": "IfStatement",
												"src": "3562:65:2",
												"trueBody": {
													"id": 1626,
													"nodeType": "Block",
													"src": "3582:45:2",
													"statements": [
														{
															"expression": {
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1622,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "3596:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1625,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:2"
														}
													]
												}
											},
											{
												"id": 1628,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:2"
											},
											{
												"condition": {
													"id": 1629,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1589,
													"src": "3651:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1639,
												"nodeType": "IfStatement",
												"src": "3647:99:2",
												"trueBody": {
													"id": 1638,
													"nodeType": "Block",
													"src": "3667:79:2",
													"statements": [
														{
															"expression": {
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1630,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "3681:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1633,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1634,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "3721:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1637,
															"nodeType": "EmitStatement",
															"src": "3716:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 1641,
									"name": "initializer",
									"nameLocation": "3255:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:2"
									},
									"src": "3246:506:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "4863:255:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:2",
																"subExpression": {
																	"id": 1647,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "4882:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1649,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "4899:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1650,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "4914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 1646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:2"
											},
											{
												"expression": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1656,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "4982:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1657,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "4997:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:2"
											},
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1660,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "5014:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:2"
											},
											{
												"id": 1664,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:2"
											},
											{
												"expression": {
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1665,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "5055:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1670,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "5103:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1669,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "5091:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "EmitStatement",
												"src": "5086:25:2"
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 1674,
									"name": "reinitializer",
									"nameLocation": "4834:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "4848:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1643,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:2"
									},
									"src": "4825:293:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "5356:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1678,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "5374:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 1677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:2"
											},
											{
												"id": 1682,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:2"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 1684,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:2"
									},
									"src": "5328:125:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "5988:231:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:2",
															"subExpression": {
																"id": 1689,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "6007:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 1688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1694,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "6078:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1696,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 1695,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1718,
												"nodeType": "IfStatement",
												"src": "6074:139:2",
												"trueBody": {
													"id": 1717,
													"nodeType": "Block",
													"src": "6111:102:2",
													"statements": [
														{
															"expression": {
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1701,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "6125:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1703,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 1702,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1708,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 1711,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 1710,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1709,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "6174:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1716,
															"nodeType": "EmitStatement",
															"src": "6169:33:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:2"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:2"
									},
									"scope": 1739,
									"src": "5939:280:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "6393:36:2",
										"statements": [
											{
												"expression": {
													"id": 1726,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1577,
													"src": "6410:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1727,
												"nodeType": "Return",
												"src": "6403:19:2"
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:2"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "6386:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1723,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:2"
									},
									"scope": 1739,
									"src": "6329:100:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "6601:37:2",
										"statements": [
											{
												"expression": {
													"id": 1735,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1580,
													"src": "6618:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1736,
												"nodeType": "Return",
												"src": "6611:20:2"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:2"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "6595:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:2"
									},
									"scope": 1739,
									"src": "6545:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1740,
							"src": "2394:4246:2",
							"usedErrors": [],
							"usedEvents": [
								1585
							]
						}
					],
					"src": "113:6528:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1817
						]
					},
					"id": 1818,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1741,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1742,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1817,
							"linearizedBaseContracts": [
								1817
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1751,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1760,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 1817,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 1817,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 1817,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1785,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 1817,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 1817,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2693:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2705:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:3"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:3"
									},
									"scope": 1817,
									"src": "2657:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1818,
							"src": "202:2545:3",
							"usedErrors": [],
							"usedEvents": [
								1751,
								1760
							]
						}
					],
					"src": "106:2642:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2147
						]
					},
					"id": 2148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1819,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1820,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2147,
							"linearizedBaseContracts": [
								2147
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "1489:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1828,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "1713:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1827,
												"id": 1833,
												"nodeType": "Return",
												"src": "1706:30:4"
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1443:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:4"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1483:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:4"
									},
									"scope": 2147,
									"src": "1423:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1868,
										"nodeType": "Block",
										"src": "2729:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1846,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$2147",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$2147",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1844,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1849,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "2772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:4"
											},
											{
												"assignments": [
													1855,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1855,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1868,
														"src": "2824:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1854,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1862,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1856,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "2842:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1858,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "2864:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1864,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "2893:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:4"
											}
										]
									},
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "2677:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "2704:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:4"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:4"
									},
									"scope": 2147,
									"src": "2658:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "3801:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1880,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "3840:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1881,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "3848:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1879,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1927,
															1971
														],
														"referencedDeclaration": 1971,
														"src": "3818:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1878,
												"id": 1885,
												"nodeType": "Return",
												"src": "3811:79:4"
											}
										]
									},
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "3734:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "3750:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:4"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "3787:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:4"
									},
									"scope": 2147,
									"src": "3712:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "4266:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1900,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "4305:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1901,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "4313:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1903,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "4322:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1899,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1927,
															1971
														],
														"referencedDeclaration": 1971,
														"src": "4283:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1898,
												"id": 1905,
												"nodeType": "Return",
												"src": "4276:59:4"
											}
										]
									},
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "4150:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "4174:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "4201:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:4"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "4252:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:4"
									},
									"scope": 2147,
									"src": "4119:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "4817:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1920,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "4856:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1921,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "4864:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1922,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "4870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1919,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1927,
															1971
														],
														"referencedDeclaration": 1971,
														"src": "4834:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1925,
												"nodeType": "Return",
												"src": "4827:94:4"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "4735:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "4751:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "4770:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:4"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "4803:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:4"
									},
									"scope": 2147,
									"src": "4704:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "5355:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1944,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$2147",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$2147",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1942,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1947,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "5398:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:4"
											},
											{
												"assignments": [
													1953,
													1955
												],
												"declarations": [
													{
														"constant": false,
														"id": 1953,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1970,
														"src": "5457:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1952,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1955,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1970,
														"src": "5471:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1954,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"arguments": [
														{
															"id": 1960,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "5524:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1956,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "5498:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1958,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "5517:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1964,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "5573:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1965,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "5581:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1966,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "5590:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1967,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "5602:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1963,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "5546:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1940,
												"id": 1969,
												"nodeType": "Return",
												"src": "5539:76:4"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5216:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5240:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5290:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:4"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5341:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:4"
									},
									"scope": 2147,
									"src": "5176:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "5899:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1982,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "5935:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1983,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "5943:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1981,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1988,
															2017
														],
														"referencedDeclaration": 2017,
														"src": "5916:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1980,
												"id": 1986,
												"nodeType": "Return",
												"src": "5909:80:4"
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "5827:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "5843:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:4"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "5885:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1978,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:4"
									},
									"scope": 2147,
									"src": "5799:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "6338:168:4",
										"statements": [
											{
												"assignments": [
													2001,
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 2016,
														"src": "6349:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2000,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 2016,
														"src": "6363:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2002,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2008,
												"initialValue": {
													"arguments": [
														{
															"id": 2006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "6408:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2004,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "6390:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2010,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "6457:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2011,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "6465:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2012,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "6474:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2013,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "6486:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2009,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "6430:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1999,
												"id": 2015,
												"nodeType": "Return",
												"src": "6423:76:4"
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "6217:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "6241:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "6268:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1994,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:4"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "6324:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:4"
									},
									"scope": 2147,
									"src": "6180:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "6782:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2028,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "6820:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2029,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "6828:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2027,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2034,
															2063
														],
														"referencedDeclaration": 2063,
														"src": "6799:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2026,
												"id": 2032,
												"nodeType": "Return",
												"src": "6792:84:4"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "6715:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "6731:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2021,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:4"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "6768:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:4"
									},
									"scope": 2147,
									"src": "6685:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "7224:170:4",
										"statements": [
											{
												"assignments": [
													2047,
													2049
												],
												"declarations": [
													{
														"constant": false,
														"id": 2047,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 2062,
														"src": "7235:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2046,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 2062,
														"src": "7249:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2048,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2054,
												"initialValue": {
													"arguments": [
														{
															"id": 2052,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "7296:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2050,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "7276:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2056,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "7345:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2057,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "7353:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2058,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "7362:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2059,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "7374:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2055,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "7318:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2061,
												"nodeType": "Return",
												"src": "7311:76:4"
											}
										]
									},
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "7108:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "7132:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2038,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "7159:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2040,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:4"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "7210:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:4"
									},
									"scope": 2147,
									"src": "7069:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2101,
										"nodeType": "Block",
										"src": "7876:434:4",
										"statements": [
											{
												"condition": {
													"id": 2077,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2068,
													"src": "7890:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2099,
													"nodeType": "Block",
													"src": "8246:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2095,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "8268:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2096,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2072,
																		"src": "8280:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2094,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "8260:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2098,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:4"
														}
													]
												},
												"id": 2100,
												"nodeType": "IfStatement",
												"src": "7886:418:4",
												"trueBody": {
													"id": 2093,
													"nodeType": "Block",
													"src": "7899:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2078,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "7917:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2090,
															"nodeType": "IfStatement",
															"src": "7913:286:4",
															"trueBody": {
																"id": 2089,
																"nodeType": "Block",
																"src": "7941:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2084,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2066,
																							"src": "8143:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2083,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1835,
																						"src": "8132:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2086,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2082,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2088,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2091,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "8219:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2076,
															"id": 2092,
															"nodeType": "Return",
															"src": "8212:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "7727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "7751:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "7773:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2069,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "7806:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2071,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:4"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "7862:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:4"
									},
									"scope": 2147,
									"src": "7682:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "8691:135:4",
										"statements": [
											{
												"condition": {
													"id": 2114,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2105,
													"src": "8705:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2123,
													"nodeType": "Block",
													"src": "8762:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2119,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "8784:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2120,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "8796:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2118,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "8776:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2122,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:4"
														}
													]
												},
												"id": 2124,
												"nodeType": "IfStatement",
												"src": "8701:119:4",
												"trueBody": {
													"id": 2117,
													"nodeType": "Block",
													"src": "8714:42:4",
													"statements": [
														{
															"expression": {
																"id": 2115,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2107,
																"src": "8735:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2113,
															"id": 2116,
															"nodeType": "Return",
															"src": "8728:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2103,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "8566:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "8588:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "8621:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:4"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "8677:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:4"
									},
									"scope": 2147,
									"src": "8531:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2145,
										"nodeType": "Block",
										"src": "8915:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2133,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "8991:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2143,
													"nodeType": "Block",
													"src": "9321:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2140,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "9342:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2139,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2142,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:4"
														}
													]
												},
												"id": 2144,
												"nodeType": "IfStatement",
												"src": "8987:379:4",
												"trueBody": {
													"id": 2138,
													"nodeType": "Block",
													"src": "9014:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:4",
																"nodeType": "YulBlock",
																"src": "9172:133:4",
																"statements": [
																	{
																		"nativeSrc": "9190:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:4"
																			},
																			"nativeSrc": "9213:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:4",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:4"
																					},
																					"nativeSrc": "9254:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:4"
																			},
																			"nativeSrc": "9247:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:4"
																		},
																		"nativeSrc": "9247:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2128,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 2128,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:4",
																	"valueSize": 1
																}
															],
															"id": 2137,
															"nodeType": "InlineAssembly",
															"src": "9163:142:4"
														}
													]
												}
											}
										]
									},
									"id": 2146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "8849:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "8874:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:4"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:4"
									},
									"scope": 2147,
									"src": "8832:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2148,
							"src": "194:9180:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							2198
						],
						"Initializable": [
							1739
						]
					},
					"id": 2199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/release-v4.9/contracts/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 2151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2199,
							"sourceUnit": 1740,
							"src": "125:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2150,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1739,
										"src": "133:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2153,
										"name": "Initializable",
										"nameLocations": [
											"727:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1739,
										"src": "727:13:5"
									},
									"id": 2154,
									"nodeType": "InheritanceSpecifier",
									"src": "727:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2152,
								"nodeType": "StructuredDocumentation",
								"src": "190:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2198,
							"linearizedBaseContracts": [
								2198,
								1739
							],
							"name": "ContextUpgradeable",
							"nameLocation": "705:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "799:7:5",
										"statements": []
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2156,
												"name": "onlyInitializing",
												"nameLocations": [
													"782:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1684,
												"src": "782:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "782:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "756:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:5"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:5"
									},
									"scope": 2198,
									"src": "747:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "874:7:5",
										"statements": []
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2162,
												"name": "onlyInitializing",
												"nameLocations": [
													"857:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1684,
												"src": "857:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "857:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "821:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:5"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:5"
									},
									"scope": 2198,
									"src": "812:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "948:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2171,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "965:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "969:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "965:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2170,
												"id": 2173,
												"nodeType": "Return",
												"src": "958:17:5"
											}
										]
									},
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "895:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:5"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "939:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:9:5"
									},
									"scope": 2198,
									"src": "886:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "1055:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2180,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1072:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1076:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1072:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2179,
												"id": 2182,
												"nodeType": "Return",
												"src": "1065:15:5"
											}
										]
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "997:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:5"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "1039:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1039:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:16:5"
									},
									"scope": 2198,
									"src": "988:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "1165:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1182:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2188,
												"id": 2190,
												"nodeType": "Return",
												"src": "1175:8:5"
											}
										]
									},
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1102:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:5"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1156:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:9:5"
									},
									"scope": 2198,
									"src": "1093:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "1196:254:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 2197,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1475:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 2198,
									"src": "1455:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 2194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1455:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2196,
										"length": {
											"hexValue": "3530",
											"id": 2195,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1463:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1455:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2199,
							"src": "687:796:5",
							"usedErrors": [],
							"usedEvents": [
								1585
							]
						}
					],
					"src": "101:1383:5"
				},
				"id": 5
			}
		}
	}
}