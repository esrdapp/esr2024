{
	"id": "114f64a2ab70d3eb49f8662d02622f33",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"METH.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.23;\r\n\r\n////////////////////////////////////////////////\r\n//                                            //\r\n//    ███╗   ███╗███████╗████████╗██╗  ██╗    //\r\n//    ████╗ ████║██╔════╝╚══██╔══╝██║  ██║    //\r\n//    ██╔████╔██║█████╗     ██║   ███████║    //\r\n//    ██║╚██╔╝██║██╔══╝     ██║   ██╔══██║    //\r\n//    ██║ ╚═╝ ██║███████╗   ██║   ██║  ██║    //\r\n//    ╚═╝     ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝    //\r\n//                                            //\r\n////////////////////////////////////////////////\r\n                                    \r\n                                                                                                                                                                                                \r\n// $METH Token (crystalmeth.xyz) is a Blast Blockchain token where you cannot ever sell \r\n// more than 10% of your token bag in any SINGLE TRANSACTION. \r\n\r\n// For example, if you had 1000 $METH tokens in your wallet, and you attempt to \r\n// sell more than 100 tokens to the DEX, then the transaction will either \r\n// revert, produce an error, or simply not allow you to proceed.\r\n\r\n// If you decided to sell 100 tokens (10%), then you'd be left with 900 METH in your \r\n// wallet, which means for your next sell, you wouldn't be able to sell more \r\n// than 90 METH tokens, and so on.\r\n\r\n// Benefits: METH massively reduces sell pressure. You would need to generate \r\n// multiple transactions to sell large numbers. The mechanism also stops bots \r\n// instantly trying to dump tokens after volatile price spikes. \r\n\r\n//////////////////////     Important notes:     ////////////////////////////// \r\n\r\n// METH is designed to work with all UniswapV2 DEX clones that support \"fee-on-transfer\".\r\n// Note that the transfer (and transferFrom) functions are unable to distinguish \r\n// between a \"sell\" (swap) on a DEX and the process of adding liquidity, as both \r\n// processes involve the recipient of tokens being a DEX, therefore the limitation \r\n// of sending 10% of your bag to a liquidity pool will also apply. Technically, \r\n// there are ways to capture the addLiquidity and addLiquidityETH method calls, \r\n// which could be used to differentiate between a swap and just adding liquidity,\r\n// however this could then become an attack vector if a function was crafted in another\r\n// contract to mimic these Uniswap V2 methods. \r\n\r\n// Note that the following trnasactions have NO LIMITS:\r\n// 1. Wallet-to-Wallet transfers (although you MUST hold back 1 METH!)\r\n// 2. BUYING METH tokens from the DEX (Temporary anti-whale will apply for launch)\r\n// 3. Removing Liquidity from the DEX\r\n\r\n// For more information visit https://crystalmeth.xyz \r\n// or our Telegram group: https://t.me/crystalmethtoken\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary AddressUpgradeable {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\r\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\r\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\r\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\r\n *\r\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\r\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\r\n * case an upgrade adds a module that needs to be initialized.\r\n *\r\n * For example:\r\n *\r\n * [.hljs-theme-light.nopadding]\r\n * ```solidity\r\n * contract MyToken is ERC20Upgradeable {\r\n *     function initialize() initializer public {\r\n *         __ERC20_init(\"MyToken\", \"MTK\");\r\n *     }\r\n * }\r\n *\r\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\r\n *     function initializeV2() reinitializer(2) public {\r\n *         __ERC20Permit_init(\"MyToken\");\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\r\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\r\n *\r\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\r\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\r\n *\r\n * [CAUTION]\r\n * ====\r\n * Avoid leaving a contract uninitialized.\r\n *\r\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\r\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\r\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\r\n *\r\n * [.hljs-theme-light.nopadding]\r\n * ```\r\n * /// @custom:oz-upgrades-unsafe-allow constructor\r\n * constructor() {\r\n *     _disableInitializers();\r\n * }\r\n * ```\r\n * ====\r\n */\r\nabstract contract Initializable {\r\n    /**\r\n     * @dev Indicates that the contract has been initialized.\r\n     * @custom:oz-retyped-from bool\r\n     */\r\n    uint8 private _initialized;\r\n\r\n    /**\r\n     * @dev Indicates that the contract is in the process of being initialized.\r\n     */\r\n    bool private _initializing;\r\n\r\n    /**\r\n     * @dev Triggered when the contract has been initialized or reinitialized.\r\n     */\r\n    event Initialized(uint8 version);\r\n\r\n    /**\r\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\r\n     * `onlyInitializing` functions can be used to initialize parent contracts.\r\n     *\r\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\r\n     * constructor.\r\n     *\r\n     * Emits an {Initialized} event.\r\n     */\r\n    modifier initializer() {\r\n        bool isTopLevelCall = !_initializing;\r\n        require(\r\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\r\n            \"Initializable: contract is already initialized\"\r\n        );\r\n        _initialized = 1;\r\n        if (isTopLevelCall) {\r\n            _initializing = true;\r\n        }\r\n        _;\r\n        if (isTopLevelCall) {\r\n            _initializing = false;\r\n            emit Initialized(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\r\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\r\n     * used to initialize parent contracts.\r\n     *\r\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\r\n     * are added through upgrades and that require initialization.\r\n     *\r\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\r\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\r\n     *\r\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\r\n     * a contract, executing them in the right order is up to the developer or operator.\r\n     *\r\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\r\n     *\r\n     * Emits an {Initialized} event.\r\n     */\r\n    modifier reinitializer(uint8 version) {\r\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\r\n        _initialized = version;\r\n        _initializing = true;\r\n        _;\r\n        _initializing = false;\r\n        emit Initialized(version);\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\r\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\r\n     */\r\n    modifier onlyInitializing() {\r\n        require(_initializing, \"Initializable: contract is not initializing\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\r\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\r\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\r\n     * through proxies.\r\n     *\r\n     * Emits an {Initialized} event the first time it is successfully executed.\r\n     */\r\n    function _disableInitializers() internal virtual {\r\n        require(!_initializing, \"Initializable: contract is initializing\");\r\n        if (_initialized != type(uint8).max) {\r\n            _initialized = type(uint8).max;\r\n            emit Initialized(type(uint8).max);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\r\n     */\r\n    function _getInitializedVersion() internal view returns (uint8) {\r\n        return _initialized;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\r\n     */\r\n    function _isInitializing() internal view returns (bool) {\r\n        return _initializing;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract ContextUpgradeable is Initializable {\r\n    function __Context_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __Context_init_unchained() internal onlyInitializing {\r\n    }\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[50] private __gap;\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    function __Ownable_init() internal onlyInitializing {\r\n        __Ownable_init_unchained();\r\n    }\r\n\r\n    function __Ownable_init_unchained() internal onlyInitializing {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[49] private __gap;\r\n}\r\n\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20Upgradeable {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\n\r\n/// @title An ERC20 contract named METH\r\n/// @author METH Token developer team (info@crystalmeth.xyz)\r\n/// @notice Serves as a dynamic reflection token\r\n/// @dev Inherits multiple OpenZeppelin standards \r\ncontract METH is Initializable, IERC20Upgradeable, OwnableUpgradeable {\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /// array of address which are excluded from rewards\r\n    address[] public _excluded;\r\n\r\n    /// maps an address to an amount owned in tSpace\r\n    mapping(address => uint256) private _tOwned;\r\n    /// maps an address to an amount owned in rSpace\r\n    mapping(address => uint256) private _rOwned;\r\n    \r\n    /**\r\n    /// maps an owner to a spender, and the amount of tokens that the spender is \r\n    /// approved to spend on behalf of the owner. Used in the custom _approve function \r\n    */\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    /// maps addresses to whether they are excluded from Fees/Rewards or not\r\n    mapping(address => bool) private _isExcluded;\r\n\r\n    /// maps addresses to whether they are excluded from the Max Tx or not\r\n    mapping(address => bool) private _isExcludedFromMaxTx;\r\n\r\n    /// fixed value representing MAX which is 2**256-1\r\n    uint256 private _MAX;\r\n\r\n    /// @notice the total fixed supply of METH tokens\r\n    uint256 public _tTotal;\r\n\r\n    /**\r\n    /// rTotal is a calculated value - rTotal = MAX − (MAX mod tTotal)\r\n    /// (Note: value will go down after each buy/sell transaction)  \r\n    */\r\n    uint256 public _rTotal;\r\n\r\n    /// maximum transation amount\r\n    uint256 public maxTxAmount;\r\n\r\n    bool public antiWhale;\r\n\r\n    /////////////////////////////////////////////////////////////\r\n    ////                                                     ////\r\n    ////    Initializer - part of upgradeable ERC20 token    ////\r\n    ////                                                     ////\r\n    /////////////////////////////////////////////////////////////\r\n\r\n    function initialize(\r\n        // bool initialTestingFunctionsAllowed\r\n\r\n        ) initializer external {\r\n\r\n\r\n        /// ownableUpgradeble call __Ownable_init function\r\n        OwnableUpgradeable.__Ownable_init();\r\n\r\n        /// sets token details\r\n        _name = \"METH\";\r\n        _symbol = \"METH\";\r\n        _decimals = 18;\r\n\r\n        /// total token supply is assigned to _tTotal, expressed in wei (10 Billion)\r\n        _tTotal = 10000000000000000000000000000;\r\n\r\n        // /// used for rSpace\r\n        _MAX = ~uint256(0);\r\n\r\n        /// rTotal calculated based on tTotal\r\n        _rTotal = (_MAX - (_MAX % _tTotal));\r\n\r\n        /// adds the rTotal value to owner array mapping which effectively gives owner initial supply\r\n        _rOwned[owner()] = _rTotal;\r\n\r\n         maxTxAmount = _tTotal;\r\n\r\n\r\n        /// exclude These contracts from fees and rewards\r\n        _isExcluded[address(0)] = true;\r\n        _isExcluded[address(0x000000000000000000000000000000000000dEaD)] = true;\r\n        _isExcluded[address(0x0000000000000000000000000000000000000369)] = true;\r\n\r\n        /// exclude These contracts from maxTxAmount\r\n        _isExcluded[address(0)] = true;\r\n        _isExcluded[address(0x000000000000000000000000000000000000dEaD)] = true;\r\n        _isExcluded[address(0x0000000000000000000000000000000000000369)] = true;\r\n\r\n        antiWhale = true;\r\n\r\n        emit Transfer(address(0), owner(), _tTotal);\r\n        \r\n    }\r\n\r\n    ////////    ERC20 Token functions    ////////\r\n\r\n    /// @notice token name\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /// @notice token symbol\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /// @notice token decimals\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /// @notice uses \"override\" to return value from _tTotal (tSpace)\r\n    function totalSupply() public view override (IERC20Upgradeable) returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    /// @notice uses \"override\" - returns tOwned amounts for excluded addresses and rOwned amounts for all others\r\n    function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {\r\n        // if account is excluded, return balance in tSpace\r\n        if (_isExcluded[account]) {\r\n            return _tOwned[account];\r\n        } else {\r\n            // if account is NOT excluded, return balance in rSpace\r\n            return rBalanceOf(account);\r\n        }\r\n    }\r\n\r\n    /// @notice uses \"override\" to call the _transfer function\r\n    function transfer(address recipient, uint256 amount) public override (IERC20Upgradeable) returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /// @notice uses \"override\" and calls the  _transfer and the _approve functions\r\n    function transferFrom(\r\n        address sender, \r\n        address recipient, \r\n        uint256 amount\r\n        ) \r\n        public override (IERC20Upgradeable) returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount);\r\n        return true;\r\n    }\r\n\r\n    /// @notice uses \"override\" and returns the value from the _allowances function\r\n    function allowance(address owner, address spender) public view override (IERC20Upgradeable) returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /// @notice uses \"override\" and returns the custom _approve function\r\n    function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /// @notice uses \"override\" and calls the _approve function\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /// @notice uses \"override\" and calls the _approve function\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] - subtractedValue);\r\n        return true;\r\n    }\r\n\r\n    /////////////////////////////////////////////////////\r\n    ////    METH token-specific custom Functions     ////\r\n    /////////////////////////////////////////////////////\r\n\r\n\r\n    function setAntiWhaleStatus(bool _status) external onlyOwner {\r\n        antiWhale = _status;\r\n    }\r\n\r\n\r\n    /**\r\n    /// @notice checks if address is DEX-related smart contract\r\n    */\r\n    bytes4 private constant SELECTOR = bytes4(keccak256(\"factory()\"));\r\n\r\n    function isRouter(address _address) internal view returns (bool) {\r\n        (bool success, bytes memory data) = _address.staticcall(abi.encodeWithSelector(SELECTOR));\r\n        return success && data.length > 0;\r\n    }\r\n\r\n    /**\r\n    /// @notice as address as being excluded from Max Tx (usually DEX)\r\n    /// IMPORTANT: once an address is marked excluded it becomes PERMANENTLY excluded\r\n    */\r\n    function excludeFromMaxTx(address account) private {\r\n        require(!_isExcludedFromMaxTx[account], \"Account is already excluded\");\r\n        _isExcludedFromMaxTx[account] = true;\r\n    }\r\n\r\n    /**\r\n    /// @notice marks an address as being excluded from rewards (usually DEX)\r\n    /// and then adds the address the excluded address array\r\n    /// IMPORTANT: once an address is marked excluded it becomes PERMANENTLY excluded\r\n    */\r\n    function excludeAddress(address account) private {\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n\r\n        /// if address is not a null address..\r\n        if (_rOwned[account] > 0) {\r\n            /// then set tOwned value for account to be value based on \r\n            /// caling the rBalanceOf() function\r\n            _tOwned[account] = rBalanceOf(account);\r\n        }\r\n\r\n        /// also set address as excluded\r\n        _isExcluded[account] = true;\r\n        /// also add address to the array of excluded addresses\r\n        _excluded.push(account);\r\n    }\r\n\r\n    /**\r\n    /// @notice Used by the standard ERC20 \"balanceOf()\" function\r\n    /// returns the rAmount divided by the current rate value. \r\n    */\r\n    function rBalanceOf(address account) public view returns (uint256) {\r\n        uint256 rOwned = _rOwned[account];\r\n        \r\n        /// first check that rOwned balance is less than the rTotal\r\n        require(rOwned <= _rTotal, \"Amount must be less than total reflections\");\r\n        /// set the currentRate value from the _getRate function\r\n        uint256 currentRate = _getRate();\r\n        if (rOwned == 0) {\r\n            return 0;\r\n        } else {\r\n            /// displays the rOwned amount expressed in tSpace\r\n            return rOwned / currentRate;\r\n        }\r\n    }\r\n\r\n\r\n    /// @notice function used by the getValues function\r\n    function _getRate() public view returns (uint256) {\r\n        /// retrieve values from _getCurrentSupply function\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        /// rsupply divided by tsupply\r\n        return rSupply / tSupply;\r\n    }\r\n\r\n    /// @notice used by the _getRate function to return two values: rSupply and tSupply\r\n    function _getCurrentSupply() public view returns (uint256, uint256) {\r\n        /// firstly set the values to _rTotal and _tTotal\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n\r\n        /// loop for each excluded address:          \r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            /// set rSupply to be rSupply minus excluded _rOwned value        \r\n            rSupply = rSupply - _rOwned[_excluded[i]];\r\n            /// set tSupply to be tSupply minus excluded _tOwned value    \r\n            tSupply = tSupply - _tOwned[_excluded[i]];\r\n        }\r\n\r\n        return (rSupply, tSupply);\r\n    }\r\n\r\n    /// @notice CUSTOM approve function to override ERC20 approve function\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) private {\r\n\r\n        /// check that owner and spender are not 0 addresses\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        /// adds the amount to the owner->spender _allowances mapping\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n\r\n    bool private mutex = false;\r\n\r\n    /// @notice CUSTOM transfer function to override ERC20 transfer function\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n\r\n        // re-entrancy protection\r\n        require(mutex == false);\r\n        mutex = true;\r\n\r\n        /// checks all inputs are greater than 0\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n\r\n        /// checks if the \"from\" address or the \"to\" address is a V2 Router\r\n        /// If it is, and it's not already in the  _isExcluded and _isExcludedFromMaxTx arrays,\r\n        /// then it should be added.\r\n\r\n        if (\r\n            isRouter(from) == true && \r\n            !_isExcludedFromMaxTx[from] &&\r\n            !_isExcluded[from]\r\n            ) {\r\n                excludeFromMaxTx(from);\r\n                excludeAddress(from);\r\n        }\r\n\r\n        if (\r\n            isRouter(to) == true && \r\n            !_isExcludedFromMaxTx[to] &&\r\n            !_isExcluded[to]\r\n            ) {\r\n                excludeFromMaxTx(to);\r\n                excludeAddress(to);\r\n        }\r\n\r\n        /// checks if contract owner is either the \"from\" or the \"to\" address\r\n        if (from != owner() && to != owner()) {\r\n            /**\r\n            /// assuming neither addresses are owner, \r\n            /// then if the from AND to addresses are NOT excluded from MAX Tx\r\n            */\r\n            if (!_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to]) {\r\n                /// check amount is less than maxTxAmount\r\n                require(amount <= maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\");\r\n            }\r\n        }\r\n\r\n        /// checks if from AND to addresses are NOT owner\r\n        if (from != owner() && to != owner()) {\r\n            /**\r\n            /// assuming neither addresses are owner...\r\n            /// then if the from and to addresses are not excluded\r\n            */\r\n            if (!_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to]) {\r\n                /// check amount is less than maxTxAmount\r\n                require(amount <= maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\");\r\n            }\r\n        }\r\n\r\n        /**\r\n        /// transfer amount, by calling the _tokenTransfer function. It will also pass in takeFee boolean\r\n        /// (part of custom \"_transfer\" function)\r\n        */    \r\n        _tokenTransfer(from, to, amount);\r\n\r\n        mutex = false;\r\n    }\r\n\r\n\r\n    /// @notice CUSTOM token transfer function called by _transfer()\r\n    function _tokenTransfer(address sender, address recipient, uint256 amount) private {\r\n\r\n        /// SENDER EXCLUDED ADDRESS - (Token buy)\r\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\r\n             _transferFromExcluded(sender, recipient, amount);\r\n\r\n\r\n        ///////////////////////////////////////////////////////////////////\r\n        /// RECEIVER EXCLUDED ADDRESS - (Token sell)\r\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferToExcluded(sender, recipient, amount);\r\n        ///////////////////////////////////////////////////////////////////\r\n\r\n\r\n        /// BOTH SENDER AND RECEIVER ARE EXCLUDED ADDRESSES\r\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\r\n             _transferBothExcluded(sender, recipient, amount);\r\n\r\n\r\n        /// STANDARD TRANSFER  (Wallet-to-Wallet)\r\n        } else {\r\n            _transferStandard(sender, recipient, amount);\r\n        }\r\n    }\r\n\r\n\r\n    /// @notice struct used for transfer functions\r\n    struct TransferData {\r\n        uint256 tAmountSent;\r\n        uint256 rAmountSent;\r\n        uint256 totalBuyTaxBps;\r\n        uint256 totalSellTaxBps;\r\n        uint256 tBuyFeeTotal;\r\n        uint256 rBuyFeeTotal;\r\n        uint256 tSellFeeTotal;\r\n        uint256 rSellFeeTotal;\r\n        uint256 reflectedAmount;\r\n    }\r\n\r\n    event TransferToExcluded(uint256 amountSent, uint256 amountReceived);\r\n\r\n    /// @notice RECIPIENT excluded (usually a token sell)\r\n    function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        TransferData memory data;\r\n\r\n        // Permanent - require that seller can only ever sell a maximum of 10% of their balance in a single transaction\r\n        require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\");\r\n\r\n\r\n        // amount sent from excluded address\r\n        data.tAmountSent = tAmount;\r\n        data.rAmountSent = tAmount * _getRate();\r\n\r\n        data.totalSellTaxBps = 0;\r\n\r\n        // TOTAL fee as token amount expressed in wei\r\n        data.tSellFeeTotal = (tAmount * data.totalSellTaxBps) / 10000;\r\n        data.rSellFeeTotal = data.tSellFeeTotal * _getRate();\r\n\r\n        // fee amount available for reflection, expressed in rSpace\r\n        if (data.rSellFeeTotal > 0 ) {\r\n            data.reflectedAmount = data.rSellFeeTotal;\r\n        }\r\n\r\n\r\n        // Now distribute fees and amounts //\r\n\r\n        /// rOwned values reduced for the SENDER by the FULL amount\r\n        _rOwned[sender] -= data.rAmountSent;\r\n\r\n        /// tOwned and rOwned value updated for the recipient (non-excluded address) increased by the amount minus the fee\r\n        _tOwned[recipient] += (data.tAmountSent - data.tSellFeeTotal);\r\n        _rOwned[recipient] += (data.rAmountSent - data.rSellFeeTotal);\r\n\r\n        // now reflect the remainder to token holders by subtracting from rTotal\r\n        _rTotal -= data.reflectedAmount;\r\n\r\n        // emit Transfer(sender, recipient, tAmountSent);\r\n        emit Transfer(sender, recipient, (data.tAmountSent - data.tSellFeeTotal));\r\n\r\n        emit TransferToExcluded(\r\n            data.tAmountSent,\r\n            (data.tAmountSent - data.tSellFeeTotal)\r\n            );\r\n    }\r\n\r\n    event TransferFromExcluded(uint256 amountSent, uint256 amountReceived);\r\n\r\n    /// @notice SENDER excluded (usually a token buy)\r\n    function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        TransferData memory data;\r\n\r\n        // temporary antiwhale measure during initial launch\r\n        if(antiWhale == true) {\r\n            require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\");\r\n        }\r\n\r\n        // amount sent from excluded address\r\n        data.tAmountSent = tAmount;\r\n        data.rAmountSent = tAmount * _getRate();\r\n\r\n        // retrieve all values that will be relevant \r\n        data.totalBuyTaxBps = 0;\r\n\r\n        // TOTAL fee as token amount expressed in wei\r\n        data.tBuyFeeTotal = (tAmount * data.totalBuyTaxBps) / 10000;\r\n        data.rBuyFeeTotal = data.tBuyFeeTotal * _getRate();\r\n\r\n        // fee amount available for reflection, expressed in rSpace\r\n        if (\r\n            data.rBuyFeeTotal > 0) {\r\n            data.reflectedAmount = data.rBuyFeeTotal;\r\n        }\r\n\r\n        // Now distribute fees and amounts //\r\n\r\n        /// both tOwned AND rOwned values reduced for the SENDER by the FULL amount\r\n        _tOwned[sender] -= data.tAmountSent;\r\n        _rOwned[sender] -= data.rAmountSent;\r\n\r\n        /// rOwned value updated for the recipient (non-excluded address) increased by the amount minus the fee\r\n        _rOwned[recipient] += (data.rAmountSent - data.rBuyFeeTotal);\r\n\r\n        // now reflect the remainder to token holders by subtracting from rTotal\r\n        _rTotal -= data.reflectedAmount;\r\n\r\n        // emit Transfer(sender, recipient, tAmountSent);\r\n        emit Transfer(sender, recipient, (data.tAmountSent - data.tBuyFeeTotal));\r\n        \r\n        emit TransferFromExcluded(\r\n            data.tAmountSent,\r\n            (data.tAmountSent - data.tBuyFeeTotal)\r\n            );\r\n    }\r\n\r\n    event TransferBothExcluded(uint256 amountSent, uint256 amountReceived);\r\n\r\n\r\n\r\n    /// @notice both excluded (token transfer from DEX to DEX) - no fees applied\r\n    function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        TransferData memory data;\r\n        // retrieve all values that will be relevant \r\n\r\n        // amount sent from excluded address\r\n        data.tAmountSent = tAmount;\r\n        data.rAmountSent = tAmount * _getRate();\r\n\r\n        /// both tOwned AND rOwned values reduced for the SENDER by the FULL amount\r\n        _tOwned[sender] -= data.tAmountSent;\r\n        _rOwned[sender] -= data.rAmountSent;\r\n\r\n        /// both tOwned AND rOwned values are updated for recipient\r\n        _tOwned[recipient] += data.tAmountSent;\r\n        _rOwned[recipient] += data.rAmountSent;\r\n\r\n        // emit Transfer(sender, recipient, tAmountSent);\r\n        emit Transfer(sender, recipient, data.tAmountSent);\r\n\r\n        emit TransferBothExcluded(\r\n            data.tAmountSent,\r\n            data.tAmountSent // same as received amount\r\n            );\r\n    }\r\n\r\n    event TransferStandard(uint256 amountSent, uint256 amountReceived);\r\n\r\n\r\n\r\n    /// @notice standard transfer (wallet to wallet)\r\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\r\n        TransferData memory data;\r\n        // retrieve all values that will be relevant \r\n\r\n        // you can never leave METH!\r\n        require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\");\r\n\r\n        // amount sent from excluded address\r\n        data.tAmountSent = tAmount;\r\n        data.rAmountSent = tAmount * _getRate();      \r\n\r\n        // distribution //\r\n\r\n        /// rOwned value reduced for the SENDER by the FULL amount\r\n        _rOwned[sender] -= data.rAmountSent;\r\n\r\n        // rOwned value increased for the RECEIVER, by rAmount minus the grill fee\r\n        _rOwned[recipient] += data.rAmountSent;\r\n\r\n        emit Transfer(sender, recipient, (data.tAmountSent));\r\n\r\n        emit TransferStandard(\r\n            data.tAmountSent,\r\n            data.tAmountSent\r\n            );\r\n    }\r\n\r\n\r\n    /// @notice checks if address is excluded from Max Tx\r\n    function isExcludedFromMaxTx(address account) public view returns (bool) {\r\n        return _isExcludedFromMaxTx[account];\r\n    }\r\n\r\n    /// @notice checks if address is excluded from reflection rewards\r\n    function isExcluded(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n    \r\n/////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // Reflection-related values for potential API\r\n\r\n    /// @notice verify account balance in both tSpace and rSpace\r\n    function viewTBalanceRBalance(address _address) public view returns (uint256, uint256) {\r\n        uint256 tBalance = _tOwned[_address];\r\n        uint256 rBalance = _rOwned[_address];\r\n        return(tBalance, rBalance);\r\n    }\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"METH.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"METH.sol\":3372:12787  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"METH.sol\":3372:12787  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c420681a7f98036bcb6c31a21fb555c1b4c186191550974ea2974a41774ab78e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c420681a7f98036bcb6c31a21fb555c1b4c186191550974ea2974a41774ab78e64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 KECCAK256 PUSH9 0x1A7F98036BCB6C31A2 0x1F 0xB5 SSTORE 0xC1 0xB4 0xC1 DUP7 NOT ISZERO POP SWAP8 0x4E LOG2 SWAP8 BLOBBASEFEE COINBASE PUSH24 0x4AB78E64736F6C6343000818003300000000000000000000 ",
							"sourceMap": "3372:9415:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3372:9415:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c420681a7f98036bcb6c31a21fb555c1b4c186191550974ea2974a41774ab78e64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 KECCAK256 PUSH9 0x1A7F98036BCB6C31A2 0x1F 0xB5 SSTORE 0xC1 0xB4 0xC1 DUP7 NOT ISZERO POP SWAP8 0x4E LOG2 SWAP8 BLOBBASEFEE COINBASE PUSH24 0x4AB78E64736F6C6343000818003300000000000000000000 ",
							"sourceMap": "3372:9415:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3372,
									"end": 12787,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c420681a7f98036bcb6c31a21fb555c1b4c186191550974ea2974a41774ab78e64736f6c63430008180033",
									".code": [
										{
											"begin": 3372,
											"end": 12787,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3372,
											"end": 12787,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3372,
											"end": 12787,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3372,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3372,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3372,
											"end": 12787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3372,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3372,
											"end": 12787,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"METH.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"METH.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"METH.sol\":{\"keccak256\":\"0x145fff2dc9a0871b0d8e064d78d75040046dbfca82c524eca89f4dc460ed6784\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4433108f12274129d535f2be8e67cf362904d901c12ba074763c350461834140\",\"dweb:/ipfs/QmXjUi2131MKvGYBmayqTNwuXcAXAuMpcF6zxEBcfzYkTu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"METH.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"METH.sol\":{\"keccak256\":\"0x145fff2dc9a0871b0d8e064d78d75040046dbfca82c524eca89f4dc460ed6784\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4433108f12274129d535f2be8e67cf362904d901c12ba074763c350461834140\",\"dweb:/ipfs/QmXjUi2131MKvGYBmayqTNwuXcAXAuMpcF6zxEBcfzYkTu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 333,
								"contract": "METH.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 336,
								"contract": "METH.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 541,
								"contract": "METH.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"METH.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"METH.sol\":{\"keccak256\":\"0x145fff2dc9a0871b0d8e064d78d75040046dbfca82c524eca89f4dc460ed6784\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4433108f12274129d535f2be8e67cf362904d901c12ba074763c350461834140\",\"dweb:/ipfs/QmXjUi2131MKvGYBmayqTNwuXcAXAuMpcF6zxEBcfzYkTu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"METH.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"METH.sol\":{\"keccak256\":\"0x145fff2dc9a0871b0d8e064d78d75040046dbfca82c524eca89f4dc460ed6784\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4433108f12274129d535f2be8e67cf362904d901c12ba074763c350461834140\",\"dweb:/ipfs/QmXjUi2131MKvGYBmayqTNwuXcAXAuMpcF6zxEBcfzYkTu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 333,
								"contract": "METH.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 336,
								"contract": "METH.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"METH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSent",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "TransferBothExcluded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSent",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "TransferFromExcluded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSent",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "TransferStandard",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSent",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"name": "TransferToExcluded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_excluded",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_getCurrentSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_getRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_rTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_tTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antiWhale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcluded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromMaxTx",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "rBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "setAntiWhaleStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "viewTBalanceRBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "METH Token developer team (info@crystalmeth.xyz)",
						"details": "Inherits multiple OpenZeppelin standards ",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "An ERC20 contract named METH",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"METH.sol\":26674:48108  contract METH is Initializable, IERC20Upgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n    /* \"METH.sol\":37095:37121  bool private mutex = false */\n  0x72\n  dup1\n  sload\n  not(0xff00)\n  and\n  swap1\n  sstore\n    /* \"METH.sol\":26674:48108  contract METH is Initializable, IERC20Upgradeable, OwnableUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"METH.sol\":26674:48108  contract METH is Initializable, IERC20Upgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80da2287\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x97a9d560\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xaf465a27\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xaf465a27\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xcba0e996\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x97a9d560\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x8c0b5e22\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8c0b5e22\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x94e10784\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x80da2287\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x83f24c09\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x45e0b9d4\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x5319e78f\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x5319e78f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x658c27a9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x45e0b9d4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4d09deb3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4dacf3f5\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"METH.sol\":30000:30083  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"METH.sol\":32052:32233  function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_4:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1272:1286   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1265:1287   */\n      iszero\n        /* \"#utility.yul\":1247:1288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1235:1237   */\n      0x20\n        /* \"#utility.yul\":1220:1238   */\n      add\n        /* \"METH.sol\":32052:32233  function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n      tag_38\n        /* \"#utility.yul\":1107:1294   */\n      jump\n        /* \"METH.sol\":30410:30525  function totalSupply() public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_5:\n        /* \"METH.sol\":30510:30517  _tTotal */\n      sload(0x6f)\n        /* \"METH.sol\":30410:30525  function totalSupply() public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH.sol\":30410:30525  function totalSupply() public view override (IERC20Upgradeable) returns (uint256) {... */\n      tag_38\n        /* \"#utility.yul\":1299:1476   */\n      jump\n        /* \"METH.sol\":31378:31714  function transferFrom(... */\n    tag_6:\n      tag_40\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"METH.sol\":30248:30331  function decimals() public view returns (uint8) {... */\n    tag_7:\n        /* \"METH.sol\":30314:30323  _decimals */\n      sload(0x67)\n        /* \"METH.sol\":30248:30331  function decimals() public view returns (uint8) {... */\n      mload(0x40)\n        /* \"METH.sol\":30314:30323  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1956:1992   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1944:1946   */\n      0x20\n        /* \"#utility.yul\":1929:1947   */\n      add\n        /* \"METH.sol\":30248:30331  function decimals() public view returns (uint8) {... */\n      tag_38\n        /* \"#utility.yul\":1814:1998   */\n      jump\n        /* \"METH.sol\":32306:32521  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_40\n      tag_60\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"METH.sol\":28014:28036  uint256 public _rTotal */\n    tag_9:\n      tag_46\n      sload(0x70)\n      dup2\n      jump\n        /* \"METH.sol\":26899:26925  address[] public _excluded */\n    tag_10:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2352:2384   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2334:2385   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2322:2324   */\n      0x20\n        /* \"#utility.yul\":2307:2325   */\n      add\n        /* \"METH.sol\":26899:26925  address[] public _excluded */\n      tag_38\n        /* \"#utility.yul\":2188:2391   */\n      jump\n        /* \"METH.sol\":28115:28136  bool public antiWhale */\n    tag_11:\n      sload(0x72)\n      tag_40\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"METH.sol\":34855:35431  function rBalanceOf(address account) public view returns (uint256) {... */\n    tag_12:\n      tag_46\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"METH.sol\":47214:47342  function isExcludedFromMaxTx(address account) public view returns (bool) {... */\n    tag_13:\n      tag_40\n      tag_81\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":47305:47334  _isExcludedFromMaxTx[account] */\n      and\n        /* \"METH.sol\":47281:47285  bool */\n      0x00\n        /* \"METH.sol\":47305:47334  _isExcludedFromMaxTx[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":47305:47325  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":47305:47334  _isExcludedFromMaxTx[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"METH.sol\":47214:47342  function isExcludedFromMaxTx(address account) public view returns (bool) {... */\n      jump\n        /* \"METH.sol\":30648:31026  function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_14:\n      tag_46\n      tag_85\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"METH.sol\":22656:22759  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"METH.sol\":47768:47994  function viewTBalanceRBalance(address _address) public view returns (uint256, uint256) {... */\n    tag_16:\n      tag_90\n      tag_91\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":47885:47902  _tOwned[_address] */\n      and\n        /* \"METH.sol\":47837:47844  uint256 */\n      0x00\n        /* \"METH.sol\":47885:47902  _tOwned[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":47885:47892  _tOwned */\n      0x69\n        /* \"METH.sol\":47885:47902  _tOwned[_address] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"METH.sol\":47932:47939  _rOwned */\n      0x6a\n        /* \"METH.sol\":47932:47949  _rOwned[_address] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"METH.sol\":47885:47902  _tOwned[_address] */\n      swap1\n      swap2\n        /* \"METH.sol\":47768:47994  function viewTBalanceRBalance(address _address) public view returns (uint256, uint256) {... */\n      jump\n    tag_90:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2761:2786   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2802:2820   */\n      dup4\n      add\n        /* \"#utility.yul\":2795:2829   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"METH.sol\":47768:47994  function viewTBalanceRBalance(address _address) public view returns (uint256, uint256) {... */\n      tag_38\n        /* \"#utility.yul\":2587:2835   */\n      jump\n        /* \"METH.sol\":28482:29911  function initialize(... */\n    tag_17:\n      tag_88\n      tag_96\n      jump\t// in\n        /* \"METH.sol\":33008:33107  function setAntiWhaleStatus(bool _status) external onlyOwner {... */\n    tag_18:\n      tag_88\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"METH.sol\":28080:28106  uint256 public maxTxAmount */\n    tag_19:\n      tag_46\n      sload(0x71)\n      dup2\n      jump\n        /* \"METH.sol\":22015:22102  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"METH.sol\":22088:22094  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"METH.sol\":22015:22102  function owner() public view virtual returns (address) {... */\n      jump(tag_66)\n        /* \"METH.sol\":35498:35759  function _getRate() public view returns (uint256) {... */\n    tag_21:\n      tag_46\n      tag_108\n      jump\t// in\n        /* \"METH.sol\":30121:30208  function symbol() public view returns (string memory) {... */\n    tag_22:\n      tag_36\n      tag_111\n      jump\t// in\n        /* \"METH.sol\":35856:36495  function _getCurrentSupply() public view returns (uint256, uint256) {... */\n    tag_23:\n      tag_90\n      tag_114\n      jump\t// in\n        /* \"METH.sol\":32594:32819  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_24:\n      tag_40\n      tag_117\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"METH.sol\":31098:31285  function transfer(address recipient, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_25:\n      tag_40\n      tag_121\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"METH.sol\":27822:27844  uint256 public _tTotal */\n    tag_26:\n      tag_46\n      sload(0x6f)\n      dup2\n      jump\n        /* \"METH.sol\":47421:47531  function isExcluded(address account) public view returns (bool) {... */\n    tag_27:\n      tag_40\n      tag_128\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":47503:47523  _isExcluded[account] */\n      and\n        /* \"METH.sol\":47479:47483  bool */\n      0x00\n        /* \"METH.sol\":47503:47523  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":47503:47514  _isExcluded */\n      0x6c\n        /* \"METH.sol\":47503:47523  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"METH.sol\":47421:47531  function isExcluded(address account) public view returns (bool) {... */\n      jump\n        /* \"METH.sol\":31807:31970  function allowance(address owner, address spender) public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_28:\n      tag_46\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":31935:31953  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"METH.sol\":31908:31915  uint256 */\n      0x00\n        /* \"METH.sol\":31935:31953  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":31935:31946  _allowances */\n      0x6b\n        /* \"METH.sol\":31935:31953  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"METH.sol\":31935:31962  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"METH.sol\":31807:31970  function allowance(address owner, address spender) public view override (IERC20Upgradeable) returns (uint256) {... */\n      jump\n        /* \"METH.sol\":22914:23115  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_88\n      tag_137\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n        /* \"METH.sol\":30000:30083  function name() public view returns (string memory) {... */\n    tag_37:\n        /* \"METH.sol\":30037:30050  string memory */\n      0x60\n        /* \"METH.sol\":30070:30075  _name */\n      0x65\n        /* \"METH.sol\":30063:30075  return _name */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_142\n      swap1\n      tag_141\n      jump\t// in\n    tag_142:\n      dup1\n      iszero\n      tag_143\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_144\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_143)\n    tag_144:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"METH.sol\":30000:30083  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"METH.sol\":32052:32233  function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_43:\n        /* \"METH.sol\":32147:32151  bool */\n      0x00\n        /* \"METH.sol\":32164:32203  _approve(_msgSender(), spender, amount) */\n      tag_147\n        /* \"METH.sol\":20205:20215  msg.sender */\n      caller\n        /* \"METH.sol\":32187:32194  spender */\n      dup5\n        /* \"METH.sol\":32196:32202  amount */\n      dup5\n        /* \"METH.sol\":32164:32172  _approve */\n      tag_150\n        /* \"METH.sol\":32164:32203  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_147:\n      pop\n        /* \"METH.sol\":32221:32225  true */\n      0x01\n        /* \"METH.sol\":32052:32233  function approve(address spender, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_146:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"METH.sol\":31378:31714  function transferFrom(... */\n    tag_53:\n        /* \"METH.sol\":31546:31550  bool */\n      0x00\n        /* \"METH.sol\":31563:31599  _transfer(sender, recipient, amount) */\n      tag_153\n        /* \"METH.sol\":31573:31579  sender */\n      dup5\n        /* \"METH.sol\":31581:31590  recipient */\n      dup5\n        /* \"METH.sol\":31592:31598  amount */\n      dup5\n        /* \"METH.sol\":31563:31572  _transfer */\n      tag_154\n        /* \"METH.sol\":31563:31599  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":31641:31660  _allowances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":31641:31652  _allowances */\n      0x6b\n        /* \"METH.sol\":31641:31660  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"METH.sol\":20205:20215  msg.sender */\n      caller\n        /* \"METH.sol\":31641:31674  _allowances[sender][_msgSender()] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"METH.sol\":31610:31684  _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount) */\n      tag_155\n      swap2\n        /* \"METH.sol\":31619:31625  sender */\n      dup7\n      swap2\n        /* \"METH.sol\":31641:31683  _allowances[sender][_msgSender()] - amount */\n      tag_158\n      swap1\n        /* \"METH.sol\":31677:31683  amount */\n      dup7\n      swap1\n        /* \"METH.sol\":31641:31683  _allowances[sender][_msgSender()] - amount */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"METH.sol\":31610:31618  _approve */\n      tag_150\n        /* \"METH.sol\":31610:31684  _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"METH.sol\":31702:31706  true */\n      0x01\n        /* \"METH.sol\":31378:31714  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH.sol\":32306:32521  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_61:\n        /* \"METH.sol\":20205:20215  msg.sender */\n      caller\n        /* \"METH.sol\":32394:32398  bool */\n      0x00\n        /* \"METH.sol\":32443:32468  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"METH.sol\":32443:32454  _allowances */\n      0x6b\n        /* \"METH.sol\":32443:32468  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":32443:32477  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"METH.sol\":32394:32398  bool */\n      swap1\n      swap2\n        /* \"METH.sol\":32411:32491  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_147\n      swap2\n        /* \"METH.sol\":32434:32441  spender */\n      dup6\n      swap1\n        /* \"METH.sol\":32443:32490  _allowances[_msgSender()][spender] + addedValue */\n      tag_158\n      swap1\n        /* \"METH.sol\":32480:32490  addedValue */\n      dup7\n      swap1\n        /* \"METH.sol\":32443:32490  _allowances[_msgSender()][spender] + addedValue */\n      tag_166\n      jump\t// in\n        /* \"METH.sol\":26899:26925  address[] public _excluded */\n    tag_69:\n      0x68\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"METH.sol\":34855:35431  function rBalanceOf(address account) public view returns (uint256) {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":34950:34966  _rOwned[account] */\n      dup2\n      and\n        /* \"METH.sol\":34913:34920  uint256 */\n      0x00\n        /* \"METH.sol\":34950:34966  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":34950:34957  _rOwned */\n      0x6a\n        /* \"METH.sol\":34950:34966  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"METH.sol\":35074:35081  _rTotal */\n      sload(0x70)\n        /* \"METH.sol\":35064:35081  rOwned <= _rTotal */\n      dup2\n      gt\n      iszero\n        /* \"METH.sol\":35056:35128  require(rOwned <= _rTotal, \"Amount must be less than total reflections\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4365:4367   */\n      0x20\n        /* \"METH.sol\":35056:35128  require(rOwned <= _rTotal, \"Amount must be less than total reflections\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4347:4368   */\n      mstore\n        /* \"#utility.yul\":4404:4406   */\n      0x2a\n        /* \"#utility.yul\":4384:4402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4377:4407   */\n      mstore\n        /* \"#utility.yul\":4443:4477   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":4423:4441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4416:4478   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":4494:4512   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4487:4527   */\n      mstore\n        /* \"#utility.yul\":4544:4563   */\n      0x84\n      add\n        /* \"METH.sol\":35056:35128  require(rOwned <= _rTotal, \"Amount must be less than total reflections\") */\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"METH.sol\":35205:35224  uint256 currentRate */\n      0x00\n        /* \"METH.sol\":35227:35237  _getRate() */\n      tag_173\n        /* \"METH.sol\":35227:35235  _getRate */\n      tag_108\n        /* \"METH.sol\":35227:35237  _getRate() */\n      jump\t// in\n    tag_173:\n        /* \"METH.sol\":35205:35237  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"METH.sol\":35252:35258  rOwned */\n      dup2\n        /* \"METH.sol\":35262:35263  0 */\n      0x00\n        /* \"METH.sol\":35252:35263  rOwned == 0 */\n      sub\n        /* \"METH.sol\":35248:35424  if (rOwned == 0) {... */\n      tag_174\n      jumpi\n      pop\n        /* \"METH.sol\":35287:35288  0 */\n      0x00\n      swap4\n        /* \"METH.sol\":34855:35431  function rBalanceOf(address account) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH.sol\":35248:35424  if (rOwned == 0) {... */\n    tag_174:\n        /* \"METH.sol\":35392:35412  rOwned / currentRate */\n      tag_176\n        /* \"METH.sol\":35401:35412  currentRate */\n      dup2\n        /* \"METH.sol\":35392:35398  rOwned */\n      dup4\n        /* \"METH.sol\":35392:35412  rOwned / currentRate */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"METH.sol\":35385:35412  return rOwned / currentRate */\n      swap5\n        /* \"METH.sol\":34855:35431  function rBalanceOf(address account) public view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH.sol\":30648:31026  function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":30819:30839  _isExcluded[account] */\n      dup2\n      and\n        /* \"METH.sol\":30734:30741  uint256 */\n      0x00\n        /* \"METH.sol\":30819:30839  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":30819:30830  _isExcluded */\n      0x6c\n        /* \"METH.sol\":30819:30839  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":30815:31019  if (_isExcluded[account]) {... */\n      iszero\n      tag_180\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":30863:30879  _tOwned[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":30863:30870  _tOwned */\n      0x69\n        /* \"METH.sol\":30863:30879  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"METH.sol\":30648:31026  function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {... */\n      jump\t// out\n        /* \"METH.sol\":30815:31019  if (_isExcluded[account]) {... */\n    tag_180:\n        /* \"METH.sol\":30988:31007  rBalanceOf(account) */\n      tag_146\n        /* \"METH.sol\":30999:31006  account */\n      dup3\n        /* \"METH.sol\":30988:30998  rBalanceOf */\n      tag_78\n        /* \"METH.sol\":30988:31007  rBalanceOf(account) */\n      jump\t// in\n        /* \"METH.sol\":30815:31019  if (_isExcluded[account]) {... */\n    tag_181:\n        /* \"METH.sol\":30648:31026  function balanceOf(address account) public view override (IERC20Upgradeable) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"METH.sol\":22656:22759  function renounceOwnership() public virtual onlyOwner {... */\n    tag_89:\n        /* \"METH.sol\":21901:21914  _checkOwner() */\n      tag_184\n        /* \"METH.sol\":21901:21912  _checkOwner */\n      tag_185\n        /* \"METH.sol\":21901:21914  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"METH.sol\":22721:22751  _transferOwnership(address(0)) */\n      tag_187\n        /* \"METH.sol\":22748:22749  0 */\n      0x00\n        /* \"METH.sol\":22721:22739  _transferOwnership */\n      tag_188\n        /* \"METH.sol\":22721:22751  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_187:\n        /* \"METH.sol\":22656:22759  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"METH.sol\":28482:29911  function initialize(... */\n    tag_96:\n        /* \"METH.sol\":15965:15984  bool isTopLevelCall */\n      0x00\n        /* \"METH.sol\":15988:16001  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"METH.sol\":15987:16001  !_initializing */\n      iszero\n      dup1\n        /* \"METH.sol\":16035:16069  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_191\n      jumpi\n      pop\n        /* \"METH.sol\":16053:16065  _initialized */\n      sload(0x00)\n        /* \"METH.sol\":16068:16069  1 */\n      0x01\n        /* \"METH.sol\":16053:16065  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"METH.sol\":16053:16069  _initialized < 1 */\n      lt\n        /* \"METH.sol\":16035:16069  isTopLevelCall && _initialized < 1 */\n    tag_191:\n        /* \"METH.sol\":16034:16142  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_195\n      jumpi\n      pop\n        /* \"METH.sol\":16114:16118  this */\n      address\n        /* \"METH.sol\":4927:4946  account.code.length */\n      extcodesize\n        /* \"METH.sol\":4927:4950  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"METH.sol\":16075:16141  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_195\n      jumpi\n      pop\n        /* \"METH.sol\":16124:16136  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"METH.sol\":16124:16141  _initialized == 1 */\n      eq\n        /* \"METH.sol\":16075:16141  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_195:\n        /* \"METH.sol\":16012:16216  require(... */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5033:5035   */\n      0x20\n        /* \"METH.sol\":16012:16216  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5015:5036   */\n      mstore\n        /* \"#utility.yul\":5072:5074   */\n      0x2e\n        /* \"#utility.yul\":5052:5070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5045:5075   */\n      mstore\n        /* \"#utility.yul\":5111:5145   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":5091:5109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5084:5146   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5162:5180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5155:5199   */\n      mstore\n        /* \"#utility.yul\":5216:5235   */\n      0x84\n      add\n        /* \"METH.sol\":16012:16216  require(... */\n      tag_171\n        /* \"#utility.yul\":4831:5241   */\n      jump\n        /* \"METH.sol\":16012:16216  require(... */\n    tag_196:\n        /* \"METH.sol\":16227:16239  _initialized */\n      0x00\n        /* \"METH.sol\":16227:16243  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"METH.sol\":16242:16243  1 */\n      0x01\n        /* \"METH.sol\":16227:16243  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":16254:16321  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_199\n      jumpi\n        /* \"METH.sol\":16289:16302  _initializing */\n      0x00\n        /* \"METH.sol\":16289:16309  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":16254:16321  if (isTopLevelCall) {... */\n    tag_199:\n        /* \"METH.sol\":28660:28695  OwnableUpgradeable.__Ownable_init() */\n      tag_201\n        /* \"METH.sol\":28660:28693  OwnableUpgradeable.__Ownable_init */\n      tag_202\n        /* \"METH.sol\":28660:28695  OwnableUpgradeable.__Ownable_init() */\n      jump\t// in\n    tag_201:\n        /* \"METH.sol\":28740:28754  _name = \"METH\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x04\n      dup2\n      mstore\n      shl(0xe3, 0x09a8aa89)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"METH.sol\":28740:28745  _name */\n      0x65\n      swap1\n        /* \"METH.sol\":28740:28754  _name = \"METH\" */\n      tag_203\n      swap1\n        /* \"METH.sol\":28740:28745  _name */\n      dup3\n        /* \"METH.sol\":28740:28754  _name = \"METH\" */\n      tag_204\n      jump\t// in\n    tag_203:\n      pop\n        /* \"METH.sol\":28765:28781  _symbol = \"METH\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x04\n      dup2\n      mstore\n      shl(0xe3, 0x09a8aa89)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"METH.sol\":28765:28772  _symbol */\n      0x66\n      swap1\n        /* \"METH.sol\":28765:28781  _symbol = \"METH\" */\n      tag_205\n      swap1\n        /* \"METH.sol\":28765:28772  _symbol */\n      dup3\n        /* \"METH.sol\":28765:28781  _symbol = \"METH\" */\n      tag_204\n      jump\t// in\n    tag_205:\n      pop\n        /* \"METH.sol\":28792:28801  _decimals */\n      0x67\n        /* \"METH.sol\":28792:28806  _decimals = 18 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"METH.sol\":28804:28806  18 */\n      0x12\n        /* \"METH.sol\":28792:28806  _decimals = 18 */\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":28915:28944  10000000000000000000000000000 */\n      0x204fce5e3e25026110000000\n        /* \"METH.sol\":28905:28912  _tTotal */\n      0x6f\n        /* \"METH.sol\":28905:28944  _tTotal = 10000000000000000000000000000 */\n      dup2\n      swap1\n      sstore\n      not(0x00)\n        /* \"METH.sol\":28989:28993  _MAX */\n      0x6e\n        /* \"METH.sol\":28989:29007  _MAX = ~uint256(0) */\n      dup2\n      swap1\n      sstore\n        /* \"METH.sol\":29086:29100  _MAX % _tTotal */\n      tag_206\n      swap2\n        /* \"METH.sol\":28915:28944  10000000000000000000000000000 */\n      swap1\n        /* \"METH.sol\":29086:29100  _MAX % _tTotal */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"METH.sol\":29078:29082  _MAX */\n      sload(0x6e)\n        /* \"METH.sol\":29078:29101  _MAX - (_MAX % _tTotal) */\n      tag_208\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_208:\n        /* \"METH.sol\":29067:29074  _rTotal */\n      0x70\n        /* \"METH.sol\":29067:29102  _rTotal = (_MAX - (_MAX % _tTotal)) */\n      dup2\n      swap1\n      sstore\n        /* \"METH.sol\":29218:29225  _rOwned */\n      0x6a\n        /* \"METH.sol\":29218:29234  _rOwned[owner()] */\n      0x00\n        /* \"METH.sol\":29226:29233  owner() */\n      tag_209\n        /* \"METH.sol\":22088:22094  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"METH.sol\":22015:22102  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"METH.sol\":29226:29233  owner() */\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":29218:29234  _rOwned[owner()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"METH.sol\":29218:29244  _rOwned[owner()] = _rTotal */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"METH.sol\":29272:29279  _tTotal */\n      sload(0x6f)\n        /* \"METH.sol\":29258:29269  maxTxAmount */\n      0x71\n        /* \"METH.sol\":29258:29279  maxTxAmount = _tTotal */\n      sstore\n        /* \"METH.sol\":29353:29364  _isExcluded */\n      0x6c\n        /* \"METH.sol\":29353:29376  _isExcluded[address(0)] */\n      swap1\n      mstore\n      0x7febd347df14ea35c529e50fb2dd629d4a6226f5ccc893710fb466f8b83823fc\n        /* \"METH.sol\":29353:29383  _isExcluded[address(0)] = true */\n      dup1\n      sload\n      not(0xff)\n      swap1\n      dup2\n      and\n        /* \"METH.sol\":29379:29383  true */\n      0x01\n        /* \"METH.sol\":29353:29383  _isExcluded[address(0)] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"METH.sol\":29394:29458  _isExcluded[address(0x000000000000000000000000000000000000dEaD)] */\n      0x8c482e007f935c93984ddf7a647e33ef99566883ffae3563aa616dc14d1632f7\n        /* \"METH.sol\":29394:29465  _isExcluded[address(0x000000000000000000000000000000000000dEaD)] = true */\n      dup1\n      sload\n      dup3\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":29476:29540  _isExcluded[address(0x0000000000000000000000000000000000000369)] */\n      0xb6e99d88b536ae7728c4b89ca5a6073cf06fd2059e0aff5b1a4de2c799d9cb96\n        /* \"METH.sol\":29476:29547  _isExcluded[address(0x0000000000000000000000000000000000000369)] = true */\n      dup1\n      sload\n      dup3\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":29496:29538  0x0000000000000000000000000000000000000369 */\n      0x0369\n        /* \"METH.sol\":29737:29801  _isExcluded[address(0x0000000000000000000000000000000000000369)] */\n      swap1\n      swap3\n      mstore\n        /* \"METH.sol\":29821:29830  antiWhale */\n      0x72\n        /* \"METH.sol\":29821:29837  antiWhale = true */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":29876:29883  owner() */\n      tag_210\n        /* \"METH.sol\":22088:22094  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"METH.sol\":22015:22102  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"METH.sol\":29876:29883  owner() */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":29855:29893  Transfer(address(0), owner(), _tTotal) */\n      and\n        /* \"METH.sol\":29872:29873  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":29855:29893  Transfer(address(0), owner(), _tTotal) */\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"METH.sol\":29885:29892  _tTotal */\n      sload(0x6f)\n        /* \"METH.sol\":29855:29893  Transfer(address(0), owner(), _tTotal) */\n      mload(0x40)\n      tag_211\n      swap2\n        /* \"#utility.yul\":1445:1470   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n      swap1\n        /* \"#utility.yul\":1299:1476   */\n      jump\n        /* \"METH.sol\":29855:29893  Transfer(address(0), owner(), _tTotal) */\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH.sol\":16347:16361  isTopLevelCall */\n      dup1\n        /* \"METH.sol\":16343:16445  if (isTopLevelCall) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"METH.sol\":16394:16399  false */\n      0x00\n        /* \"METH.sol\":16378:16399  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"METH.sol\":16419:16433  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":1956:1992   */\n      dup2\n      mstore\n        /* \"METH.sol\":16419:16433  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":1944:1946   */\n      0x20\n        /* \"#utility.yul\":1929:1947   */\n      add\n        /* \"METH.sol\":16419:16433  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"METH.sol\":16343:16445  if (isTopLevelCall) {... */\n    tag_212:\n        /* \"METH.sol\":15954:16452  {... */\n      pop\n        /* \"METH.sol\":28482:29911  function initialize(... */\n      jump\t// out\n        /* \"METH.sol\":33008:33107  function setAntiWhaleStatus(bool _status) external onlyOwner {... */\n    tag_100:\n        /* \"METH.sol\":21901:21914  _checkOwner() */\n      tag_216\n        /* \"METH.sol\":21901:21912  _checkOwner */\n      tag_185\n        /* \"METH.sol\":21901:21914  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"METH.sol\":33080:33089  antiWhale */\n      0x72\n        /* \"METH.sol\":33080:33099  antiWhale = _status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":33008:33107  function setAntiWhaleStatus(bool _status) external onlyOwner {... */\n      jump\t// out\n        /* \"METH.sol\":35498:35759  function _getRate() public view returns (uint256) {... */\n    tag_108:\n        /* \"METH.sol\":35539:35546  uint256 */\n      0x00\n        /* \"METH.sol\":35621:35636  uint256 rSupply */\n      dup1\n        /* \"METH.sol\":35638:35653  uint256 tSupply */\n      0x00\n        /* \"METH.sol\":35657:35676  _getCurrentSupply() */\n      tag_220\n        /* \"METH.sol\":35657:35674  _getCurrentSupply */\n      tag_114\n        /* \"METH.sol\":35657:35676  _getCurrentSupply() */\n      jump\t// in\n    tag_220:\n        /* \"METH.sol\":35620:35676  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"METH.sol\":35734:35751  rSupply / tSupply */\n      tag_221\n        /* \"METH.sol\":35620:35676  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup2\n      dup4\n        /* \"METH.sol\":35734:35751  rSupply / tSupply */\n      tag_177\n      jump\t// in\n    tag_221:\n        /* \"METH.sol\":35727:35751  return rSupply / tSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"METH.sol\":35498:35759  function _getRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"METH.sol\":30121:30208  function symbol() public view returns (string memory) {... */\n    tag_111:\n        /* \"METH.sol\":30160:30173  string memory */\n      0x60\n        /* \"METH.sol\":30193:30200  _symbol */\n      0x66\n        /* \"METH.sol\":30186:30200  return _symbol */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n        /* \"METH.sol\":35856:36495  function _getCurrentSupply() public view returns (uint256, uint256) {... */\n    tag_114:\n        /* \"METH.sol\":36012:36019  _rTotal */\n      sload(0x70)\n        /* \"METH.sol\":36048:36055  _tTotal */\n      sload(0x6f)\n        /* \"METH.sol\":35906:35913  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"METH.sol\":36123:36450  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_229:\n        /* \"METH.sol\":36147:36156  _excluded */\n      0x68\n        /* \"METH.sol\":36147:36163  _excluded.length */\n      sload\n        /* \"METH.sol\":36143:36163  i < _excluded.length */\n      dup2\n      lt\n        /* \"METH.sol\":36123:36450  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"METH.sol\":36285:36292  _rOwned */\n      0x6a\n        /* \"METH.sol\":36285:36306  _rOwned[_excluded[i]] */\n      0x00\n        /* \"METH.sol\":36293:36302  _excluded */\n      0x68\n        /* \"METH.sol\":36303:36304  i */\n      dup4\n        /* \"METH.sol\":36293:36305  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_233\n      tag_234\n      jump\t// in\n    tag_233:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"METH.sol\":36285:36306  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"METH.sol\":36275:36306  rSupply - _rOwned[_excluded[i]] */\n      tag_236\n      swap1\n        /* \"METH.sol\":36275:36282  rSupply */\n      dup5\n        /* \"METH.sol\":36275:36306  rSupply - _rOwned[_excluded[i]] */\n      tag_159\n      jump\t// in\n    tag_236:\n        /* \"METH.sol\":36265:36306  rSupply = rSupply - _rOwned[_excluded[i]] */\n      swap3\n      pop\n        /* \"METH.sol\":36417:36424  _tOwned */\n      0x69\n        /* \"METH.sol\":36417:36438  _tOwned[_excluded[i]] */\n      0x00\n        /* \"METH.sol\":36425:36434  _excluded */\n      0x68\n        /* \"METH.sol\":36435:36436  i */\n      dup4\n        /* \"METH.sol\":36425:36437  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_238\n      tag_234\n      jump\t// in\n    tag_238:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"METH.sol\":36417:36438  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"METH.sol\":36407:36438  tSupply - _tOwned[_excluded[i]] */\n      tag_240\n      swap1\n        /* \"METH.sol\":36407:36414  tSupply */\n      dup4\n        /* \"METH.sol\":36407:36438  tSupply - _tOwned[_excluded[i]] */\n      tag_159\n      jump\t// in\n    tag_240:\n        /* \"METH.sol\":36397:36438  tSupply = tSupply - _tOwned[_excluded[i]] */\n      swap2\n      pop\n        /* \"METH.sol\":36165:36168  i++ */\n      0x01\n      add\n        /* \"METH.sol\":36123:36450  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_229)\n    tag_230:\n      pop\n        /* \"METH.sol\":36470:36477  rSupply */\n      swap1\n      swap4\n        /* \"METH.sol\":36479:36486  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"METH.sol\":35856:36495  function _getCurrentSupply() public view returns (uint256, uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"METH.sol\":32594:32819  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_118:\n        /* \"METH.sol\":20205:20215  msg.sender */\n      caller\n        /* \"METH.sol\":32687:32691  bool */\n      0x00\n        /* \"METH.sol\":32736:32761  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"METH.sol\":32736:32747  _allowances */\n      0x6b\n        /* \"METH.sol\":32736:32761  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":32736:32770  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"METH.sol\":32687:32691  bool */\n      swap1\n      swap2\n        /* \"METH.sol\":32704:32789  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] - subtractedValue) */\n      tag_147\n      swap2\n        /* \"METH.sol\":32727:32734  spender */\n      dup6\n      swap1\n        /* \"METH.sol\":32736:32788  _allowances[_msgSender()][spender] - subtractedValue */\n      tag_158\n      swap1\n        /* \"METH.sol\":32773:32788  subtractedValue */\n      dup7\n      swap1\n        /* \"METH.sol\":32736:32788  _allowances[_msgSender()][spender] - subtractedValue */\n      tag_159\n      jump\t// in\n        /* \"METH.sol\":31098:31285  function transfer(address recipient, uint256 amount) public override (IERC20Upgradeable) returns (bool) {... */\n    tag_122:\n        /* \"METH.sol\":31196:31200  bool */\n      0x00\n        /* \"METH.sol\":31213:31255  _transfer(_msgSender(), recipient, amount) */\n      tag_147\n        /* \"METH.sol\":20205:20215  msg.sender */\n      caller\n        /* \"METH.sol\":31237:31246  recipient */\n      dup5\n        /* \"METH.sol\":31248:31254  amount */\n      dup5\n        /* \"METH.sol\":31213:31222  _transfer */\n      tag_154\n        /* \"METH.sol\":31213:31255  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"METH.sol\":22914:23115  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_138:\n        /* \"METH.sol\":21901:21914  _checkOwner() */\n      tag_252\n        /* \"METH.sol\":21901:21912  _checkOwner */\n      tag_185\n        /* \"METH.sol\":21901:21914  _checkOwner() */\n      jump\t// in\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":23003:23025  newOwner != address(0) */\n      dup2\n      and\n        /* \"METH.sol\":22995:23068  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8198:8200   */\n      0x20\n        /* \"METH.sol\":22995:23068  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8180:8201   */\n      mstore\n        /* \"#utility.yul\":8237:8239   */\n      0x26\n        /* \"#utility.yul\":8217:8235   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8210:8240   */\n      mstore\n        /* \"#utility.yul\":8276:8310   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8256:8274   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8249:8311   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8327:8345   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8320:8356   */\n      mstore\n        /* \"#utility.yul\":8373:8392   */\n      0x84\n      add\n        /* \"METH.sol\":22995:23068  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_171\n        /* \"#utility.yul\":7996:8398   */\n      jump\n        /* \"METH.sol\":22995:23068  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_254:\n        /* \"METH.sol\":23079:23107  _transferOwnership(newOwner) */\n      tag_212\n        /* \"METH.sol\":23098:23106  newOwner */\n      dup2\n        /* \"METH.sol\":23079:23097  _transferOwnership */\n      tag_188\n        /* \"METH.sol\":23079:23107  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"METH.sol\":36579:37085  function _approve(... */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":36770:36789  owner != address(0) */\n      dup4\n      and\n        /* \"METH.sol\":36762:36830  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8605:8607   */\n      0x20\n        /* \"METH.sol\":36762:36830  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8587:8608   */\n      mstore\n        /* \"#utility.yul\":8644:8646   */\n      0x24\n        /* \"#utility.yul\":8624:8642   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8617:8647   */\n      mstore\n        /* \"#utility.yul\":8683:8717   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8663:8681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8656:8718   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8734:8752   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8727:8761   */\n      mstore\n        /* \"#utility.yul\":8778:8797   */\n      0x84\n      add\n        /* \"METH.sol\":36762:36830  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_171\n        /* \"#utility.yul\":8403:8803   */\n      jump\n        /* \"METH.sol\":36762:36830  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":36849:36870  spender != address(0) */\n      dup3\n      and\n        /* \"METH.sol\":36841:36909  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9010:9012   */\n      0x20\n        /* \"METH.sol\":36841:36909  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8992:9013   */\n      mstore\n        /* \"#utility.yul\":9049:9051   */\n      0x22\n        /* \"#utility.yul\":9029:9047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9022:9052   */\n      mstore\n        /* \"#utility.yul\":9088:9122   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9068:9086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9061:9123   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":9139:9157   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9132:9164   */\n      mstore\n        /* \"#utility.yul\":9181:9200   */\n      0x84\n      add\n        /* \"METH.sol\":36841:36909  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_171\n        /* \"#utility.yul\":8808:9206   */\n      jump\n        /* \"METH.sol\":36841:36909  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":36993:37011  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"METH.sol\":36993:37004  _allowances */\n      0x6b\n        /* \"METH.sol\":36993:37011  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"METH.sol\":36993:37020  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"METH.sol\":36993:37029  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"METH.sol\":37045:37077  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1445:1470   */\n      dup5\n      dup2\n      mstore\n        /* \"METH.sol\":37045:37077  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH.sol\":37045:37077  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH.sol\":36579:37085  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH.sol\":37208:39713  function _transfer(... */\n    tag_154:\n        /* \"METH.sol\":37367:37372  mutex */\n      sload(0x72)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"METH.sol\":37367:37381  mutex == false */\n      iszero\n        /* \"METH.sol\":37359:37382  require(mutex == false) */\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n        /* \"METH.sol\":37393:37398  mutex */\n      0x72\n        /* \"METH.sol\":37393:37405  mutex = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":37476:37494  from != address(0) */\n      dup4\n      and\n        /* \"METH.sol\":37468:37536  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"METH.sol\":37468:37536  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9395:9416   */\n      mstore\n        /* \"#utility.yul\":9452:9454   */\n      0x25\n        /* \"#utility.yul\":9432:9450   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9425:9455   */\n      mstore\n        /* \"#utility.yul\":9491:9525   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":9471:9489   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9464:9526   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9542:9560   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9535:9570   */\n      mstore\n        /* \"#utility.yul\":9587:9606   */\n      0x84\n      add\n        /* \"METH.sol\":37468:37536  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_171\n        /* \"#utility.yul\":9211:9612   */\n      jump\n        /* \"METH.sol\":37468:37536  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":37555:37571  to != address(0) */\n      dup3\n      and\n        /* \"METH.sol\":37547:37611  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9819:9821   */\n      0x20\n        /* \"METH.sol\":37547:37611  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9801:9822   */\n      mstore\n        /* \"#utility.yul\":9858:9860   */\n      0x23\n        /* \"#utility.yul\":9838:9856   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9831:9861   */\n      mstore\n        /* \"#utility.yul\":9897:9931   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":9877:9895   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9870:9932   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9948:9966   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9941:9974   */\n      mstore\n        /* \"#utility.yul\":9991:10010   */\n      0x84\n      add\n        /* \"METH.sol\":37547:37611  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_171\n        /* \"#utility.yul\":9617:10016   */\n      jump\n        /* \"METH.sol\":37547:37611  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_272:\n        /* \"METH.sol\":37639:37640  0 */\n      0x00\n        /* \"METH.sol\":37630:37636  amount */\n      dup2\n        /* \"METH.sol\":37630:37640  amount > 0 */\n      gt\n        /* \"METH.sol\":37622:37686  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10223:10225   */\n      0x20\n        /* \"METH.sol\":37622:37686  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10205:10226   */\n      mstore\n        /* \"#utility.yul\":10262:10264   */\n      0x29\n        /* \"#utility.yul\":10242:10260   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10235:10265   */\n      mstore\n        /* \"#utility.yul\":10301:10335   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":10281:10299   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10274:10336   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":10352:10370   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10345:10384   */\n      mstore\n        /* \"#utility.yul\":10401:10420   */\n      0x84\n      add\n        /* \"METH.sol\":37622:37686  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_171\n        /* \"#utility.yul\":10021:10426   */\n      jump\n        /* \"METH.sol\":37622:37686  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_275:\n        /* \"METH.sol\":37931:37945  isRouter(from) */\n      tag_278\n        /* \"METH.sol\":37940:37944  from */\n      dup4\n        /* \"METH.sol\":37931:37939  isRouter */\n      tag_279\n        /* \"METH.sol\":37931:37945  isRouter(from) */\n      jump\t// in\n    tag_278:\n        /* \"METH.sol\":37931:37953  isRouter(from) == true */\n      iszero\n      iszero\n        /* \"METH.sol\":37949:37953  true */\n      0x01\n        /* \"METH.sol\":37931:37953  isRouter(from) == true */\n      eq\n        /* \"METH.sol\":37931:37998  isRouter(from) == true && ... */\n      dup1\n      iszero\n      tag_280\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":37972:37998  _isExcludedFromMaxTx[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":37972:37992  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":37972:37998  _isExcludedFromMaxTx[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":37971:37998  !_isExcludedFromMaxTx[from] */\n      iszero\n        /* \"METH.sol\":37931:37998  isRouter(from) == true && ... */\n    tag_280:\n        /* \"METH.sol\":37931:38033  isRouter(from) == true && ... */\n      dup1\n      iszero\n      tag_281\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":38016:38033  _isExcluded[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":38016:38027  _isExcluded */\n      0x6c\n        /* \"METH.sol\":38016:38033  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":38015:38033  !_isExcluded[from] */\n      iszero\n        /* \"METH.sol\":37931:38033  isRouter(from) == true && ... */\n    tag_281:\n        /* \"METH.sol\":37913:38141  if (... */\n      iszero\n      tag_285\n      jumpi\n        /* \"METH.sol\":38068:38090  excludeFromMaxTx(from) */\n      tag_283\n        /* \"METH.sol\":38085:38089  from */\n      dup4\n        /* \"METH.sol\":38068:38084  excludeFromMaxTx */\n      tag_284\n        /* \"METH.sol\":38068:38090  excludeFromMaxTx(from) */\n      jump\t// in\n    tag_283:\n        /* \"METH.sol\":38109:38129  excludeAddress(from) */\n      tag_285\n        /* \"METH.sol\":38124:38128  from */\n      dup4\n        /* \"METH.sol\":38109:38123  excludeAddress */\n      tag_286\n        /* \"METH.sol\":38109:38129  excludeAddress(from) */\n      jump\t// in\n    tag_285:\n        /* \"METH.sol\":38171:38183  isRouter(to) */\n      tag_287\n        /* \"METH.sol\":38180:38182  to */\n      dup3\n        /* \"METH.sol\":38171:38179  isRouter */\n      tag_279\n        /* \"METH.sol\":38171:38183  isRouter(to) */\n      jump\t// in\n    tag_287:\n        /* \"METH.sol\":38171:38191  isRouter(to) == true */\n      iszero\n      iszero\n        /* \"METH.sol\":38187:38191  true */\n      0x01\n        /* \"METH.sol\":38171:38191  isRouter(to) == true */\n      eq\n        /* \"METH.sol\":38171:38234  isRouter(to) == true && ... */\n      dup1\n      iszero\n      tag_288\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":38210:38234  _isExcludedFromMaxTx[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":38210:38230  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":38210:38234  _isExcludedFromMaxTx[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":38209:38234  !_isExcludedFromMaxTx[to] */\n      iszero\n        /* \"METH.sol\":38171:38234  isRouter(to) == true && ... */\n    tag_288:\n        /* \"METH.sol\":38171:38267  isRouter(to) == true && ... */\n      dup1\n      iszero\n      tag_289\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":38252:38267  _isExcluded[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":38252:38263  _isExcluded */\n      0x6c\n        /* \"METH.sol\":38252:38267  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":38251:38267  !_isExcluded[to] */\n      iszero\n        /* \"METH.sol\":38171:38267  isRouter(to) == true && ... */\n    tag_289:\n        /* \"METH.sol\":38153:38371  if (... */\n      iszero\n      tag_292\n      jumpi\n        /* \"METH.sol\":38302:38322  excludeFromMaxTx(to) */\n      tag_291\n        /* \"METH.sol\":38319:38321  to */\n      dup3\n        /* \"METH.sol\":38302:38318  excludeFromMaxTx */\n      tag_284\n        /* \"METH.sol\":38302:38322  excludeFromMaxTx(to) */\n      jump\t// in\n    tag_291:\n        /* \"METH.sol\":38341:38359  excludeAddress(to) */\n      tag_292\n        /* \"METH.sol\":38356:38358  to */\n      dup3\n        /* \"METH.sol\":38341:38355  excludeAddress */\n      tag_286\n        /* \"METH.sol\":38341:38359  excludeAddress(to) */\n      jump\t// in\n    tag_292:\n        /* \"METH.sol\":22088:22094  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":38466:38481  from != owner() */\n      dup5\n      dup2\n      and\n        /* \"METH.sol\":22088:22094  _owner */\n      swap2\n      and\n        /* \"METH.sol\":38466:38481  from != owner() */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"METH.sol\":38466:38498  from != owner() && to != owner() */\n      tag_294\n      jumpi\n      pop\n        /* \"METH.sol\":22088:22094  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":38485:38498  to != owner() */\n      dup4\n      dup2\n      and\n        /* \"METH.sol\":22088:22094  _owner */\n      swap2\n      and\n        /* \"METH.sol\":38485:38498  to != owner() */\n      eq\n      iszero\n        /* \"METH.sol\":38466:38498  from != owner() && to != owner() */\n    tag_294:\n        /* \"METH.sol\":38462:38925  if (from != owner() && to != owner()) {... */\n      iszero\n      tag_299\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":38689:38715  _isExcludedFromMaxTx[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":38689:38709  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":38689:38715  _isExcludedFromMaxTx[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":38688:38715  !_isExcludedFromMaxTx[from] */\n      iszero\n        /* \"METH.sol\":38688:38744  !_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to] */\n      dup1\n      iszero\n      tag_297\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":38720:38744  _isExcludedFromMaxTx[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":38720:38740  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":38720:38744  _isExcludedFromMaxTx[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":38719:38744  !_isExcludedFromMaxTx[to] */\n      iszero\n        /* \"METH.sol\":38688:38744  !_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to] */\n    tag_297:\n        /* \"METH.sol\":38684:38914  if (!_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to]) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"METH.sol\":38842:38853  maxTxAmount */\n      sload(0x71)\n        /* \"METH.sol\":38832:38838  amount */\n      dup2\n        /* \"METH.sol\":38832:38853  amount <= maxTxAmount */\n      gt\n      iszero\n        /* \"METH.sol\":38824:38898  require(amount <= maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_301\n      jump\t// in\n    tag_299:\n        /* \"METH.sol\":22088:22094  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":39000:39015  from != owner() */\n      dup5\n      dup2\n      and\n        /* \"METH.sol\":22088:22094  _owner */\n      swap2\n      and\n        /* \"METH.sol\":39000:39015  from != owner() */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"METH.sol\":39000:39032  from != owner() && to != owner() */\n      tag_303\n      jumpi\n      pop\n        /* \"METH.sol\":22088:22094  _owner */\n      sload(0x33)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":39019:39032  to != owner() */\n      dup4\n      dup2\n      and\n        /* \"METH.sol\":22088:22094  _owner */\n      swap2\n      and\n        /* \"METH.sol\":39019:39032  to != owner() */\n      eq\n      iszero\n        /* \"METH.sol\":39000:39032  from != owner() && to != owner() */\n    tag_303:\n        /* \"METH.sol\":38996:39448  if (from != owner() && to != owner()) {... */\n      iszero\n      tag_308\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":39212:39238  _isExcludedFromMaxTx[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":39212:39232  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":39212:39238  _isExcludedFromMaxTx[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":39211:39238  !_isExcludedFromMaxTx[from] */\n      iszero\n        /* \"METH.sol\":39211:39267  !_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to] */\n      dup1\n      iszero\n      tag_306\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":39243:39267  _isExcludedFromMaxTx[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":39243:39263  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":39243:39267  _isExcludedFromMaxTx[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":39242:39267  !_isExcludedFromMaxTx[to] */\n      iszero\n        /* \"METH.sol\":39211:39267  !_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to] */\n    tag_306:\n        /* \"METH.sol\":39207:39437  if (!_isExcludedFromMaxTx[from] && !_isExcludedFromMaxTx[to]) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"METH.sol\":39365:39376  maxTxAmount */\n      sload(0x71)\n        /* \"METH.sol\":39355:39361  amount */\n      dup2\n        /* \"METH.sol\":39355:39376  amount <= maxTxAmount */\n      gt\n      iszero\n        /* \"METH.sol\":39347:39421  require(amount <= maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_301\n      jump\t// in\n    tag_308:\n        /* \"METH.sol\":39647:39679  _tokenTransfer(from, to, amount) */\n      tag_310\n        /* \"METH.sol\":39662:39666  from */\n      dup4\n        /* \"METH.sol\":39668:39670  to */\n      dup4\n        /* \"METH.sol\":39672:39678  amount */\n      dup4\n        /* \"METH.sol\":39647:39661  _tokenTransfer */\n      tag_311\n        /* \"METH.sol\":39647:39679  _tokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_310:\n      pop\n      pop\n        /* \"METH.sol\":39692:39697  mutex */\n      0x72\n        /* \"METH.sol\":39692:39705  mutex = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n      pop\n        /* \"METH.sol\":37208:39713  function _transfer(... */\n      jump\t// out\n        /* \"METH.sol\":22180:22312  function _checkOwner() internal view virtual {... */\n    tag_185:\n        /* \"METH.sol\":22088:22094  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"METH.sol\":20205:20215  msg.sender */\n      caller\n        /* \"METH.sol\":22244:22267  owner() == _msgSender() */\n      eq\n        /* \"METH.sol\":22236:22304  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11042:11044   */\n      0x20\n        /* \"METH.sol\":22236:22304  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11024:11045   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11061:11079   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11054:11084   */\n      mstore\n        /* \"#utility.yul\":11120:11154   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11100:11118   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11093:11155   */\n      mstore\n        /* \"#utility.yul\":11172:11190   */\n      0x64\n      add\n        /* \"METH.sol\":22236:22304  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_171\n        /* \"#utility.yul\":10840:11196   */\n      jump\n        /* \"METH.sol\":23275:23466  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_188:\n        /* \"METH.sol\":23368:23374  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":23385:23402  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"METH.sol\":23418:23458  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"METH.sol\":23368:23374  _owner */\n      swap2\n      and\n      swap2\n        /* \"METH.sol\":23385:23402  _owner = newOwner */\n      swap1\n        /* \"METH.sol\":23368:23374  _owner */\n      dup3\n      swap1\n        /* \"METH.sol\":23418:23458  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"METH.sol\":23349:23365  address oldOwner */\n      0x00\n      swap1\n        /* \"METH.sol\":23418:23458  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"METH.sol\":23338:23466  {... */\n      pop\n        /* \"METH.sol\":23275:23466  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"METH.sol\":21558:21655  function __Ownable_init() internal onlyInitializing {... */\n    tag_202:\n        /* \"METH.sol\":18108:18121  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"METH.sol\":18100:18169  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_323\n      jump\t// in\n    tag_321:\n        /* \"METH.sol\":21621:21647  __Ownable_init_unchained() */\n      tag_187\n        /* \"METH.sol\":21621:21645  __Ownable_init_unchained */\n      tag_326\n        /* \"METH.sol\":21621:21647  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"METH.sol\":33273:33490  function isRouter(address _address) internal view returns (bool) {... */\n    tag_279:\n        /* \"METH.sol\":33405:33437  abi.encodeWithSelector(SELECTOR) */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xc45a0155)\n      or\n      swap1\n      mstore\n        /* \"METH.sol\":33385:33438  _address.staticcall(abi.encodeWithSelector(SELECTOR)) */\n      swap1\n      mload\n        /* \"METH.sol\":33332:33336  bool */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":33385:33404  _address.staticcall */\n      dup7\n      and\n      swap2\n        /* \"METH.sol\":33385:33438  _address.staticcall(abi.encodeWithSelector(SELECTOR)) */\n      tag_328\n      swap2\n        /* \"METH.sol\":33405:33437  abi.encodeWithSelector(SELECTOR) */\n      swap1\n        /* \"METH.sol\":33385:33438  _address.staticcall(abi.encodeWithSelector(SELECTOR)) */\n      tag_329\n      jump\t// in\n    tag_328:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_332\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_331)\n    tag_332:\n      0x60\n      swap2\n      pop\n    tag_331:\n      pop\n        /* \"METH.sol\":33349:33438  (bool success, bytes memory data) = _address.staticcall(abi.encodeWithSelector(SELECTOR)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"METH.sol\":33456:33463  success */\n      dup2\n        /* \"METH.sol\":33456:33482  success && data.length > 0 */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"METH.sol\":33467:33478  data.length */\n      mload\n        /* \"METH.sol\":33467:33482  data.length > 0 */\n      iszero\n      iszero\n      swap4\n        /* \"METH.sol\":33449:33482  return success && data.length > 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"METH.sol\":33273:33490  function isRouter(address _address) internal view returns (bool) {... */\n      jump\t// out\n        /* \"METH.sol\":33674:33861  function excludeFromMaxTx(address account) private {... */\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":33745:33774  _isExcludedFromMaxTx[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":33745:33765  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":33745:33774  _isExcludedFromMaxTx[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":33744:33774  !_isExcludedFromMaxTx[account] */\n      iszero\n        /* \"METH.sol\":33736:33806  require(!_isExcludedFromMaxTx[account], \"Account is already excluded\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12107:12109   */\n      0x20\n        /* \"METH.sol\":33736:33806  require(!_isExcludedFromMaxTx[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12089:12110   */\n      mstore\n        /* \"#utility.yul\":12146:12148   */\n      0x1b\n        /* \"#utility.yul\":12126:12144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12119:12149   */\n      mstore\n        /* \"#utility.yul\":12185:12214   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":12165:12183   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12158:12215   */\n      mstore\n        /* \"#utility.yul\":12232:12250   */\n      0x64\n      add\n        /* \"METH.sol\":33736:33806  require(!_isExcludedFromMaxTx[account], \"Account is already excluded\") */\n      tag_171\n        /* \"#utility.yul\":11905:12256   */\n      jump\n        /* \"METH.sol\":33736:33806  require(!_isExcludedFromMaxTx[account], \"Account is already excluded\") */\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":33817:33846  _isExcludedFromMaxTx[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":33817:33837  _isExcludedFromMaxTx */\n      0x6d\n        /* \"METH.sol\":33817:33846  _isExcludedFromMaxTx[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"METH.sol\":33817:33853  _isExcludedFromMaxTx[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"METH.sol\":33849:33853  true */\n      0x01\n        /* \"METH.sol\":33817:33853  _isExcludedFromMaxTx[account] = true */\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":33674:33861  function excludeFromMaxTx(address account) private {... */\n      jump\t// out\n        /* \"METH.sol\":34114:34698  function excludeAddress(address account) private {... */\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":34183:34203  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":34183:34194  _isExcluded */\n      0x6c\n        /* \"METH.sol\":34183:34203  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":34182:34203  !_isExcluded[account] */\n      iszero\n        /* \"METH.sol\":34174:34235  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12107:12109   */\n      0x20\n        /* \"METH.sol\":34174:34235  require(!_isExcluded[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12089:12110   */\n      mstore\n        /* \"#utility.yul\":12146:12148   */\n      0x1b\n        /* \"#utility.yul\":12126:12144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12119:12149   */\n      mstore\n        /* \"#utility.yul\":12185:12214   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":12165:12183   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12158:12215   */\n      mstore\n        /* \"#utility.yul\":12232:12250   */\n      0x64\n      add\n        /* \"METH.sol\":34174:34235  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_171\n        /* \"#utility.yul\":11905:12256   */\n      jump\n        /* \"METH.sol\":34174:34235  require(!_isExcluded[account], \"Account is already excluded\") */\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":34300:34316  _rOwned[account] */\n      dup2\n      and\n        /* \"METH.sol\":34319:34320  0 */\n      0x00\n        /* \"METH.sol\":34300:34316  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":34300:34307  _rOwned */\n      0x6a\n        /* \"METH.sol\":34300:34316  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"METH.sol\":34300:34320  _rOwned[account] > 0 */\n      iszero\n        /* \"METH.sol\":34296:34510  if (_rOwned[account] > 0) {... */\n      tag_341\n      jumpi\n        /* \"METH.sol\":34479:34498  rBalanceOf(account) */\n      tag_342\n        /* \"METH.sol\":34490:34497  account */\n      dup2\n        /* \"METH.sol\":34479:34489  rBalanceOf */\n      tag_78\n        /* \"METH.sol\":34479:34498  rBalanceOf(account) */\n      jump\t// in\n    tag_342:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":34460:34476  _tOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":34460:34467  _tOwned */\n      0x69\n        /* \"METH.sol\":34460:34476  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"METH.sol\":34460:34498  _tOwned[account] = rBalanceOf(account) */\n      sstore\n        /* \"METH.sol\":34296:34510  if (_rOwned[account] > 0) {... */\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":34564:34584  _isExcluded[account] */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"METH.sol\":34564:34575  _isExcluded */\n      0x6c\n        /* \"METH.sol\":34564:34584  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH.sol\":34564:34591  _isExcluded[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"METH.sol\":34587:34591  true */\n      0x01\n        /* \"METH.sol\":34564:34591  _isExcluded[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"METH.sol\":34667:34676  _excluded */\n      0x68\n        /* \"METH.sol\":34667:34690  _excluded.push(account) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0xa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"METH.sol\":34114:34698  function excludeAddress(address account) private {... */\n      jump\t// out\n        /* \"METH.sol\":39793:40748  function _tokenTransfer(address sender, address recipient, uint256 amount) private {... */\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":39944:39963  _isExcluded[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":39944:39955  _isExcluded */\n      0x6c\n        /* \"METH.sol\":39944:39963  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":39944:39990  _isExcluded[sender] && !_isExcluded[recipient] */\n      dup1\n      iszero\n      tag_345\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":39968:39990  _isExcluded[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":39968:39979  _isExcluded */\n      0x6c\n        /* \"METH.sol\":39968:39990  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":39967:39990  !_isExcluded[recipient] */\n      iszero\n        /* \"METH.sol\":39944:39990  _isExcluded[sender] && !_isExcluded[recipient] */\n    tag_345:\n        /* \"METH.sol\":39940:40741  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"METH.sol\":40008:40056  _transferFromExcluded(sender, recipient, amount) */\n      tag_347\n        /* \"METH.sol\":40030:40036  sender */\n      dup4\n        /* \"METH.sol\":40038:40047  recipient */\n      dup4\n        /* \"METH.sol\":40049:40055  amount */\n      dup4\n        /* \"METH.sol\":40008:40029  _transferFromExcluded */\n      tag_348\n        /* \"METH.sol\":40008:40056  _transferFromExcluded(sender, recipient, amount) */\n      jump\t// in\n    tag_347:\n        /* \"METH.sol\":39793:40748  function _tokenTransfer(address sender, address recipient, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH.sol\":39940:40741  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":40214:40233  _isExcluded[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":40214:40225  _isExcluded */\n      0x6c\n        /* \"METH.sol\":40214:40233  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":40213:40233  !_isExcluded[sender] */\n      iszero\n        /* \"METH.sol\":40213:40259  !_isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_350\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":40237:40259  _isExcluded[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":40237:40248  _isExcluded */\n      0x6c\n        /* \"METH.sol\":40237:40259  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":40213:40259  !_isExcluded[sender] && _isExcluded[recipient] */\n    tag_350:\n        /* \"METH.sol\":40209:40741  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"METH.sol\":40276:40322  _transferToExcluded(sender, recipient, amount) */\n      tag_347\n        /* \"METH.sol\":40296:40302  sender */\n      dup4\n        /* \"METH.sol\":40304:40313  recipient */\n      dup4\n        /* \"METH.sol\":40315:40321  amount */\n      dup4\n        /* \"METH.sol\":40276:40295  _transferToExcluded */\n      tag_353\n        /* \"METH.sol\":40276:40322  _transferToExcluded(sender, recipient, amount) */\n      jump\t// in\n        /* \"METH.sol\":40209:40741  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":40486:40505  _isExcluded[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":40486:40497  _isExcluded */\n      0x6c\n        /* \"METH.sol\":40486:40505  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":40486:40531  _isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_355\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":40509:40531  _isExcluded[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":40509:40520  _isExcluded */\n      0x6c\n        /* \"METH.sol\":40509:40531  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"METH.sol\":40486:40531  _isExcluded[sender] && _isExcluded[recipient] */\n    tag_355:\n        /* \"METH.sol\":40482:40741  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"METH.sol\":40549:40597  _transferBothExcluded(sender, recipient, amount) */\n      tag_347\n        /* \"METH.sol\":40571:40577  sender */\n      dup4\n        /* \"METH.sol\":40579:40588  recipient */\n      dup4\n        /* \"METH.sol\":40590:40596  amount */\n      dup4\n        /* \"METH.sol\":40549:40570  _transferBothExcluded */\n      tag_358\n        /* \"METH.sol\":40549:40597  _transferBothExcluded(sender, recipient, amount) */\n      jump\t// in\n        /* \"METH.sol\":40482:40741  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_356:\n        /* \"METH.sol\":40685:40729  _transferStandard(sender, recipient, amount) */\n      tag_347\n        /* \"METH.sol\":40703:40709  sender */\n      dup4\n        /* \"METH.sol\":40711:40720  recipient */\n      dup4\n        /* \"METH.sol\":40722:40728  amount */\n      dup4\n        /* \"METH.sol\":40685:40702  _transferStandard */\n      tag_361\n        /* \"METH.sol\":40685:40729  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n        /* \"METH.sol\":21663:21776  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_326:\n        /* \"METH.sol\":18108:18121  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"METH.sol\":18100:18169  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_323\n      jump\t// in\n    tag_363:\n        /* \"METH.sol\":21736:21768  _transferOwnership(_msgSender()) */\n      tag_187\n        /* \"METH.sol\":20205:20215  msg.sender */\n      caller\n        /* \"METH.sol\":21736:21754  _transferOwnership */\n      tag_188\n        /* \"METH.sol\":21736:21768  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"METH.sol\":43171:44968  function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_348:\n        /* \"METH.sol\":43273:43297  TransferData memory data */\n      tag_369\n      tag_370\n      jump\t// in\n    tag_369:\n        /* \"METH.sol\":43375:43384  antiWhale */\n      and(0xff, sload(0x72))\n        /* \"METH.sol\":43375:43392  antiWhale == true */\n      iszero\n      iszero\n        /* \"METH.sol\":43375:43384  antiWhale */\n      0x01\n        /* \"METH.sol\":43375:43392  antiWhale == true */\n      sub\n        /* \"METH.sol\":43372:43529  if(antiWhale == true) {... */\n      tag_373\n      jumpi\n        /* \"METH.sol\":43439:43443  1000 */\n      0x03e8\n        /* \"METH.sol\":43429:43436  _tTotal */\n      sload(0x6f)\n        /* \"METH.sol\":43429:43443  _tTotal / 1000 */\n      tag_372\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_372:\n        /* \"METH.sol\":43417:43424  tAmount */\n      dup3\n        /* \"METH.sol\":43417:43444  tAmount <= (_tTotal / 1000) */\n      gt\n      iszero\n        /* \"METH.sol\":43409:43517  require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12463:12465   */\n      0x20\n        /* \"METH.sol\":43409:43517  require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12445:12466   */\n      mstore\n        /* \"#utility.yul\":12502:12504   */\n      0x44\n        /* \"#utility.yul\":12482:12500   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12475:12505   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12541:12575   */\n      0x43616e6e6f74207075726368617365206d6f7265207468616e2031306d202830\n        /* \"#utility.yul\":12521:12539   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12514:12576   */\n      mstore\n        /* \"#utility.yul\":12612:12646   */\n      0x2e312529206f6620737570706c7920696e2073696e676c65207472616e736163\n        /* \"#utility.yul\":12592:12610   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12585:12647   */\n      mstore\n      shl(0xe1, 0x3a34b7b7)\n        /* \"#utility.yul\":12663:12682   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":12656:12691   */\n      mstore\n        /* \"#utility.yul\":12708:12727   */\n      0xa4\n      add\n        /* \"METH.sol\":43409:43517  require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\") */\n      tag_171\n        /* \"#utility.yul\":12261:12733   */\n      jump\n        /* \"METH.sol\":43409:43517  require(tAmount <= (_tTotal / 1000), \"Cannot purchase more than 10m (0.1%) of supply in single transaction\") */\n    tag_373:\n        /* \"METH.sol\":43587:43613  data.tAmountSent = tAmount */\n      dup2\n      dup2\n      mstore\n        /* \"METH.sol\":43653:43663  _getRate() */\n      tag_376\n        /* \"METH.sol\":43653:43661  _getRate */\n      tag_108\n        /* \"METH.sol\":43653:43663  _getRate() */\n      jump\t// in\n    tag_376:\n        /* \"METH.sol\":43643:43663  tAmount * _getRate() */\n      tag_377\n      swap1\n        /* \"METH.sol\":43643:43650  tAmount */\n      dup4\n        /* \"METH.sol\":43643:43663  tAmount * _getRate() */\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"METH.sol\":43624:43640  data.rAmountSent */\n      0x20\n      dup3\n      add\n        /* \"METH.sol\":43624:43663  data.rAmountSent = tAmount * _getRate() */\n      mstore\n        /* \"METH.sol\":43753:43754  0 */\n      0x00\n        /* \"METH.sol\":43731:43750  data.totalBuyTaxBps */\n      0x40\n      dup3\n      add\n        /* \"METH.sol\":43731:43754  data.totalBuyTaxBps = 0 */\n      dup2\n      swap1\n      mstore\n        /* \"METH.sol\":43876:43881  10000 */\n      0x2710\n      swap1\n        /* \"METH.sol\":43843:43872  tAmount * data.totalBuyTaxBps */\n      tag_379\n      swap1\n        /* \"METH.sol\":43843:43850  tAmount */\n      dup5\n        /* \"METH.sol\":43843:43872  tAmount * data.totalBuyTaxBps */\n      tag_378\n      jump\t// in\n    tag_379:\n        /* \"METH.sol\":43842:43881  (tAmount * data.totalBuyTaxBps) / 10000 */\n      tag_380\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_380:\n        /* \"METH.sol\":43822:43839  data.tBuyFeeTotal */\n      0x80\n      dup3\n      add\n        /* \"METH.sol\":43822:43881  data.tBuyFeeTotal = (tAmount * data.totalBuyTaxBps) / 10000 */\n      mstore\n        /* \"METH.sol\":43932:43942  _getRate() */\n      tag_381\n        /* \"METH.sol\":43932:43940  _getRate */\n      tag_108\n        /* \"METH.sol\":43932:43942  _getRate() */\n      jump\t// in\n    tag_381:\n        /* \"METH.sol\":43912:43916  data */\n      dup2\n        /* \"METH.sol\":43912:43929  data.tBuyFeeTotal */\n      0x80\n      add\n      mload\n        /* \"METH.sol\":43912:43942  data.tBuyFeeTotal * _getRate() */\n      tag_382\n      swap2\n      swap1\n      tag_378\n      jump\t// in\n    tag_382:\n        /* \"METH.sol\":43892:43909  data.rBuyFeeTotal */\n      0xa0\n      dup3\n      add\n        /* \"METH.sol\":43892:43942  data.rBuyFeeTotal = data.tBuyFeeTotal * _getRate() */\n      dup2\n      swap1\n      mstore\n        /* \"METH.sol\":44042:44063  data.rBuyFeeTotal > 0 */\n      iszero\n        /* \"METH.sol\":44024:44132  if (... */\n      tag_383\n      jumpi\n        /* \"METH.sol\":44103:44120  data.rBuyFeeTotal */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"METH.sol\":44080:44100  data.reflectedAmount */\n      0x0100\n      dup3\n      add\n        /* \"METH.sol\":44080:44120  data.reflectedAmount = data.rBuyFeeTotal */\n      mstore\n        /* \"METH.sol\":44024:44132  if (... */\n    tag_383:\n        /* \"METH.sol\":44297:44313  data.tAmountSent */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":44278:44293  _tOwned[sender] */\n      dup6\n      and\n        /* \"METH.sol\":44297:44313  data.tAmountSent */\n      0x00\n        /* \"METH.sol\":44278:44293  _tOwned[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":44278:44285  _tOwned */\n      0x69\n        /* \"METH.sol\":44278:44293  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH.sol\":44278:44313  _tOwned[sender] -= data.tAmountSent */\n      dup1\n      sload\n        /* \"METH.sol\":44278:44293  _tOwned[sender] */\n      swap1\n      swap2\n        /* \"METH.sol\":44297:44313  data.tAmountSent */\n      swap1\n        /* \"METH.sol\":44278:44313  _tOwned[sender] -= data.tAmountSent */\n      tag_384\n      swap1\n        /* \"METH.sol\":44297:44313  data.tAmountSent */\n      dup5\n      swap1\n        /* \"METH.sol\":44278:44313  _tOwned[sender] -= data.tAmountSent */\n      tag_159\n      jump\t// in\n    tag_384:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":44343:44359  data.rAmountSent */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":44324:44339  _rOwned[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":44324:44331  _rOwned */\n      0x6a\n        /* \"METH.sol\":44324:44339  _rOwned[sender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH.sol\":44324:44359  _rOwned[sender] -= data.rAmountSent */\n      dup1\n      sload\n        /* \"METH.sol\":44343:44359  data.rAmountSent */\n      swap2\n      swap3\n        /* \"METH.sol\":44324:44339  _rOwned[sender] */\n      swap1\n      swap2\n        /* \"METH.sol\":44324:44359  _rOwned[sender] -= data.rAmountSent */\n      tag_385\n      swap1\n        /* \"METH.sol\":44343:44359  data.rAmountSent */\n      dup5\n      swap1\n        /* \"METH.sol\":44324:44359  _rOwned[sender] -= data.rAmountSent */\n      tag_159\n      jump\t// in\n    tag_385:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":44527:44544  data.rBuyFeeTotal */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"METH.sol\":44508:44524  data.rAmountSent */\n      0x20\n      dup3\n      add\n      mload\n        /* \"METH.sol\":44508:44544  data.rAmountSent - data.rBuyFeeTotal */\n      tag_386\n      swap2\n        /* \"METH.sol\":44527:44544  data.rBuyFeeTotal */\n      swap1\n        /* \"METH.sol\":44508:44544  data.rAmountSent - data.rBuyFeeTotal */\n      tag_159\n      jump\t// in\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":44485:44503  _rOwned[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":44485:44492  _rOwned */\n      0x6a\n        /* \"METH.sol\":44485:44503  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH.sol\":44485:44545  _rOwned[recipient] += (data.rAmountSent - data.rBuyFeeTotal) */\n      dup1\n      sload\n        /* \"METH.sol\":44485:44503  _rOwned[recipient] */\n      swap1\n      swap2\n      swap1\n        /* \"METH.sol\":44485:44545  _rOwned[recipient] += (data.rAmountSent - data.rBuyFeeTotal) */\n      tag_387\n      swap1\n      dup5\n      swap1\n      tag_166\n      jump\t// in\n    tag_387:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":44651:44671  data.reflectedAmount */\n      0x0100\n      dup2\n      add\n      mload\n        /* \"METH.sol\":44640:44647  _rTotal */\n      0x70\n        /* \"METH.sol\":44640:44671  _rTotal -= data.reflectedAmount */\n      dup1\n      sload\n        /* \"METH.sol\":44640:44647  _rTotal */\n      0x00\n      swap1\n        /* \"METH.sol\":44640:44671  _rTotal -= data.reflectedAmount */\n      tag_388\n      swap1\n        /* \"METH.sol\":44651:44671  data.reflectedAmount */\n      dup5\n      swap1\n        /* \"METH.sol\":44640:44671  _rTotal -= data.reflectedAmount */\n      tag_159\n      jump\t// in\n    tag_388:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":44796:44813  data.tBuyFeeTotal */\n      0x80\n      dup2\n      add\n      mload\n        /* \"METH.sol\":44777:44793  data.tAmountSent */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":44748:44815  Transfer(sender, recipient, (data.tAmountSent - data.tBuyFeeTotal)) */\n      dup1\n      dup7\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n        /* \"METH.sol\":44777:44813  data.tAmountSent - data.tBuyFeeTotal */\n      tag_389\n      swap2\n      tag_159\n      jump\t// in\n    tag_389:\n        /* \"METH.sol\":44748:44815  Transfer(sender, recipient, (data.tAmountSent - data.tBuyFeeTotal)) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH.sol\":44748:44815  Transfer(sender, recipient, (data.tAmountSent - data.tBuyFeeTotal)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH.sol\":44876:44892  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH.sol\":44927:44944  data.tBuyFeeTotal */\n      0x80\n      dup3\n      add\n      mload\n        /* \"METH.sol\":44841:44960  TransferFromExcluded(... */\n      0xe6ef78c5a1f105fc4b9500eeb7cd09b041367bdee35f1d85761735ee78b3ff2e\n      swap2\n        /* \"METH.sol\":44876:44892  data.tAmountSent */\n      swap1\n        /* \"METH.sol\":44908:44944  data.tAmountSent - data.tBuyFeeTotal */\n      tag_391\n      swap1\n        /* \"METH.sol\":44876:44892  data.tAmountSent */\n      dup3\n        /* \"METH.sol\":44908:44944  data.tAmountSent - data.tBuyFeeTotal */\n      tag_159\n      jump\t// in\n    tag_391:\n        /* \"METH.sol\":44841:44960  TransferFromExcluded(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2761:2786   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2802:2820   */\n      dup4\n      add\n        /* \"#utility.yul\":2795:2829   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"METH.sol\":44841:44960  TransferFromExcluded(... */\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"METH.sol\":43262:44968  {... */\n      pop\n        /* \"METH.sol\":43171:44968  function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"METH.sol\":41269:43029  function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_353:\n        /* \"METH.sol\":41369:41393  TransferData memory data */\n      tag_394\n      tag_370\n      jump\t// in\n    tag_394:\n        /* \"METH.sol\":41567:41569  10 */\n      0x0a\n        /* \"METH.sol\":41546:41564  rBalanceOf(sender) */\n      tag_395\n        /* \"METH.sol\":41557:41563  sender */\n      dup6\n        /* \"METH.sol\":41546:41556  rBalanceOf */\n      tag_78\n        /* \"METH.sol\":41546:41564  rBalanceOf(sender) */\n      jump\t// in\n    tag_395:\n        /* \"METH.sol\":41546:41569  rBalanceOf(sender) / 10 */\n      tag_396\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_396:\n        /* \"METH.sol\":41535:41542  tAmount */\n      dup3\n        /* \"METH.sol\":41535:41569  tAmount <= rBalanceOf(sender) / 10 */\n      gt\n      iszero\n        /* \"METH.sol\":41527:41632  require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\") */\n      tag_397\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13113:13115   */\n      0x20\n        /* \"METH.sol\":41527:41632  require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13095:13116   */\n      mstore\n        /* \"#utility.yul\":13152:13154   */\n      0x3a\n        /* \"#utility.yul\":13132:13150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13125:13155   */\n      mstore\n        /* \"#utility.yul\":13191:13225   */\n      0x43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c\n        /* \"#utility.yul\":13171:13189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13164:13226   */\n      mstore\n        /* \"#utility.yul\":13262:13290   */\n      0x616e636520696e2073696e676c65207472616e73616374696f6e000000000000\n        /* \"#utility.yul\":13242:13260   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13235:13291   */\n      mstore\n        /* \"#utility.yul\":13308:13327   */\n      0x84\n      add\n        /* \"METH.sol\":41527:41632  require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\") */\n      tag_171\n        /* \"#utility.yul\":12911:13333   */\n      jump\n        /* \"METH.sol\":41527:41632  require(tAmount <= rBalanceOf(sender) / 10, \"Cannot sell more than 10% of balance in single transaction\") */\n    tag_397:\n        /* \"METH.sol\":41693:41719  data.tAmountSent = tAmount */\n      dup2\n      dup2\n      mstore\n        /* \"METH.sol\":41759:41769  _getRate() */\n      tag_400\n        /* \"METH.sol\":41759:41767  _getRate */\n      tag_108\n        /* \"METH.sol\":41759:41769  _getRate() */\n      jump\t// in\n    tag_400:\n        /* \"METH.sol\":41749:41769  tAmount * _getRate() */\n      tag_401\n      swap1\n        /* \"METH.sol\":41749:41756  tAmount */\n      dup4\n        /* \"METH.sol\":41749:41769  tAmount * _getRate() */\n      tag_378\n      jump\t// in\n    tag_401:\n        /* \"METH.sol\":41730:41746  data.rAmountSent */\n      0x20\n      dup3\n      add\n        /* \"METH.sol\":41730:41769  data.rAmountSent = tAmount * _getRate() */\n      mstore\n        /* \"METH.sol\":41805:41806  0 */\n      0x00\n        /* \"METH.sol\":41782:41802  data.totalSellTaxBps */\n      0x60\n      dup3\n      add\n        /* \"METH.sol\":41782:41806  data.totalSellTaxBps = 0 */\n      dup2\n      swap1\n      mstore\n        /* \"METH.sol\":41930:41935  10000 */\n      0x2710\n      swap1\n        /* \"METH.sol\":41896:41926  tAmount * data.totalSellTaxBps */\n      tag_402\n      swap1\n        /* \"METH.sol\":41896:41903  tAmount */\n      dup5\n        /* \"METH.sol\":41896:41926  tAmount * data.totalSellTaxBps */\n      tag_378\n      jump\t// in\n    tag_402:\n        /* \"METH.sol\":41895:41935  (tAmount * data.totalSellTaxBps) / 10000 */\n      tag_403\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_403:\n        /* \"METH.sol\":41874:41892  data.tSellFeeTotal */\n      0xc0\n      dup3\n      add\n        /* \"METH.sol\":41874:41935  data.tSellFeeTotal = (tAmount * data.totalSellTaxBps) / 10000 */\n      mstore\n        /* \"METH.sol\":41988:41998  _getRate() */\n      tag_404\n        /* \"METH.sol\":41988:41996  _getRate */\n      tag_108\n        /* \"METH.sol\":41988:41998  _getRate() */\n      jump\t// in\n    tag_404:\n        /* \"METH.sol\":41967:41971  data */\n      dup2\n        /* \"METH.sol\":41967:41985  data.tSellFeeTotal */\n      0xc0\n      add\n      mload\n        /* \"METH.sol\":41967:41998  data.tSellFeeTotal * _getRate() */\n      tag_405\n      swap2\n      swap1\n      tag_378\n      jump\t// in\n    tag_405:\n        /* \"METH.sol\":41946:41964  data.rSellFeeTotal */\n      0xe0\n      dup3\n      add\n        /* \"METH.sol\":41946:41998  data.rSellFeeTotal = data.tSellFeeTotal * _getRate() */\n      dup2\n      swap1\n      mstore\n        /* \"METH.sol\":42084:42106  data.rSellFeeTotal > 0 */\n      iszero\n        /* \"METH.sol\":42080:42177  if (data.rSellFeeTotal > 0 ) {... */\n      tag_406\n      jumpi\n        /* \"METH.sol\":42147:42165  data.rSellFeeTotal */\n      0xe0\n      dup2\n      add\n      mload\n        /* \"METH.sol\":42124:42144  data.reflectedAmount */\n      0x0100\n      dup3\n      add\n        /* \"METH.sol\":42124:42165  data.reflectedAmount = data.rSellFeeTotal */\n      mstore\n        /* \"METH.sol\":42080:42177  if (data.rSellFeeTotal > 0 ) {... */\n    tag_406:\n        /* \"METH.sol\":42328:42332  data */\n      dup1\n        /* \"METH.sol\":42328:42344  data.rAmountSent */\n      0x20\n      add\n      mload\n        /* \"METH.sol\":42309:42316  _rOwned */\n      0x6a\n        /* \"METH.sol\":42309:42324  _rOwned[sender] */\n      0x00\n        /* \"METH.sol\":42317:42323  sender */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":42309:42324  _rOwned[sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"METH.sol\":42309:42344  _rOwned[sender] -= data.rAmountSent */\n      dup3\n      dup3\n      sload\n      tag_407\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_407:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":42523:42541  data.tSellFeeTotal */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"METH.sol\":42504:42520  data.tAmountSent */\n      dup2\n      mload\n        /* \"METH.sol\":42504:42541  data.tAmountSent - data.tSellFeeTotal */\n      tag_408\n      swap2\n        /* \"METH.sol\":42523:42541  data.tSellFeeTotal */\n      swap1\n        /* \"METH.sol\":42504:42541  data.tAmountSent - data.tSellFeeTotal */\n      tag_159\n      jump\t// in\n    tag_408:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":42481:42499  _tOwned[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":42481:42488  _tOwned */\n      0x69\n        /* \"METH.sol\":42481:42499  _tOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH.sol\":42481:42542  _tOwned[recipient] += (data.tAmountSent - data.tSellFeeTotal) */\n      dup1\n      sload\n        /* \"METH.sol\":42481:42499  _tOwned[recipient] */\n      swap1\n      swap2\n      swap1\n        /* \"METH.sol\":42481:42542  _tOwned[recipient] += (data.tAmountSent - data.tSellFeeTotal) */\n      tag_409\n      swap1\n      dup5\n      swap1\n      tag_166\n      jump\t// in\n    tag_409:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":42595:42613  data.rSellFeeTotal */\n      0xe0\n      dup2\n      add\n      mload\n        /* \"METH.sol\":42576:42592  data.rAmountSent */\n      0x20\n      dup3\n      add\n      mload\n        /* \"METH.sol\":42576:42613  data.rAmountSent - data.rSellFeeTotal */\n      tag_410\n      swap2\n        /* \"METH.sol\":42595:42613  data.rSellFeeTotal */\n      swap1\n        /* \"METH.sol\":42576:42613  data.rAmountSent - data.rSellFeeTotal */\n      tag_159\n      jump\t// in\n    tag_410:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":42553:42571  _rOwned[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":42553:42560  _rOwned */\n      0x6a\n        /* \"METH.sol\":42553:42571  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH.sol\":42553:42614  _rOwned[recipient] += (data.rAmountSent - data.rSellFeeTotal) */\n      dup1\n      sload\n        /* \"METH.sol\":42553:42571  _rOwned[recipient] */\n      swap1\n      swap2\n      swap1\n        /* \"METH.sol\":42553:42614  _rOwned[recipient] += (data.rAmountSent - data.rSellFeeTotal) */\n      tag_411\n      swap1\n      dup5\n      swap1\n      tag_166\n      jump\t// in\n    tag_411:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":42720:42740  data.reflectedAmount */\n      0x0100\n      dup2\n      add\n      mload\n        /* \"METH.sol\":42709:42716  _rTotal */\n      0x70\n        /* \"METH.sol\":42709:42740  _rTotal -= data.reflectedAmount */\n      dup1\n      sload\n        /* \"METH.sol\":42709:42716  _rTotal */\n      0x00\n      swap1\n        /* \"METH.sol\":42709:42740  _rTotal -= data.reflectedAmount */\n      tag_412\n      swap1\n        /* \"METH.sol\":42720:42740  data.reflectedAmount */\n      dup5\n      swap1\n        /* \"METH.sol\":42709:42740  _rTotal -= data.reflectedAmount */\n      tag_159\n      jump\t// in\n    tag_412:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":42865:42883  data.tSellFeeTotal */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"METH.sol\":42846:42862  data.tAmountSent */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":42817:42885  Transfer(sender, recipient, (data.tAmountSent - data.tSellFeeTotal)) */\n      dup1\n      dup7\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n        /* \"METH.sol\":42846:42883  data.tAmountSent - data.tSellFeeTotal */\n      tag_413\n      swap2\n      tag_159\n      jump\t// in\n    tag_413:\n        /* \"METH.sol\":42817:42885  Transfer(sender, recipient, (data.tAmountSent - data.tSellFeeTotal)) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH.sol\":42817:42885  Transfer(sender, recipient, (data.tAmountSent - data.tSellFeeTotal)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH.sol\":42936:42952  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH.sol\":42987:43005  data.tSellFeeTotal */\n      0xc0\n      dup3\n      add\n      mload\n        /* \"METH.sol\":42903:43021  TransferToExcluded(... */\n      0xff000e16c1c0d33b07404c2b2abb9832356b5cfd57566d73c9d09611f030890d\n      swap2\n        /* \"METH.sol\":42936:42952  data.tAmountSent */\n      swap1\n        /* \"METH.sol\":42968:43005  data.tAmountSent - data.tSellFeeTotal */\n      tag_391\n      swap1\n        /* \"METH.sol\":42936:42952  data.tAmountSent */\n      dup3\n        /* \"METH.sol\":42968:43005  data.tAmountSent - data.tSellFeeTotal */\n      tag_159\n      jump\t// in\n        /* \"METH.sol\":45141:46077  function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {... */\n    tag_358:\n        /* \"METH.sol\":45243:45267  TransferData memory data */\n      tag_418\n      tag_370\n      jump\t// in\n    tag_418:\n        /* \"METH.sol\":45381:45407  data.tAmountSent = tAmount */\n      dup2\n      dup2\n      mstore\n        /* \"METH.sol\":45447:45457  _getRate() */\n      tag_419\n        /* \"METH.sol\":45447:45455  _getRate */\n      tag_108\n        /* \"METH.sol\":45447:45457  _getRate() */\n      jump\t// in\n    tag_419:\n        /* \"METH.sol\":45437:45457  tAmount * _getRate() */\n      tag_420\n      swap1\n        /* \"METH.sol\":45437:45444  tAmount */\n      dup4\n        /* \"METH.sol\":45437:45457  tAmount * _getRate() */\n      tag_378\n      jump\t// in\n    tag_420:\n        /* \"METH.sol\":45418:45434  data.rAmountSent */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"METH.sol\":45418:45457  data.rAmountSent = tAmount * _getRate() */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"METH.sol\":45574:45590  data.tAmountSent */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":45555:45570  _tOwned[sender] */\n      dup7\n      and\n        /* \"METH.sol\":45574:45590  data.tAmountSent */\n      0x00\n        /* \"METH.sol\":45555:45570  _tOwned[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":45555:45562  _tOwned */\n      0x69\n        /* \"METH.sol\":45555:45570  _tOwned[sender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH.sol\":45555:45590  _tOwned[sender] -= data.tAmountSent */\n      dup1\n      sload\n        /* \"METH.sol\":45574:45590  data.tAmountSent */\n      swap2\n      swap3\n        /* \"METH.sol\":45555:45570  _tOwned[sender] */\n      swap1\n      swap2\n        /* \"METH.sol\":45555:45590  _tOwned[sender] -= data.tAmountSent */\n      tag_421\n      swap1\n        /* \"METH.sol\":45574:45590  data.tAmountSent */\n      dup5\n      swap1\n        /* \"METH.sol\":45555:45590  _tOwned[sender] -= data.tAmountSent */\n      tag_159\n      jump\t// in\n    tag_421:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":45620:45636  data.rAmountSent */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":45601:45616  _rOwned[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":45601:45608  _rOwned */\n      0x6a\n        /* \"METH.sol\":45601:45616  _rOwned[sender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH.sol\":45601:45636  _rOwned[sender] -= data.rAmountSent */\n      dup1\n      sload\n        /* \"METH.sol\":45620:45636  data.rAmountSent */\n      swap2\n      swap3\n        /* \"METH.sol\":45601:45616  _rOwned[sender] */\n      swap1\n      swap2\n        /* \"METH.sol\":45601:45636  _rOwned[sender] -= data.rAmountSent */\n      tag_422\n      swap1\n        /* \"METH.sol\":45620:45636  data.rAmountSent */\n      dup5\n      swap1\n        /* \"METH.sol\":45601:45636  _rOwned[sender] -= data.rAmountSent */\n      tag_159\n      jump\t// in\n    tag_422:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":45740:45756  data.tAmountSent */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":45718:45736  _tOwned[recipient] */\n      dup5\n      and\n        /* \"METH.sol\":45740:45756  data.tAmountSent */\n      0x00\n        /* \"METH.sol\":45718:45736  _tOwned[recipient] */\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":45718:45725  _tOwned */\n      0x69\n        /* \"METH.sol\":45718:45736  _tOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH.sol\":45718:45756  _tOwned[recipient] += data.tAmountSent */\n      dup1\n      sload\n        /* \"METH.sol\":45718:45736  _tOwned[recipient] */\n      swap1\n      swap2\n        /* \"METH.sol\":45740:45756  data.tAmountSent */\n      swap1\n        /* \"METH.sol\":45718:45756  _tOwned[recipient] += data.tAmountSent */\n      tag_423\n      swap1\n        /* \"METH.sol\":45740:45756  data.tAmountSent */\n      dup5\n      swap1\n        /* \"METH.sol\":45718:45756  _tOwned[recipient] += data.tAmountSent */\n      tag_166\n      jump\t// in\n    tag_423:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":45789:45805  data.rAmountSent */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":45767:45785  _rOwned[recipient] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":45767:45774  _rOwned */\n      0x6a\n        /* \"METH.sol\":45767:45785  _rOwned[recipient] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH.sol\":45767:45805  _rOwned[recipient] += data.rAmountSent */\n      dup1\n      sload\n        /* \"METH.sol\":45789:45805  data.rAmountSent */\n      swap2\n      swap3\n        /* \"METH.sol\":45767:45785  _rOwned[recipient] */\n      swap1\n      swap2\n        /* \"METH.sol\":45767:45805  _rOwned[recipient] += data.rAmountSent */\n      tag_424\n      swap1\n        /* \"METH.sol\":45789:45805  data.rAmountSent */\n      dup5\n      swap1\n        /* \"METH.sol\":45767:45805  _rOwned[recipient] += data.rAmountSent */\n      tag_166\n      jump\t// in\n    tag_424:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":45910:45926  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH.sol\":45882:45927  Transfer(sender, recipient, data.tAmountSent) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":45882:45927  Transfer(sender, recipient, data.tAmountSent) */\n      dup5\n      dup2\n      and\n      swap2\n      swap1\n      dup7\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH.sol\":45882:45927  Transfer(sender, recipient, data.tAmountSent) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH.sol\":45980:45996  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH.sol\":45945:46069  TransferBothExcluded(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2761:2786   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2802:2820   */\n      dup2\n      add\n        /* \"#utility.yul\":2795:2829   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"METH.sol\":45945:46069  TransferBothExcluded(... */\n      0x2541109a23d530c06d62a3bf63d8d03107194870126fddb7170c0daef360cd8a\n      swap2\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"METH.sol\":45945:46069  TransferBothExcluded(... */\n      tag_392\n        /* \"#utility.yul\":2587:2835   */\n      jump\n        /* \"METH.sol\":46218:47145  function _transferStandard(address sender, address recipient, uint256 tAmount) private {... */\n    tag_361:\n        /* \"METH.sol\":46316:46340  TransferData memory data */\n      tag_428\n      tag_370\n      jump\t// in\n    tag_428:\n        /* \"METH.sol\":46486:46505  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"METH.sol\":46465:46483  rBalanceOf(sender) */\n      tag_429\n        /* \"METH.sol\":46476:46482  sender */\n      dup6\n        /* \"METH.sol\":46465:46475  rBalanceOf */\n      tag_78\n        /* \"METH.sol\":46465:46483  rBalanceOf(sender) */\n      jump\t// in\n    tag_429:\n        /* \"METH.sol\":46465:46505  rBalanceOf(sender) - 1000000000000000000 */\n      tag_430\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_430:\n        /* \"METH.sol\":46454:46461  tAmount */\n      dup3\n        /* \"METH.sol\":46454:46505  tAmount <= rBalanceOf(sender) - 1000000000000000000 */\n      gt\n      iszero\n        /* \"METH.sol\":46446:46539  require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13540:13542   */\n      0x20\n        /* \"METH.sol\":46446:46539  require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13522:13543   */\n      mstore\n        /* \"#utility.yul\":13579:13581   */\n      0x1d\n        /* \"#utility.yul\":13559:13577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13552:13582   */\n      mstore\n        /* \"#utility.yul\":13618:13649   */\n      0x596f7520676f747461206b6565702031204d45544820616c7761797321000000\n        /* \"#utility.yul\":13598:13616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13591:13650   */\n      mstore\n        /* \"#utility.yul\":13667:13685   */\n      0x64\n      add\n        /* \"METH.sol\":46446:46539  require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\") */\n      tag_171\n        /* \"#utility.yul\":13338:13691   */\n      jump\n        /* \"METH.sol\":46446:46539  require(tAmount <= rBalanceOf(sender) - 1000000000000000000, \"You gotta keep 1 METH always!\") */\n    tag_431:\n        /* \"METH.sol\":46598:46624  data.tAmountSent = tAmount */\n      dup2\n      dup2\n      mstore\n        /* \"METH.sol\":46664:46674  _getRate() */\n      tag_434\n        /* \"METH.sol\":46664:46672  _getRate */\n      tag_108\n        /* \"METH.sol\":46664:46674  _getRate() */\n      jump\t// in\n    tag_434:\n        /* \"METH.sol\":46654:46674  tAmount * _getRate() */\n      tag_435\n      swap1\n        /* \"METH.sol\":46654:46661  tAmount */\n      dup4\n        /* \"METH.sol\":46654:46674  tAmount * _getRate() */\n      tag_378\n      jump\t// in\n    tag_435:\n        /* \"METH.sol\":46635:46651  data.rAmountSent */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"METH.sol\":46635:46674  data.rAmountSent = tAmount * _getRate() */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":46791:46806  _rOwned[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":46791:46798  _rOwned */\n      0x6a\n        /* \"METH.sol\":46791:46806  _rOwned[sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"METH.sol\":46791:46826  _rOwned[sender] -= data.rAmountSent */\n      dup1\n      sload\n        /* \"METH.sol\":46791:46806  _rOwned[sender] */\n      swap1\n      swap2\n      swap1\n        /* \"METH.sol\":46791:46826  _rOwned[sender] -= data.rAmountSent */\n      tag_436\n      swap1\n        /* \"METH.sol\":46635:46674  data.rAmountSent = tAmount * _getRate() */\n      dup5\n      swap1\n        /* \"METH.sol\":46791:46826  _rOwned[sender] -= data.rAmountSent */\n      tag_159\n      jump\t// in\n    tag_436:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":46945:46961  data.rAmountSent */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":46923:46941  _rOwned[recipient] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"METH.sol\":46923:46930  _rOwned */\n      0x6a\n        /* \"METH.sol\":46923:46941  _rOwned[recipient] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"METH.sol\":46923:46961  _rOwned[recipient] += data.rAmountSent */\n      dup1\n      sload\n        /* \"METH.sol\":46945:46961  data.rAmountSent */\n      swap2\n      swap3\n        /* \"METH.sol\":46923:46941  _rOwned[recipient] */\n      swap1\n      swap2\n        /* \"METH.sol\":46923:46961  _rOwned[recipient] += data.rAmountSent */\n      tag_437\n      swap1\n        /* \"METH.sol\":46945:46961  data.rAmountSent */\n      dup5\n      swap1\n        /* \"METH.sol\":46923:46961  _rOwned[recipient] += data.rAmountSent */\n      tag_166\n      jump\t// in\n    tag_437:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"METH.sol\":47008:47024  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH.sol\":46979:47026  Transfer(sender, recipient, (data.tAmountSent)) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"METH.sol\":46979:47026  Transfer(sender, recipient, (data.tAmountSent)) */\n      dup5\n      dup2\n      and\n      swap2\n      swap1\n      dup7\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"METH.sol\":46979:47026  Transfer(sender, recipient, (data.tAmountSent)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"METH.sol\":47075:47091  data.tAmountSent */\n      dup1\n      mload\n        /* \"METH.sol\":47044:47137  TransferStandard(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2761:2786   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2802:2820   */\n      dup2\n      add\n        /* \"#utility.yul\":2795:2829   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"METH.sol\":47044:47137  TransferStandard(... */\n      0xd9923e08d9d88ff7a7e9b8460f3163dc6b887fabe315449da3b5cd16bb5e9340\n      swap2\n        /* \"#utility.yul\":2734:2752   */\n      add\n        /* \"METH.sol\":47044:47137  TransferStandard(... */\n      tag_392\n        /* \"#utility.yul\":2587:2835   */\n      jump\n    tag_370:\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_440:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_450:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_450)\n    tag_452:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:665   */\n    tag_39:\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup2\n        /* \"#utility.yul\":400:421   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      mload\n        /* \"#utility.yul\":493:499   */\n      dup1\n        /* \"#utility.yul\":488:490   */\n      0x20\n        /* \"#utility.yul\":477:486   */\n      dup5\n        /* \"#utility.yul\":473:491   */\n      add\n        /* \"#utility.yul\":466:500   */\n      mstore\n        /* \"#utility.yul\":509:588   */\n      tag_454\n        /* \"#utility.yul\":581:587   */\n      dup2\n        /* \"#utility.yul\":576:578   */\n      0x40\n        /* \"#utility.yul\":565:574   */\n      dup6\n        /* \"#utility.yul\":561:579   */\n      add\n        /* \"#utility.yul\":556:558   */\n      0x20\n        /* \"#utility.yul\":548:554   */\n      dup8\n        /* \"#utility.yul\":544:559   */\n      add\n        /* \"#utility.yul\":509:588   */\n      tag_440\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":649:651   */\n      0x1f\n        /* \"#utility.yul\":628:643   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":624:653   */\n      and\n        /* \"#utility.yul\":609:654   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":656:658   */\n      0x40\n        /* \"#utility.yul\":605:659   */\n      add\n      swap3\n        /* \"#utility.yul\":269:665   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:843   */\n    tag_441:\n        /* \"#utility.yul\":738:758   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":787:818   */\n      dup2\n      and\n        /* \"#utility.yul\":777:819   */\n      dup2\n      eq\n        /* \"#utility.yul\":767:837   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":848:1102   */\n    tag_42:\n        /* \"#utility.yul\":916:922   */\n      0x00\n        /* \"#utility.yul\":924:930   */\n      dup1\n        /* \"#utility.yul\":977:979   */\n      0x40\n        /* \"#utility.yul\":965:974   */\n      dup4\n        /* \"#utility.yul\":956:963   */\n      dup6\n        /* \"#utility.yul\":952:975   */\n      sub\n        /* \"#utility.yul\":948:980   */\n      slt\n        /* \"#utility.yul\":945:997   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":993:994   */\n      0x00\n        /* \"#utility.yul\":990:991   */\n      dup1\n        /* \"#utility.yul\":983:995   */\n      revert\n        /* \"#utility.yul\":945:997   */\n    tag_458:\n        /* \"#utility.yul\":1016:1045   */\n      tag_459\n        /* \"#utility.yul\":1035:1044   */\n      dup4\n        /* \"#utility.yul\":1016:1045   */\n      tag_441\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":1006:1045   */\n      swap5\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1077:1095   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1064:1096   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":848:1102   */\n      jump\t// out\n        /* \"#utility.yul\":1481:1809   */\n    tag_52:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1566:1572   */\n      dup1\n        /* \"#utility.yul\":1574:1580   */\n      0x00\n        /* \"#utility.yul\":1627:1629   */\n      0x60\n        /* \"#utility.yul\":1615:1624   */\n      dup5\n        /* \"#utility.yul\":1606:1613   */\n      dup7\n        /* \"#utility.yul\":1602:1625   */\n      sub\n        /* \"#utility.yul\":1598:1630   */\n      slt\n        /* \"#utility.yul\":1595:1647   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1640:1641   */\n      dup1\n        /* \"#utility.yul\":1633:1645   */\n      revert\n        /* \"#utility.yul\":1595:1647   */\n    tag_463:\n        /* \"#utility.yul\":1666:1695   */\n      tag_464\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1666:1695   */\n      tag_441\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":1656:1695   */\n      swap3\n      pop\n        /* \"#utility.yul\":1714:1752   */\n      tag_465\n        /* \"#utility.yul\":1748:1750   */\n      0x20\n        /* \"#utility.yul\":1737:1746   */\n      dup6\n        /* \"#utility.yul\":1733:1751   */\n      add\n        /* \"#utility.yul\":1714:1752   */\n      tag_441\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1704:1752   */\n      swap2\n      pop\n        /* \"#utility.yul\":1799:1801   */\n      0x40\n        /* \"#utility.yul\":1788:1797   */\n      dup5\n        /* \"#utility.yul\":1784:1802   */\n      add\n        /* \"#utility.yul\":1771:1803   */\n      calldataload\n        /* \"#utility.yul\":1761:1803   */\n      swap1\n      pop\n        /* \"#utility.yul\":1481:1809   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2003:2183   */\n    tag_68:\n        /* \"#utility.yul\":2062:2068   */\n      0x00\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2103:2112   */\n      dup3\n        /* \"#utility.yul\":2094:2101   */\n      dup5\n        /* \"#utility.yul\":2090:2113   */\n      sub\n        /* \"#utility.yul\":2086:2118   */\n      slt\n        /* \"#utility.yul\":2083:2135   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2128:2129   */\n      dup1\n        /* \"#utility.yul\":2121:2133   */\n      revert\n        /* \"#utility.yul\":2083:2135   */\n    tag_468:\n      pop\n        /* \"#utility.yul\":2154:2177   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2003:2183   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2582   */\n    tag_77:\n        /* \"#utility.yul\":2455:2461   */\n      0x00\n        /* \"#utility.yul\":2508:2510   */\n      0x20\n        /* \"#utility.yul\":2496:2505   */\n      dup3\n        /* \"#utility.yul\":2487:2494   */\n      dup5\n        /* \"#utility.yul\":2483:2506   */\n      sub\n        /* \"#utility.yul\":2479:2511   */\n      slt\n        /* \"#utility.yul\":2476:2528   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":2524:2525   */\n      0x00\n        /* \"#utility.yul\":2521:2522   */\n      dup1\n        /* \"#utility.yul\":2514:2526   */\n      revert\n        /* \"#utility.yul\":2476:2528   */\n    tag_471:\n        /* \"#utility.yul\":2547:2576   */\n      tag_472\n        /* \"#utility.yul\":2566:2575   */\n      dup3\n        /* \"#utility.yul\":2547:2576   */\n      tag_441\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":2537:2576   */\n      swap4\n        /* \"#utility.yul\":2396:2582   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2840:3113   */\n    tag_99:\n        /* \"#utility.yul\":2896:2902   */\n      0x00\n        /* \"#utility.yul\":2949:2951   */\n      0x20\n        /* \"#utility.yul\":2937:2946   */\n      dup3\n        /* \"#utility.yul\":2928:2935   */\n      dup5\n        /* \"#utility.yul\":2924:2947   */\n      sub\n        /* \"#utility.yul\":2920:2952   */\n      slt\n        /* \"#utility.yul\":2917:2969   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":2965:2966   */\n      0x00\n        /* \"#utility.yul\":2962:2963   */\n      dup1\n        /* \"#utility.yul\":2955:2967   */\n      revert\n        /* \"#utility.yul\":2917:2969   */\n    tag_475:\n        /* \"#utility.yul\":3004:3013   */\n      dup2\n        /* \"#utility.yul\":2991:3014   */\n      calldataload\n        /* \"#utility.yul\":3057:3062   */\n      dup1\n        /* \"#utility.yul\":3050:3063   */\n      iszero\n        /* \"#utility.yul\":3043:3064   */\n      iszero\n        /* \"#utility.yul\":3036:3041   */\n      dup2\n        /* \"#utility.yul\":3033:3065   */\n      eq\n        /* \"#utility.yul\":3023:3083   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":3079:3080   */\n      0x00\n        /* \"#utility.yul\":3076:3077   */\n      dup1\n        /* \"#utility.yul\":3069:3081   */\n      revert\n        /* \"#utility.yul\":3118:3378   */\n    tag_133:\n        /* \"#utility.yul\":3186:3192   */\n      0x00\n        /* \"#utility.yul\":3194:3200   */\n      dup1\n        /* \"#utility.yul\":3247:3249   */\n      0x40\n        /* \"#utility.yul\":3235:3244   */\n      dup4\n        /* \"#utility.yul\":3226:3233   */\n      dup6\n        /* \"#utility.yul\":3222:3245   */\n      sub\n        /* \"#utility.yul\":3218:3250   */\n      slt\n        /* \"#utility.yul\":3215:3267   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3260:3261   */\n      dup1\n        /* \"#utility.yul\":3253:3265   */\n      revert\n        /* \"#utility.yul\":3215:3267   */\n    tag_478:\n        /* \"#utility.yul\":3286:3315   */\n      tag_479\n        /* \"#utility.yul\":3305:3314   */\n      dup4\n        /* \"#utility.yul\":3286:3315   */\n      tag_441\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":3276:3315   */\n      swap2\n      pop\n        /* \"#utility.yul\":3334:3372   */\n      tag_480\n        /* \"#utility.yul\":3368:3370   */\n      0x20\n        /* \"#utility.yul\":3357:3366   */\n      dup5\n        /* \"#utility.yul\":3353:3371   */\n      add\n        /* \"#utility.yul\":3334:3372   */\n      tag_441\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3324:3372   */\n      swap1\n      pop\n        /* \"#utility.yul\":3118:3378   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3383:3763   */\n    tag_141:\n        /* \"#utility.yul\":3462:3463   */\n      0x01\n        /* \"#utility.yul\":3458:3470   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3505:3517   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3526:3587   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":3580:3584   */\n      0x7f\n        /* \"#utility.yul\":3572:3578   */\n      dup3\n        /* \"#utility.yul\":3568:3585   */\n      and\n        /* \"#utility.yul\":3558:3585   */\n      swap2\n      pop\n        /* \"#utility.yul\":3526:3587   */\n    tag_482:\n        /* \"#utility.yul\":3633:3635   */\n      0x20\n        /* \"#utility.yul\":3625:3631   */\n      dup3\n        /* \"#utility.yul\":3622:3636   */\n      lt\n        /* \"#utility.yul\":3602:3620   */\n      dup2\n        /* \"#utility.yul\":3599:3637   */\n      sub\n        /* \"#utility.yul\":3596:3757   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":3679:3689   */\n      0x4e487b71\n        /* \"#utility.yul\":3674:3677   */\n      0xe0\n        /* \"#utility.yul\":3670:3690   */\n      shl\n        /* \"#utility.yul\":3667:3668   */\n      0x00\n        /* \"#utility.yul\":3660:3691   */\n      mstore\n        /* \"#utility.yul\":3714:3718   */\n      0x22\n        /* \"#utility.yul\":3711:3712   */\n      0x04\n        /* \"#utility.yul\":3704:3719   */\n      mstore\n        /* \"#utility.yul\":3742:3746   */\n      0x24\n        /* \"#utility.yul\":3739:3740   */\n      0x00\n        /* \"#utility.yul\":3732:3747   */\n      revert\n        /* \"#utility.yul\":3596:3757   */\n    tag_483:\n      pop\n        /* \"#utility.yul\":3383:3763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3768:3895   */\n    tag_442:\n        /* \"#utility.yul\":3829:3839   */\n      0x4e487b71\n        /* \"#utility.yul\":3824:3827   */\n      0xe0\n        /* \"#utility.yul\":3820:3840   */\n      shl\n        /* \"#utility.yul\":3817:3818   */\n      0x00\n        /* \"#utility.yul\":3810:3841   */\n      mstore\n        /* \"#utility.yul\":3860:3864   */\n      0x11\n        /* \"#utility.yul\":3857:3858   */\n      0x04\n        /* \"#utility.yul\":3850:3865   */\n      mstore\n        /* \"#utility.yul\":3884:3888   */\n      0x24\n        /* \"#utility.yul\":3881:3882   */\n      0x00\n        /* \"#utility.yul\":3874:3889   */\n      revert\n        /* \"#utility.yul\":3900:4028   */\n    tag_159:\n        /* \"#utility.yul\":3967:3976   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3988:3999   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3985:4022   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4002:4020   */\n      tag_146\n      tag_442\n      jump\t// in\n        /* \"#utility.yul\":4033:4158   */\n    tag_166:\n        /* \"#utility.yul\":4098:4107   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4119:4129   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4116:4152   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4132:4150   */\n      tag_146\n      tag_442\n      jump\t// in\n        /* \"#utility.yul\":4574:4701   */\n    tag_443:\n        /* \"#utility.yul\":4635:4645   */\n      0x4e487b71\n        /* \"#utility.yul\":4630:4633   */\n      0xe0\n        /* \"#utility.yul\":4626:4646   */\n      shl\n        /* \"#utility.yul\":4623:4624   */\n      0x00\n        /* \"#utility.yul\":4616:4647   */\n      mstore\n        /* \"#utility.yul\":4666:4670   */\n      0x12\n        /* \"#utility.yul\":4663:4664   */\n      0x04\n        /* \"#utility.yul\":4656:4671   */\n      mstore\n        /* \"#utility.yul\":4690:4694   */\n      0x24\n        /* \"#utility.yul\":4687:4688   */\n      0x00\n        /* \"#utility.yul\":4680:4695   */\n      revert\n        /* \"#utility.yul\":4706:4826   */\n    tag_177:\n        /* \"#utility.yul\":4746:4747   */\n      0x00\n        /* \"#utility.yul\":4772:4773   */\n      dup3\n        /* \"#utility.yul\":4762:4797   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":4777:4795   */\n      tag_495\n      tag_443\n      jump\t// in\n    tag_495:\n      pop\n        /* \"#utility.yul\":4811:4820   */\n      div\n      swap1\n        /* \"#utility.yul\":4706:4826   */\n      jump\t// out\n        /* \"#utility.yul\":5246:5373   */\n    tag_444:\n        /* \"#utility.yul\":5307:5317   */\n      0x4e487b71\n        /* \"#utility.yul\":5302:5305   */\n      0xe0\n        /* \"#utility.yul\":5298:5318   */\n      shl\n        /* \"#utility.yul\":5295:5296   */\n      0x00\n        /* \"#utility.yul\":5288:5319   */\n      mstore\n        /* \"#utility.yul\":5338:5342   */\n      0x41\n        /* \"#utility.yul\":5335:5336   */\n      0x04\n        /* \"#utility.yul\":5328:5343   */\n      mstore\n        /* \"#utility.yul\":5362:5366   */\n      0x24\n        /* \"#utility.yul\":5359:5360   */\n      0x00\n        /* \"#utility.yul\":5352:5367   */\n      revert\n        /* \"#utility.yul\":5504:6022   */\n    tag_446:\n        /* \"#utility.yul\":5606:5608   */\n      0x1f\n        /* \"#utility.yul\":5601:5604   */\n      dup3\n        /* \"#utility.yul\":5598:5609   */\n      gt\n        /* \"#utility.yul\":5595:6016   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5642:5647   */\n      dup1\n        /* \"#utility.yul\":5639:5640   */\n      0x00\n        /* \"#utility.yul\":5632:5648   */\n      mstore\n        /* \"#utility.yul\":5686:5690   */\n      0x20\n        /* \"#utility.yul\":5683:5684   */\n      0x00\n        /* \"#utility.yul\":5673:5691   */\n      keccak256\n        /* \"#utility.yul\":5756:5758   */\n      0x1f\n        /* \"#utility.yul\":5744:5754   */\n      dup5\n        /* \"#utility.yul\":5740:5759   */\n      add\n        /* \"#utility.yul\":5737:5738   */\n      0x05\n        /* \"#utility.yul\":5733:5760   */\n      shr\n        /* \"#utility.yul\":5727:5731   */\n      dup2\n        /* \"#utility.yul\":5723:5761   */\n      add\n        /* \"#utility.yul\":5792:5796   */\n      0x20\n        /* \"#utility.yul\":5780:5790   */\n      dup6\n        /* \"#utility.yul\":5777:5797   */\n      lt\n        /* \"#utility.yul\":5774:5821   */\n      iszero\n      tag_501\n      jumpi\n      pop\n        /* \"#utility.yul\":5815:5819   */\n      dup1\n        /* \"#utility.yul\":5774:5821   */\n    tag_501:\n        /* \"#utility.yul\":5870:5872   */\n      0x1f\n        /* \"#utility.yul\":5865:5868   */\n      dup5\n        /* \"#utility.yul\":5861:5873   */\n      add\n        /* \"#utility.yul\":5858:5859   */\n      0x05\n        /* \"#utility.yul\":5854:5874   */\n      shr\n        /* \"#utility.yul\":5848:5852   */\n      dup3\n        /* \"#utility.yul\":5844:5875   */\n      add\n        /* \"#utility.yul\":5834:5875   */\n      swap2\n      pop\n        /* \"#utility.yul\":5925:6006   */\n    tag_502:\n        /* \"#utility.yul\":5943:5945   */\n      dup2\n        /* \"#utility.yul\":5936:5941   */\n      dup2\n        /* \"#utility.yul\":5933:5946   */\n      lt\n        /* \"#utility.yul\":5925:6006   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":6002:6003   */\n      0x00\n        /* \"#utility.yul\":5988:6004   */\n      dup2\n      sstore\n        /* \"#utility.yul\":5969:5970   */\n      0x01\n        /* \"#utility.yul\":5958:5971   */\n      add\n        /* \"#utility.yul\":5925:6006   */\n      jump(tag_502)\n    tag_504:\n        /* \"#utility.yul\":5929:5932   */\n      pop\n      pop\n        /* \"#utility.yul\":5504:6022   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6198:7543   */\n    tag_204:\n        /* \"#utility.yul\":6324:6327   */\n      dup2\n        /* \"#utility.yul\":6318:6328   */\n      mload\n        /* \"#utility.yul\":6351:6369   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6343:6349   */\n      dup2\n        /* \"#utility.yul\":6340:6370   */\n      gt\n        /* \"#utility.yul\":6337:6393   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":6373:6391   */\n      tag_508\n      tag_444\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":6402:6499   */\n      tag_509\n        /* \"#utility.yul\":6492:6498   */\n      dup2\n        /* \"#utility.yul\":6452:6490   */\n      tag_510\n        /* \"#utility.yul\":6484:6488   */\n      dup5\n        /* \"#utility.yul\":6478:6489   */\n      sload\n        /* \"#utility.yul\":6452:6490   */\n      tag_141\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":6446:6450   */\n      dup5\n        /* \"#utility.yul\":6402:6499   */\n      tag_446\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":6554:6558   */\n      0x20\n      dup1\n        /* \"#utility.yul\":6611:6613   */\n      0x1f\n        /* \"#utility.yul\":6600:6614   */\n      dup4\n      gt\n        /* \"#utility.yul\":6628:6629   */\n      0x01\n        /* \"#utility.yul\":6623:7286   */\n      dup2\n      eq\n      tag_512\n      jumpi\n        /* \"#utility.yul\":7330:7331   */\n      0x00\n        /* \"#utility.yul\":7347:7353   */\n      dup5\n        /* \"#utility.yul\":7344:7433   */\n      iszero\n      tag_513\n      jumpi\n      pop\n        /* \"#utility.yul\":7399:7418   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":7393:7419   */\n      mload\n        /* \"#utility.yul\":7344:7433   */\n    tag_513:\n      not(0x00)\n        /* \"#utility.yul\":6155:6156   */\n      0x03\n        /* \"#utility.yul\":6151:6162   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6147:6171   */\n      shr\n        /* \"#utility.yul\":6143:6172   */\n      not\n        /* \"#utility.yul\":6133:6173   */\n      and\n        /* \"#utility.yul\":6179:6180   */\n      0x01\n        /* \"#utility.yul\":6175:6186   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6130:6187   */\n      or\n        /* \"#utility.yul\":7446:7527   */\n      dup6\n      sstore\n        /* \"#utility.yul\":6593:7537   */\n      jump(tag_511)\n        /* \"#utility.yul\":6623:7286   */\n    tag_512:\n        /* \"#utility.yul\":5451:5452   */\n      0x00\n        /* \"#utility.yul\":5444:5458   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5488:5492   */\n      0x20\n        /* \"#utility.yul\":5475:5493   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":6659:6679   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":6777:7013   */\n    tag_516:\n        /* \"#utility.yul\":6791:6798   */\n      dup3\n        /* \"#utility.yul\":6788:6789   */\n      dup2\n        /* \"#utility.yul\":6785:6799   */\n      lt\n        /* \"#utility.yul\":6777:7013   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":6880:6899   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":6874:6900   */\n      mload\n        /* \"#utility.yul\":6859:6901   */\n      dup3\n      sstore\n        /* \"#utility.yul\":6972:6999   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":6940:6941   */\n      0x01\n        /* \"#utility.yul\":6928:6942   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":6807:6826   */\n      dup5\n      add\n        /* \"#utility.yul\":6777:7013   */\n      jump(tag_516)\n    tag_518:\n        /* \"#utility.yul\":6781:6784   */\n      pop\n        /* \"#utility.yul\":7041:7047   */\n      dup6\n        /* \"#utility.yul\":7032:7039   */\n      dup3\n        /* \"#utility.yul\":7029:7048   */\n      lt\n        /* \"#utility.yul\":7026:7227   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":7102:7121   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":7096:7122   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":7185:7186   */\n      0x03\n        /* \"#utility.yul\":7181:7195   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":7197:7200   */\n      0xf8\n        /* \"#utility.yul\":7177:7201   */\n      and\n        /* \"#utility.yul\":7173:7210   */\n      shr\n        /* \"#utility.yul\":7169:7211   */\n      not\n        /* \"#utility.yul\":7154:7212   */\n      and\n        /* \"#utility.yul\":7139:7213   */\n      dup2\n      sstore\n        /* \"#utility.yul\":7026:7227   */\n    tag_519:\n      pop\n      pop\n        /* \"#utility.yul\":7273:7274   */\n      0x01\n        /* \"#utility.yul\":7264:7270   */\n      dup5\n        /* \"#utility.yul\":7261:7262   */\n      0x01\n        /* \"#utility.yul\":7257:7271   */\n      shl\n        /* \"#utility.yul\":7253:7275   */\n      add\n        /* \"#utility.yul\":7247:7251   */\n      dup6\n        /* \"#utility.yul\":7240:7276   */\n      sstore\n        /* \"#utility.yul\":6593:7537   */\n    tag_511:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6198:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7548:7660   */\n    tag_207:\n        /* \"#utility.yul\":7580:7581   */\n      0x00\n        /* \"#utility.yul\":7606:7607   */\n      dup3\n        /* \"#utility.yul\":7596:7631   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7611:7629   */\n      tag_522\n      tag_443\n      jump\t// in\n    tag_522:\n      pop\n        /* \"#utility.yul\":7645:7654   */\n      mod\n      swap1\n        /* \"#utility.yul\":7548:7660   */\n      jump\t// out\n        /* \"#utility.yul\":7864:7991   */\n    tag_234:\n        /* \"#utility.yul\":7925:7935   */\n      0x4e487b71\n        /* \"#utility.yul\":7920:7923   */\n      0xe0\n        /* \"#utility.yul\":7916:7936   */\n      shl\n        /* \"#utility.yul\":7913:7914   */\n      0x00\n        /* \"#utility.yul\":7906:7937   */\n      mstore\n        /* \"#utility.yul\":7956:7960   */\n      0x32\n        /* \"#utility.yul\":7953:7954   */\n      0x04\n        /* \"#utility.yul\":7946:7961   */\n      mstore\n        /* \"#utility.yul\":7980:7984   */\n      0x24\n        /* \"#utility.yul\":7977:7978   */\n      0x00\n        /* \"#utility.yul\":7970:7985   */\n      revert\n        /* \"#utility.yul\":10431:10835   */\n    tag_301:\n        /* \"#utility.yul\":10633:10635   */\n      0x20\n        /* \"#utility.yul\":10615:10636   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10672:10674   */\n      0x28\n        /* \"#utility.yul\":10652:10670   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10645:10675   */\n      mstore\n        /* \"#utility.yul\":10711:10745   */\n      0x5472616e7366657220616d6f756e74206578636565647320746865206d617854\n        /* \"#utility.yul\":10706:10708   */\n      0x40\n        /* \"#utility.yul\":10691:10709   */\n      dup3\n      add\n        /* \"#utility.yul\":10684:10746   */\n      mstore\n      shl(0xc1, 0x3c20b6b7bab73a17)\n        /* \"#utility.yul\":10777:10779   */\n      0x60\n        /* \"#utility.yul\":10762:10780   */\n      dup3\n      add\n        /* \"#utility.yul\":10755:10793   */\n      mstore\n        /* \"#utility.yul\":10825:10828   */\n      0x80\n        /* \"#utility.yul\":10810:10829   */\n      add\n      swap1\n        /* \"#utility.yul\":10431:10835   */\n      jump\t// out\n        /* \"#utility.yul\":11201:11608   */\n    tag_323:\n        /* \"#utility.yul\":11403:11405   */\n      0x20\n        /* \"#utility.yul\":11385:11406   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11442:11444   */\n      0x2b\n        /* \"#utility.yul\":11422:11440   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11415:11445   */\n      mstore\n        /* \"#utility.yul\":11481:11515   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":11476:11478   */\n      0x40\n        /* \"#utility.yul\":11461:11479   */\n      dup3\n      add\n        /* \"#utility.yul\":11454:11516   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":11547:11549   */\n      0x60\n        /* \"#utility.yul\":11532:11550   */\n      dup3\n      add\n        /* \"#utility.yul\":11525:11566   */\n      mstore\n        /* \"#utility.yul\":11598:11601   */\n      0x80\n        /* \"#utility.yul\":11583:11602   */\n      add\n      swap1\n        /* \"#utility.yul\":11201:11608   */\n      jump\t// out\n        /* \"#utility.yul\":11613:11900   */\n    tag_329:\n        /* \"#utility.yul\":11742:11745   */\n      0x00\n        /* \"#utility.yul\":11780:11786   */\n      dup3\n        /* \"#utility.yul\":11774:11787   */\n      mload\n        /* \"#utility.yul\":11796:11862   */\n      tag_535\n        /* \"#utility.yul\":11855:11861   */\n      dup2\n        /* \"#utility.yul\":11850:11853   */\n      dup5\n        /* \"#utility.yul\":11843:11847   */\n      0x20\n        /* \"#utility.yul\":11835:11841   */\n      dup8\n        /* \"#utility.yul\":11831:11848   */\n      add\n        /* \"#utility.yul\":11796:11862   */\n      tag_440\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11878:11894   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11613:11900   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12738:12906   */\n    tag_378:\n        /* \"#utility.yul\":12811:12820   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12842:12851   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12859:12874   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12853:12875   */\n      dup5\n      eq\n        /* \"#utility.yul\":12839:12876   */\n      or\n        /* \"#utility.yul\":12829:12900   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":12880:12898   */\n      tag_146\n      tag_442\n      jump\t// in\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa26469706673582212204554e5b0f6426765178e5f7312fdff93570d7615d0349f198c19856faf32ae4b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526072805461ff001916905534801561001a575f80fd5b50611f91806100285f395ff3fe608060405234801561000f575f80fd5b50600436106101a1575f3560e01c806380da2287116100f357806397a9d56011610093578063af465a271161006e578063af465a271461038c578063cba0e99614610395578063dd62ed3e146103c0578063f2fde38b146103f8575f80fd5b806397a9d5601461035e578063a457c2d714610366578063a9059cbb14610379575f80fd5b80638c0b5e22116100ce5780638c0b5e22146103345780638da5cb5b1461033d57806394e107841461034e57806395d89b4114610356575f80fd5b806380da2287146102cf5780638129fc1c1461031957806383f24c0914610321575f80fd5b806345e0b9d41161015e5780635319e78f116101395780635319e78f14610274578063658c27a91461028757806370a08231146102b2578063715018a6146102c5575f80fd5b806345e0b9d4146102335780634d09deb31461023c5780634dacf3f514610267575f80fd5b806306fdde03146101a5578063095ea7b3146101c357806318160ddd146101e657806323b872dd146101f8578063313ce5671461020b5780633950935114610220575b5f80fd5b6101ad61040b565b6040516101ba9190611b67565b60405180910390f35b6101d66101d1366004611baf565b61049b565b60405190151581526020016101ba565b606f545b6040519081526020016101ba565b6101d6610206366004611bd7565b6104b1565b60675460405160ff90911681526020016101ba565b6101d661022e366004611baf565b610501565b6101ea60705481565b61024f61024a366004611c10565b610537565b6040516001600160a01b0390911681526020016101ba565b6072546101d69060ff1681565b6101ea610282366004611c27565b61055f565b6101d6610295366004611c27565b6001600160a01b03165f908152606d602052604090205460ff1690565b6101ea6102c0366004611c27565b61060e565b6102cd610657565b005b6103046102dd366004611c27565b6001600160a01b03165f90815260696020908152604080832054606a909252909120549091565b604080519283526020830191909152016101ba565b6102cd61066a565b6102cd61032f366004611c47565b610927565b6101ea60715481565b6033546001600160a01b031661024f565b6101ea610942565b6101ad610963565b610304610972565b6101d6610374366004611baf565b610a26565b6101d6610387366004611baf565b610a5c565b6101ea606f5481565b6101d66103a3366004611c27565b6001600160a01b03165f908152606c602052604090205460ff1690565b6101ea6103ce366004611c66565b6001600160a01b039182165f908152606b6020908152604080832093909416825291909152205490565b6102cd610406366004611c27565b610a68565b60606065805461041a90611c97565b80601f016020809104026020016040519081016040528092919081815260200182805461044690611c97565b80156104915780601f1061046857610100808354040283529160200191610491565b820191905f5260205f20905b81548152906001019060200180831161047457829003601f168201915b5050505050905090565b5f6104a7338484610ade565b5060015b92915050565b5f6104bd848484610c01565b6001600160a01b0384165f908152606b60209081526040808320338085529252909120546104f79186916104f2908690611ce3565b610ade565b5060019392505050565b335f818152606b602090815260408083206001600160a01b038716845290915281205490916104a79185906104f2908690611cf6565b60688181548110610546575f80fd5b5f918252602090912001546001600160a01b0316905081565b6001600160a01b0381165f908152606a60205260408120546070548111156105e15760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b5f6105ea610942565b9050815f036105fc57505f9392505050565b6106068183611d1d565b949350505050565b6001600160a01b0381165f908152606c602052604081205460ff161561064957506001600160a01b03165f9081526069602052604090205490565b6104ab8261055f565b919050565b61065f610f70565b6106685f610fca565b565b5f54610100900460ff161580801561068857505f54600160ff909116105b806106a15750303b1580156106a157505f5460ff166001145b6107045760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d8565b5f805460ff191660011790558015610725575f805461ff0019166101001790555b61072d61101b565b60408051808201909152600481526309a8aa8960e31b60208201526065906107559082611d8f565b5060408051808201909152600481526309a8aa8960e31b602082015260669061077e9082611d8f565b506067805460ff191660121790556b204fce5e3e25026110000000606f8190555f19606e8190556107af9190611e4f565b606e546107bc9190611ce3565b6070819055606a5f6107d66033546001600160a01b031690565b6001600160a01b031681526020808201929092526040015f90812092909255606f54607155606c90527f7febd347df14ea35c529e50fb2dd629d4a6226f5ccc893710fb466f8b83823fc805460ff1990811660019081179092557f8c482e007f935c93984ddf7a647e33ef99566883ffae3563aa616dc14d1632f780548216831790557fb6e99d88b536ae7728c4b89ca5a6073cf06fd2059e0aff5b1a4de2c799d9cb968054821683179055610369909252607280549092161790556108a46033546001600160a01b031690565b6001600160a01b03165f6001600160a01b03165f80516020611f3c833981519152606f546040516108d791815260200190565b60405180910390a38015610924575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b61092f610f70565b6072805460ff1916911515919091179055565b5f805f61094d610972565b909250905061095c8183611d1d565b9250505090565b60606066805461041a90611c97565b607054606f545f918291825b606854811015610a1c57606a5f6068838154811061099e5761099e611e62565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546109cc9084611ce3565b925060695f606883815481106109e4576109e4611e62565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054610a129083611ce3565b915060010161097e565b5090939092509050565b335f818152606b602090815260408083206001600160a01b038716845290915281205490916104a79185906104f2908690611ce3565b5f6104a7338484610c01565b610a70610f70565b6001600160a01b038116610ad55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d8565b61092481610fca565b6001600160a01b038316610b405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d8565b6001600160a01b038216610ba15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d8565b6001600160a01b038381165f818152606b602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b607254610100900460ff1615610c15575f80fd5b6072805461ff0019166101001790556001600160a01b038316610c885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d8565b6001600160a01b038216610cea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d8565b5f8111610d4b5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105d8565b610d5483611049565b15156001148015610d7d57506001600160a01b0383165f908152606d602052604090205460ff16155b8015610da157506001600160a01b0383165f908152606c602052604090205460ff16155b15610db857610daf836110e2565b610db88361116d565b610dc182611049565b15156001148015610dea57506001600160a01b0382165f908152606d602052604090205460ff16155b8015610e0e57506001600160a01b0382165f908152606c602052604090205460ff16155b15610e2557610e1c826110e2565b610e258261116d565b6033546001600160a01b03848116911614801590610e5157506033546001600160a01b03838116911614155b15610ebd576001600160a01b0383165f908152606d602052604090205460ff16158015610e9657506001600160a01b0382165f908152606d602052604090205460ff16155b15610ebd57607154811115610ebd5760405162461bcd60e51b81526004016105d890611e76565b6033546001600160a01b03848116911614801590610ee957506033546001600160a01b03838116911614155b15610f55576001600160a01b0383165f908152606d602052604090205460ff16158015610f2e57506001600160a01b0382165f908152606d602052604090205460ff16155b15610f5557607154811115610f555760405162461bcd60e51b81526004016105d890611e76565b610f60838383611279565b50506072805461ff001916905550565b6033546001600160a01b031633146106685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d8565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f54610100900460ff166110415760405162461bcd60e51b81526004016105d890611ebe565b610668611375565b60408051600481526024810182526020810180516001600160e01b031663c45a015560e01b17905290515f91829182916001600160a01b0386169161108e9190611f09565b5f60405180830381855afa9150503d805f81146110c6576040519150601f19603f3d011682016040523d82523d5f602084013e6110cb565b606091505b509150915081801561060657505115159392505050565b6001600160a01b0381165f908152606d602052604090205460ff161561114a5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c75646564000000000060448201526064016105d8565b6001600160a01b03165f908152606d60205260409020805460ff19166001179055565b6001600160a01b0381165f908152606c602052604090205460ff16156111d55760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c75646564000000000060448201526064016105d8565b6001600160a01b0381165f908152606a602052604090205415611214576111fb8161055f565b6001600160a01b0382165f908152606960205260409020555b6001600160a01b03165f818152606c60205260408120805460ff191660019081179091556068805491820181559091527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530180546001600160a01b0319169091179055565b6001600160a01b0383165f908152606c602052604090205460ff1680156112b857506001600160a01b0382165f908152606c602052604090205460ff16155b156112cd576112c88383836113a4565b505050565b6001600160a01b0383165f908152606c602052604090205460ff1615801561130c57506001600160a01b0382165f908152606c602052604090205460ff165b1561131c576112c883838361160c565b6001600160a01b0383165f908152606c602052604090205460ff16801561135a57506001600160a01b0382165f908152606c602052604090205460ff165b1561136a576112c8838383611854565b6112c88383836119a8565b5f54610100900460ff1661139b5760405162461bcd60e51b81526004016105d890611ebe565b61066833610fca565b6113ac611b02565b60725460ff16151560010361144e576103e8606f546113cb9190611d1d565b82111561144e5760405162461bcd60e51b8152602060048201526044602482018190527f43616e6e6f74207075726368617365206d6f7265207468616e2031306d202830908201527f2e312529206f6620737570706c7920696e2073696e676c65207472616e7361636064820152633a34b7b760e11b608482015260a4016105d8565b818152611459610942565b6114639083611f24565b60208201525f604082018190526127109061147e9084611f24565b6114889190611d1d565b6080820152611495610942565b81608001516114a49190611f24565b60a08201819052156114bc5760a08101516101008201525b80516001600160a01b0385165f90815260696020526040812080549091906114e5908490611ce3565b90915550506020808201516001600160a01b0386165f908152606a90925260408220805491929091611518908490611ce3565b909155505060a081015160208201516115319190611ce3565b6001600160a01b0384165f908152606a602052604081208054909190611558908490611cf6565b9091555050610100810151607080545f90611574908490611ce3565b9091555050608081015181516001600160a01b0380861692908716915f80516020611f3c833981519152916115a891611ce3565b60405190815260200160405180910390a3805160808201517fe6ef78c5a1f105fc4b9500eeb7cd09b041367bdee35f1d85761735ee78b3ff2e91906115ed9082611ce3565b604080519283526020830191909152015b60405180910390a150505050565b611614611b02565b600a61161f8561055f565b6116299190611d1d565b82111561169e5760405162461bcd60e51b815260206004820152603a60248201527f43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c60448201527f616e636520696e2073696e676c65207472616e73616374696f6e00000000000060648201526084016105d8565b8181526116a9610942565b6116b39083611f24565b60208201525f60608201819052612710906116ce9084611f24565b6116d89190611d1d565b60c08201526116e5610942565b8160c001516116f49190611f24565b60e082018190521561170c5760e08101516101008201525b8060200151606a5f866001600160a01b03166001600160a01b031681526020019081526020015f205f8282546117429190611ce3565b909155505060c081015181516117589190611ce3565b6001600160a01b0384165f908152606960205260408120805490919061177f908490611cf6565b909155505060e081015160208201516117989190611ce3565b6001600160a01b0384165f908152606a6020526040812080549091906117bf908490611cf6565b9091555050610100810151607080545f906117db908490611ce3565b909155505060c081015181516001600160a01b0380861692908716915f80516020611f3c8339815191529161180f91611ce3565b60405190815260200160405180910390a3805160c08201517fff000e16c1c0d33b07404c2b2abb9832356b5cfd57566d73c9d09611f030890d91906115ed9082611ce3565b61185c611b02565b818152611867610942565b6118719083611f24565b60208083019190915281516001600160a01b0386165f9081526069909252604082208054919290916118a4908490611ce3565b90915550506020808201516001600160a01b0386165f908152606a909252604082208054919290916118d7908490611ce3565b909155505080516001600160a01b0384165f9081526069602052604081208054909190611905908490611cf6565b90915550506020808201516001600160a01b0385165f908152606a90925260408220805491929091611938908490611cf6565b909155505080516040519081526001600160a01b0384811691908616905f80516020611f3c8339815191529060200160405180910390a380516040805182815260208101929092527f2541109a23d530c06d62a3bf63d8d03107194870126fddb7170c0daef360cd8a91016115fe565b6119b0611b02565b670de0b6b3a76400006119c28561055f565b6119cc9190611ce3565b821115611a1b5760405162461bcd60e51b815260206004820152601d60248201527f596f7520676f747461206b6565702031204d45544820616c776179732100000060448201526064016105d8565b818152611a26610942565b611a309083611f24565b60208083018290526001600160a01b0386165f908152606a909152604081208054909190611a5f908490611ce3565b90915550506020808201516001600160a01b0385165f908152606a90925260408220805491929091611a92908490611cf6565b909155505080516040519081526001600160a01b0384811691908616905f80516020611f3c8339815191529060200160405180910390a380516040805182815260208101929092527fd9923e08d9d88ff7a7e9b8460f3163dc6b887fabe315449da3b5cd16bb5e934091016115fe565b6040518061012001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b5f5b83811015611b5f578181015183820152602001611b47565b50505f910152565b602081525f8251806020840152611b85816040850160208701611b45565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610652575f80fd5b5f8060408385031215611bc0575f80fd5b611bc983611b99565b946020939093013593505050565b5f805f60608486031215611be9575f80fd5b611bf284611b99565b9250611c0060208501611b99565b9150604084013590509250925092565b5f60208284031215611c20575f80fd5b5035919050565b5f60208284031215611c37575f80fd5b611c4082611b99565b9392505050565b5f60208284031215611c57575f80fd5b81358015158114611c40575f80fd5b5f8060408385031215611c77575f80fd5b611c8083611b99565b9150611c8e60208401611b99565b90509250929050565b600181811c90821680611cab57607f821691505b602082108103611cc957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104ab576104ab611ccf565b808201808211156104ab576104ab611ccf565b634e487b7160e01b5f52601260045260245ffd5b5f82611d2b57611d2b611d09565b500490565b634e487b7160e01b5f52604160045260245ffd5b601f8211156112c857805f5260205f20601f840160051c81016020851015611d695750805b601f840160051c820191505b81811015611d88575f8155600101611d75565b5050505050565b815167ffffffffffffffff811115611da957611da9611d30565b611dbd81611db78454611c97565b84611d44565b602080601f831160018114611df0575f8415611dd95750858301515b5f19600386901b1c1916600185901b178555611e47565b5f85815260208120601f198616915b82811015611e1e57888601518255948401946001909101908401611dff565b5085821015611e3b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f82611e5d57611e5d611d09565b500690565b634e487b7160e01b5f52603260045260245ffd5b60208082526028908201527f5472616e7366657220616d6f756e74206578636565647320746865206d6178546040820152673c20b6b7bab73a1760c11b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f8251611f1a818460208701611b45565b9190910192915050565b80820281158282048414176104ab576104ab611ccf56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204554e5b0f6426765178e5f7312fdff93570d7615d0349f198c19856faf32ae4b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F91 DUP1 PUSH2 0x28 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80DA2287 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0x97A9D560 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xAF465A27 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAF465A27 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97A9D560 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C0B5E22 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x94E10784 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80DA2287 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x83F24C09 EQ PUSH2 0x321 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45E0B9D4 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x5319E78F GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x5319E78F EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x658C27A9 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45E0B9D4 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x4D09DEB3 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x4DACF3F5 EQ PUSH2 0x267 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x220 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AD PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x6F SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH2 0x1EA PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x1D6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6A SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x66A JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH2 0x1EA PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24F JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x963 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x1EA PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0x1C97 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x446 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x491 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x468 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x491 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x474 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4A7 CALLER DUP5 DUP5 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BD DUP5 DUP5 DUP5 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x4F7 SWAP2 DUP7 SWAP2 PUSH2 0x4F2 SWAP1 DUP7 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4A7 SWAP2 DUP6 SWAP1 PUSH2 0x4F2 SWAP1 DUP7 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x68 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x70 SLOAD DUP2 GT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5EA PUSH2 0x942 JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 SUB PUSH2 0x5FC JUMPI POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x606 DUP2 DUP4 PUSH2 0x1D1D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x649 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4AB DUP3 PUSH2 0x55F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65F PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x668 PUSH0 PUSH2 0xFCA JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x688 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x6A1 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A1 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x725 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x72D PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x9A8AA89 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x65 SWAP1 PUSH2 0x755 SWAP1 DUP3 PUSH2 0x1D8F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x9A8AA89 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x66 SWAP1 PUSH2 0x77E SWAP1 DUP3 PUSH2 0x1D8F JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH0 NOT PUSH1 0x6E DUP2 SWAP1 SSTORE PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0x1E4F JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x70 DUP2 SWAP1 SSTORE PUSH1 0x6A PUSH0 PUSH2 0x7D6 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 SWAP1 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x6F SLOAD PUSH1 0x71 SSTORE PUSH1 0x6C SWAP1 MSTORE PUSH32 0x7FEBD347DF14EA35C529E50FB2DD629D4A6226F5CCC893710FB466F8B83823FC DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH32 0x8C482E007F935C93984DDF7A647E33EF99566883FFAE3563AA616DC14D1632F7 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0xB6E99D88B536AE7728C4B89CA5A6073CF06FD2059E0AFF5B1A4DE2C799D9CB96 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH2 0x369 SWAP1 SWAP3 MSTORE PUSH1 0x72 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x8A4 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x6F SLOAD PUSH1 0x40 MLOAD PUSH2 0x8D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x924 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x92F PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x94D PUSH2 0x972 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x95C DUP2 DUP4 PUSH2 0x1D1D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x6F SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x68 SLOAD DUP2 LT ISZERO PUSH2 0xA1C JUMPI PUSH1 0x6A PUSH0 PUSH1 0x68 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x99E JUMPI PUSH2 0x99E PUSH2 0x1E62 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x9CC SWAP1 DUP5 PUSH2 0x1CE3 JUMP JUMPDEST SWAP3 POP PUSH1 0x69 PUSH0 PUSH1 0x68 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9E4 JUMPI PUSH2 0x9E4 PUSH2 0x1E62 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xA12 SWAP1 DUP4 PUSH2 0x1CE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x97E JUMP JUMPDEST POP SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4A7 SWAP2 DUP6 SWAP1 PUSH2 0x4F2 SWAP1 DUP7 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH0 PUSH2 0x4A7 CALLER DUP5 DUP5 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xA70 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x924 DUP2 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0xD54 DUP4 PUSH2 0x1049 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xD7D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDA1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xDB8 JUMPI PUSH2 0xDAF DUP4 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xDB8 DUP4 PUSH2 0x116D JUMP JUMPDEST PUSH2 0xDC1 DUP3 PUSH2 0x1049 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDEA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE0E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE25 JUMPI PUSH2 0xE1C DUP3 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xE25 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xE51 JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE96 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xEBD JUMPI PUSH1 0x71 SLOAD DUP2 GT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xEE9 JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xF55 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF2E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF55 JUMPI PUSH1 0x71 SLOAD DUP2 GT ISZERO PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH2 0xF60 DUP4 DUP4 DUP4 PUSH2 0x1279 JUMP JUMPDEST POP POP PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x668 PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x606 JUMPI POP MLOAD ISZERO ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x114A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1214 JUMPI PUSH2 0x11FB DUP2 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xA2153420D844928B4421650203C77BABC8B33D7F2E7B450E2966DB0C22097753 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x12B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12C8 DUP4 DUP4 DUP4 PUSH2 0x13A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x130C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x131C JUMPI PUSH2 0x12C8 DUP4 DUP4 DUP4 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x135A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x136A JUMPI PUSH2 0x12C8 DUP4 DUP4 DUP4 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x12C8 DUP4 DUP4 DUP4 PUSH2 0x19A8 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x668 CALLER PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x13AC PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x144E JUMPI PUSH2 0x3E8 PUSH1 0x6F SLOAD PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x43616E6E6F74207075726368617365206D6F7265207468616E2031306D202830 SWAP1 DUP3 ADD MSTORE PUSH32 0x2E312529206F6620737570706C7920696E2073696E676C65207472616E736163 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5D8 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x1459 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1463 SWAP1 DUP4 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2710 SWAP1 PUSH2 0x147E SWAP1 DUP5 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x1488 SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1495 PUSH2 0x942 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x14BC JUMPI PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x14E5 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1518 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1531 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1558 SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x70 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x1574 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x80 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x15A8 SWAP2 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH32 0xE6EF78C5A1F105FC4B9500EEB7CD09B041367BDEE35F1D85761735EE78B3FF2E SWAP2 SWAP1 PUSH2 0x15ED SWAP1 DUP3 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x1614 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0xA PUSH2 0x161F DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x169E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656C6C206D6F7265207468616E20313025206F662062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E636520696E2073696E676C65207472616E73616374696F6E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x16A9 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x16B3 SWAP1 DUP4 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2710 SWAP1 PUSH2 0x16CE SWAP1 DUP5 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x16D8 SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x16E5 PUSH2 0x942 JUMP JUMPDEST DUP2 PUSH1 0xC0 ADD MLOAD PUSH2 0x16F4 SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x170C JUMPI PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x6A PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC0 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x1758 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x177F SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1798 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x17BF SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x70 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x17DB SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC0 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x180F SWAP2 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0xC0 DUP3 ADD MLOAD PUSH32 0xFF000E16C1C0D33B07404C2B2ABB9832356B5CFD57566D73C9D09611F030890D SWAP2 SWAP1 PUSH2 0x15ED SWAP1 DUP3 PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0x185C PUSH2 0x1B02 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x1867 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1871 SWAP1 DUP4 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x18A4 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x18D7 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1905 SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1938 SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x2541109A23D530C06D62A3BF63D8D03107194870126FDDB7170C0DAEF360CD8A SWAP2 ADD PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x1B02 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x19C2 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x19CC SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1A1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520676F747461206B6565702031204D45544820616C7761797321000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D8 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x1A26 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1A30 SWAP1 DUP4 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1A5F SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1A92 SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xD9923E08D9D88FF7A7E9B8460F3163DC6B887FABE315449DA3B5CD16BB5E9340 SWAP2 ADD PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B47 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B85 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B45 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x652 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BC9 DUP4 PUSH2 0x1B99 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BF2 DUP5 PUSH2 0x1B99 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C00 PUSH1 0x20 DUP6 ADD PUSH2 0x1B99 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C20 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C37 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C40 DUP3 PUSH2 0x1B99 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1C40 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 DUP4 PUSH2 0x1B99 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8E PUSH1 0x20 DUP5 ADD PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CAB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CC9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4AB PUSH2 0x1CCF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4AB PUSH2 0x1CCF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1D2B JUMPI PUSH2 0x1D2B PUSH2 0x1D09 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x12C8 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D69 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D88 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D75 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA9 JUMPI PUSH2 0x1DA9 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x1DBD DUP2 PUSH2 0x1DB7 DUP5 SLOAD PUSH2 0x1C97 JUMP JUMPDEST DUP5 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DD9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E47 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E1E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1DFF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E3B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E5D JUMPI PUSH2 0x1E5D PUSH2 0x1D09 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206578636565647320746865206D617854 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3C20B6B7BAB73A17 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1F1A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B45 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4AB JUMPI PUSH2 0x4AB PUSH2 0x1CCF JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SLOAD 0xE5 0xB0 0xF6 TIMESTAMP PUSH8 0x65178E5F7312FDFF SWAP4 JUMPI 0xD PUSH23 0x15D0349F198C19856FAF32AE4B64736F6C634300081800 CALLER ",
							"sourceMap": "26674:21434:0:-:0;;;37095:26;;;-1:-1:-1;;37095:26:0;;;26674:21434;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_565": {
									"entryPoint": 4123,
									"id": 565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_576": {
									"entryPoint": 4981,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1414": {
									"entryPoint": 2782,
									"id": 1414,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_607": {
									"entryPoint": 3952,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_excluded_763": {
									"entryPoint": 1335,
									"id": 763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getCurrentSupply_1369": {
									"entryPoint": 2418,
									"id": 1369,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRate_1314": {
									"entryPoint": 2370,
									"id": 1314,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_519": {
									"entryPoint": null,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_rTotal_799": {
									"entryPoint": null,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tTotal_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tokenTransfer_1648": {
									"entryPoint": 4729,
									"id": 1648,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferBothExcluded_2034": {
									"entryPoint": 6228,
									"id": 2034,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_1956": {
									"entryPoint": 5028,
									"id": 1956,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_664": {
									"entryPoint": 4042,
									"id": 664,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferStandard_2110": {
									"entryPoint": 6568,
									"id": 2110,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_1812": {
									"entryPoint": 5644,
									"id": 1812,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1583": {
									"entryPoint": 3073,
									"id": 1583,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@antiWhale_804": {
									"entryPoint": null,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_1091": {
									"entryPoint": 1179,
									"id": 1091,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_991": {
									"entryPoint": 1550,
									"id": 991,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1145": {
									"entryPoint": 2598,
									"id": 1145,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@excludeAddress_1256": {
									"entryPoint": 4461,
									"id": 1256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludeFromMaxTx_1214": {
									"entryPoint": 4322,
									"id": 1214,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increaseAllowance_1118": {
									"entryPoint": 1281,
									"id": 1118,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_928": {
									"entryPoint": 1642,
									"id": 928,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcludedFromMaxTx_2123": {
									"entryPoint": null,
									"id": 2123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcluded_2136": {
									"entryPoint": null,
									"id": 2136,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isRouter_1193": {
									"entryPoint": 4169,
									"id": 1193,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxTxAmount_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_937": {
									"entryPoint": 1035,
									"id": 937,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_593": {
									"entryPoint": null,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rBalanceOf_1296": {
									"entryPoint": 1375,
									"id": 1296,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_621": {
									"entryPoint": 1623,
									"id": 621,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAntiWhaleStatus_1157": {
									"entryPoint": 2343,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_946": {
									"entryPoint": 2403,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1050": {
									"entryPoint": 1201,
									"id": 1050,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_644": {
									"entryPoint": 2664,
									"id": 644,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1013": {
									"entryPoint": 2652,
									"id": 1013,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@viewTBalanceRBalance_2163": {
									"entryPoint": null,
									"id": 2163,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_address": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6981,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13693:1",
										"nodeType": "YulBlock",
										"src": "0:13693:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "80:184:1",
													"nodeType": "YulBlock",
													"src": "80:184:1",
													"statements": [
														{
															"nativeSrc": "90:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "99:1:1",
																"nodeType": "YulLiteral",
																"src": "99:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "94:1:1",
																	"nodeType": "YulTypedName",
																	"src": "94:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "159:63:1",
																"nodeType": "YulBlock",
																"src": "159:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "184:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "189:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "180:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:1"
																					},
																					"nativeSrc": "180:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "203:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "208:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "199:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:1"
																							},
																							"nativeSrc": "199:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "193:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:1"
																					},
																					"nativeSrc": "193:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "173:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:1"
																			},
																			"nativeSrc": "173:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:1"
																		},
																		"nativeSrc": "173:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "120:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "123:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "117:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:1"
																},
																"nativeSrc": "117:13:1",
																"nodeType": "YulFunctionCall",
																"src": "117:13:1"
															},
															"nativeSrc": "109:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "131:19:1",
																"nodeType": "YulBlock",
																"src": "131:19:1",
																"statements": [
																	{
																		"nativeSrc": "133:15:1",
																		"nodeType": "YulAssignment",
																		"src": "133:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "145:2:1",
																					"nodeType": "YulLiteral",
																					"src": "145:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "138:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:1"
																			},
																			"nativeSrc": "138:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "133:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "113:3:1",
																"nodeType": "YulBlock",
																"src": "113:3:1",
																"statements": []
															},
															"src": "109:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "242:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "247:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "238:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:1"
																		},
																		"nativeSrc": "238:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:1",
																		"nodeType": "YulLiteral",
																		"src": "256:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "231:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:1"
																},
																"nativeSrc": "231:27:1",
																"nodeType": "YulFunctionCall",
																"src": "231:27:1"
															},
															"nativeSrc": "231:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "231:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "14:250:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "58:3:1",
														"nodeType": "YulTypedName",
														"src": "58:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "63:3:1",
														"nodeType": "YulTypedName",
														"src": "63:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "68:6:1",
														"nodeType": "YulTypedName",
														"src": "68:6:1",
														"type": ""
													}
												],
												"src": "14:250:1"
											},
											{
												"body": {
													"nativeSrc": "390:275:1",
													"nodeType": "YulBlock",
													"src": "390:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "407:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "418:2:1",
																		"nodeType": "YulLiteral",
																		"src": "418:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "400:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:1"
																},
																"nativeSrc": "400:21:1",
																"nodeType": "YulFunctionCall",
																"src": "400:21:1"
															},
															"nativeSrc": "400:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "400:21:1"
														},
														{
															"nativeSrc": "430:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "444:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:1"
																},
																"nativeSrc": "444:13:1",
																"nodeType": "YulFunctionCall",
																"src": "444:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "434:6:1",
																	"nodeType": "YulTypedName",
																	"src": "434:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "477:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "488:2:1",
																				"nodeType": "YulLiteral",
																				"src": "488:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:1"
																		},
																		"nativeSrc": "473:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "493:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:1"
																},
																"nativeSrc": "466:34:1",
																"nodeType": "YulFunctionCall",
																"src": "466:34:1"
															},
															"nativeSrc": "466:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "466:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "548:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:1",
																				"nodeType": "YulLiteral",
																				"src": "556:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "544:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:1"
																		},
																		"nativeSrc": "544:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "565:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "576:2:1",
																				"nodeType": "YulLiteral",
																				"src": "576:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "561:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:1"
																		},
																		"nativeSrc": "561:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "581:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "509:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:1"
																},
																"nativeSrc": "509:79:1",
																"nodeType": "YulFunctionCall",
																"src": "509:79:1"
															},
															"nativeSrc": "509:79:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:79:1"
														},
														{
															"nativeSrc": "597:62:1",
															"nodeType": "YulAssignment",
															"src": "597:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "613:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "632:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "640:2:1",
																								"nodeType": "YulLiteral",
																								"src": "640:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "628:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:1"
																						},
																						"nativeSrc": "628:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "649:2:1",
																								"nodeType": "YulLiteral",
																								"src": "649:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "645:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "645:3:1"
																						},
																						"nativeSrc": "645:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "645:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "624:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:1"
																				},
																				"nativeSrc": "624:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "624:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:1"
																		},
																		"nativeSrc": "609:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "609:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "656:2:1",
																		"nodeType": "YulLiteral",
																		"src": "656:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "605:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:1"
																},
																"nativeSrc": "605:54:1",
																"nodeType": "YulFunctionCall",
																"src": "605:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "597:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "269:396:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "359:9:1",
														"nodeType": "YulTypedName",
														"src": "359:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "370:6:1",
														"nodeType": "YulTypedName",
														"src": "370:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "381:4:1",
														"nodeType": "YulTypedName",
														"src": "381:4:1",
														"type": ""
													}
												],
												"src": "269:396:1"
											},
											{
												"body": {
													"nativeSrc": "719:124:1",
													"nodeType": "YulBlock",
													"src": "719:124:1",
													"statements": [
														{
															"nativeSrc": "729:29:1",
															"nodeType": "YulAssignment",
															"src": "729:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "751:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "738:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "738:12:1"
																},
																"nativeSrc": "738:20:1",
																"nodeType": "YulFunctionCall",
																"src": "738:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "729:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "821:16:1",
																"nodeType": "YulBlock",
																"src": "821:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "830:1:1",
																					"nodeType": "YulLiteral",
																					"src": "830:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "833:1:1",
																					"nodeType": "YulLiteral",
																					"src": "833:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "823:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:1"
																			},
																			"nativeSrc": "823:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:1"
																		},
																		"nativeSrc": "823:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "780:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "780:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "791:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "791:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "806:3:1",
																										"nodeType": "YulLiteral",
																										"src": "806:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "811:1:1",
																										"nodeType": "YulLiteral",
																										"src": "811:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "802:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "802:3:1"
																								},
																								"nativeSrc": "802:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "802:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "815:1:1",
																								"nodeType": "YulLiteral",
																								"src": "815:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "798:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "798:3:1"
																						},
																						"nativeSrc": "798:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "798:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "787:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "787:3:1"
																				},
																				"nativeSrc": "787:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "787:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "777:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "777:2:1"
																		},
																		"nativeSrc": "777:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "777:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "770:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "770:6:1"
																},
																"nativeSrc": "770:50:1",
																"nodeType": "YulFunctionCall",
																"src": "770:50:1"
															},
															"nativeSrc": "767:70:1",
															"nodeType": "YulIf",
															"src": "767:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "670:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "698:6:1",
														"nodeType": "YulTypedName",
														"src": "698:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "709:5:1",
														"nodeType": "YulTypedName",
														"src": "709:5:1",
														"type": ""
													}
												],
												"src": "670:173:1"
											},
											{
												"body": {
													"nativeSrc": "935:167:1",
													"nodeType": "YulBlock",
													"src": "935:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "981:16:1",
																"nodeType": "YulBlock",
																"src": "981:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "990:1:1",
																					"nodeType": "YulLiteral",
																					"src": "990:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "993:1:1",
																					"nodeType": "YulLiteral",
																					"src": "993:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "983:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "983:6:1"
																			},
																			"nativeSrc": "983:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "983:12:1"
																		},
																		"nativeSrc": "983:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "983:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "956:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "956:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "965:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "965:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "952:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "952:3:1"
																		},
																		"nativeSrc": "952:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "952:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "977:2:1",
																		"nodeType": "YulLiteral",
																		"src": "977:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "948:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "948:3:1"
																},
																"nativeSrc": "948:32:1",
																"nodeType": "YulFunctionCall",
																"src": "948:32:1"
															},
															"nativeSrc": "945:52:1",
															"nodeType": "YulIf",
															"src": "945:52:1"
														},
														{
															"nativeSrc": "1006:39:1",
															"nodeType": "YulAssignment",
															"src": "1006:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1016:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1016:18:1"
																},
																"nativeSrc": "1016:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1016:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1006:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:1"
																}
															]
														},
														{
															"nativeSrc": "1054:42:1",
															"nodeType": "YulAssignment",
															"src": "1054:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1081:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1092:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1092:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1077:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1077:3:1"
																		},
																		"nativeSrc": "1077:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1077:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1064:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1064:12:1"
																},
																"nativeSrc": "1064:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1064:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1054:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "848:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "893:9:1",
														"nodeType": "YulTypedName",
														"src": "893:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "904:7:1",
														"nodeType": "YulTypedName",
														"src": "904:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "916:6:1",
														"nodeType": "YulTypedName",
														"src": "916:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "924:6:1",
														"nodeType": "YulTypedName",
														"src": "924:6:1",
														"type": ""
													}
												],
												"src": "848:254:1"
											},
											{
												"body": {
													"nativeSrc": "1202:92:1",
													"nodeType": "YulBlock",
													"src": "1202:92:1",
													"statements": [
														{
															"nativeSrc": "1212:26:1",
															"nodeType": "YulAssignment",
															"src": "1212:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1224:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1235:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1235:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1220:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:1"
																},
																"nativeSrc": "1220:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1220:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1212:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1212:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1254:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1254:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1279:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1279:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1272:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1272:6:1"
																				},
																				"nativeSrc": "1272:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1272:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1265:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1265:6:1"
																		},
																		"nativeSrc": "1265:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1265:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:1"
																},
																"nativeSrc": "1247:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1247:41:1"
															},
															"nativeSrc": "1247:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1247:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1107:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1171:9:1",
														"nodeType": "YulTypedName",
														"src": "1171:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1182:6:1",
														"nodeType": "YulTypedName",
														"src": "1182:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1193:4:1",
														"nodeType": "YulTypedName",
														"src": "1193:4:1",
														"type": ""
													}
												],
												"src": "1107:187:1"
											},
											{
												"body": {
													"nativeSrc": "1400:76:1",
													"nodeType": "YulBlock",
													"src": "1400:76:1",
													"statements": [
														{
															"nativeSrc": "1410:26:1",
															"nodeType": "YulAssignment",
															"src": "1410:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1422:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1422:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1433:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1433:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1418:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:1"
																},
																"nativeSrc": "1418:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1418:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1410:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1410:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1463:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1463:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1445:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:1"
																},
																"nativeSrc": "1445:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1445:25:1"
															},
															"nativeSrc": "1445:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1445:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1299:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1369:9:1",
														"nodeType": "YulTypedName",
														"src": "1369:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1380:6:1",
														"nodeType": "YulTypedName",
														"src": "1380:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1391:4:1",
														"nodeType": "YulTypedName",
														"src": "1391:4:1",
														"type": ""
													}
												],
												"src": "1299:177:1"
											},
											{
												"body": {
													"nativeSrc": "1585:224:1",
													"nodeType": "YulBlock",
													"src": "1585:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1631:16:1",
																"nodeType": "YulBlock",
																"src": "1631:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1640:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1643:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1643:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1633:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:1"
																			},
																			"nativeSrc": "1633:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1633:12:1"
																		},
																		"nativeSrc": "1633:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1633:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1606:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1606:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1615:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1615:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1602:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1602:3:1"
																		},
																		"nativeSrc": "1602:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1602:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1627:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1627:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:1"
																},
																"nativeSrc": "1598:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:32:1"
															},
															"nativeSrc": "1595:52:1",
															"nodeType": "YulIf",
															"src": "1595:52:1"
														},
														{
															"nativeSrc": "1656:39:1",
															"nodeType": "YulAssignment",
															"src": "1656:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1685:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1685:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1666:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1666:18:1"
																},
																"nativeSrc": "1666:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1666:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1656:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:1"
																}
															]
														},
														{
															"nativeSrc": "1704:48:1",
															"nodeType": "YulAssignment",
															"src": "1704:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1737:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1737:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1748:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1748:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1733:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1733:3:1"
																		},
																		"nativeSrc": "1733:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1733:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1714:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1714:18:1"
																},
																"nativeSrc": "1714:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1714:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1704:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																}
															]
														},
														{
															"nativeSrc": "1761:42:1",
															"nodeType": "YulAssignment",
															"src": "1761:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1788:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1788:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1799:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1799:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1784:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1784:3:1"
																		},
																		"nativeSrc": "1784:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1771:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1771:12:1"
																},
																"nativeSrc": "1771:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1771:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1761:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1481:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1535:9:1",
														"nodeType": "YulTypedName",
														"src": "1535:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1546:7:1",
														"nodeType": "YulTypedName",
														"src": "1546:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1558:6:1",
														"nodeType": "YulTypedName",
														"src": "1558:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1566:6:1",
														"nodeType": "YulTypedName",
														"src": "1566:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1574:6:1",
														"nodeType": "YulTypedName",
														"src": "1574:6:1",
														"type": ""
													}
												],
												"src": "1481:328:1"
											},
											{
												"body": {
													"nativeSrc": "1911:87:1",
													"nodeType": "YulBlock",
													"src": "1911:87:1",
													"statements": [
														{
															"nativeSrc": "1921:26:1",
															"nodeType": "YulAssignment",
															"src": "1921:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1933:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1933:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1944:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1944:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1929:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1929:3:1"
																},
																"nativeSrc": "1929:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1929:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1921:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1921:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1963:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1963:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1978:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1978:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1986:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1986:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1974:3:1"
																		},
																		"nativeSrc": "1974:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1974:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1956:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:1"
																},
																"nativeSrc": "1956:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1956:36:1"
															},
															"nativeSrc": "1956:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1956:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1814:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1880:9:1",
														"nodeType": "YulTypedName",
														"src": "1880:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1891:6:1",
														"nodeType": "YulTypedName",
														"src": "1891:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1902:4:1",
														"nodeType": "YulTypedName",
														"src": "1902:4:1",
														"type": ""
													}
												],
												"src": "1814:184:1"
											},
											{
												"body": {
													"nativeSrc": "2073:110:1",
													"nodeType": "YulBlock",
													"src": "2073:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2119:16:1",
																"nodeType": "YulBlock",
																"src": "2119:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2128:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2128:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2131:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2131:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2121:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2121:6:1"
																			},
																			"nativeSrc": "2121:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:12:1"
																		},
																		"nativeSrc": "2121:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2094:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2094:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2103:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2103:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2090:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2090:3:1"
																		},
																		"nativeSrc": "2090:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2090:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2115:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2086:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2086:3:1"
																},
																"nativeSrc": "2086:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2086:32:1"
															},
															"nativeSrc": "2083:52:1",
															"nodeType": "YulIf",
															"src": "2083:52:1"
														},
														{
															"nativeSrc": "2144:33:1",
															"nodeType": "YulAssignment",
															"src": "2144:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2154:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2154:12:1"
																},
																"nativeSrc": "2154:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2154:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2003:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2039:9:1",
														"nodeType": "YulTypedName",
														"src": "2039:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2050:7:1",
														"nodeType": "YulTypedName",
														"src": "2050:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2062:6:1",
														"nodeType": "YulTypedName",
														"src": "2062:6:1",
														"type": ""
													}
												],
												"src": "2003:180:1"
											},
											{
												"body": {
													"nativeSrc": "2289:102:1",
													"nodeType": "YulBlock",
													"src": "2289:102:1",
													"statements": [
														{
															"nativeSrc": "2299:26:1",
															"nodeType": "YulAssignment",
															"src": "2299:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2311:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2311:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2322:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2322:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2307:3:1"
																},
																"nativeSrc": "2307:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2307:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2299:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2299:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2341:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2341:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2356:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2356:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2372:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2372:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2377:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2377:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2368:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2368:3:1"
																						},
																						"nativeSrc": "2368:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2368:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2381:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2381:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2364:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2364:3:1"
																				},
																				"nativeSrc": "2364:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2364:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2352:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:1"
																		},
																		"nativeSrc": "2352:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2334:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:1"
																},
																"nativeSrc": "2334:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2334:51:1"
															},
															"nativeSrc": "2334:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2334:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2188:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2258:9:1",
														"nodeType": "YulTypedName",
														"src": "2258:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2269:6:1",
														"nodeType": "YulTypedName",
														"src": "2269:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2280:4:1",
														"nodeType": "YulTypedName",
														"src": "2280:4:1",
														"type": ""
													}
												],
												"src": "2188:203:1"
											},
											{
												"body": {
													"nativeSrc": "2466:116:1",
													"nodeType": "YulBlock",
													"src": "2466:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2512:16:1",
																"nodeType": "YulBlock",
																"src": "2512:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2521:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2521:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2524:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2524:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2514:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2514:6:1"
																			},
																			"nativeSrc": "2514:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2514:12:1"
																		},
																		"nativeSrc": "2514:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2514:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2487:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2487:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2496:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2496:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2483:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2483:3:1"
																		},
																		"nativeSrc": "2483:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2483:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2508:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2479:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2479:3:1"
																},
																"nativeSrc": "2479:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2479:32:1"
															},
															"nativeSrc": "2476:52:1",
															"nodeType": "YulIf",
															"src": "2476:52:1"
														},
														{
															"nativeSrc": "2537:39:1",
															"nodeType": "YulAssignment",
															"src": "2537:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2566:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2566:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2547:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2547:18:1"
																},
																"nativeSrc": "2547:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2547:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2537:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2396:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2432:9:1",
														"nodeType": "YulTypedName",
														"src": "2432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2443:7:1",
														"nodeType": "YulTypedName",
														"src": "2443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2455:6:1",
														"nodeType": "YulTypedName",
														"src": "2455:6:1",
														"type": ""
													}
												],
												"src": "2396:186:1"
											},
											{
												"body": {
													"nativeSrc": "2716:119:1",
													"nodeType": "YulBlock",
													"src": "2716:119:1",
													"statements": [
														{
															"nativeSrc": "2726:26:1",
															"nodeType": "YulAssignment",
															"src": "2726:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2738:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2738:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2749:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2734:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:1"
																},
																"nativeSrc": "2734:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2734:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2726:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2726:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2779:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2779:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2761:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:1"
																},
																"nativeSrc": "2761:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2761:25:1"
															},
															"nativeSrc": "2761:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2761:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2806:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2806:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2817:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2817:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2802:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:1"
																		},
																		"nativeSrc": "2802:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2822:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2822:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2795:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:1"
																},
																"nativeSrc": "2795:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2795:34:1"
															},
															"nativeSrc": "2795:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2795:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2587:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2677:9:1",
														"nodeType": "YulTypedName",
														"src": "2677:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2688:6:1",
														"nodeType": "YulTypedName",
														"src": "2688:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2696:6:1",
														"nodeType": "YulTypedName",
														"src": "2696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2707:4:1",
														"nodeType": "YulTypedName",
														"src": "2707:4:1",
														"type": ""
													}
												],
												"src": "2587:248:1"
											},
											{
												"body": {
													"nativeSrc": "2907:206:1",
													"nodeType": "YulBlock",
													"src": "2907:206:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2953:16:1",
																"nodeType": "YulBlock",
																"src": "2953:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2962:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2962:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2965:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2965:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2955:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2955:6:1"
																			},
																			"nativeSrc": "2955:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2955:12:1"
																		},
																		"nativeSrc": "2955:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2955:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:1"
																		},
																		"nativeSrc": "2924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2920:3:1"
																},
																"nativeSrc": "2920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2920:32:1"
															},
															"nativeSrc": "2917:52:1",
															"nodeType": "YulIf",
															"src": "2917:52:1"
														},
														{
															"nativeSrc": "2978:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2978:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3004:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3004:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2991:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2991:12:1"
																},
																"nativeSrc": "2991:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2991:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2982:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2982:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3067:16:1",
																"nodeType": "YulBlock",
																"src": "3067:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3076:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3076:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3079:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3079:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3069:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3069:6:1"
																			},
																			"nativeSrc": "3069:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3069:12:1"
																		},
																		"nativeSrc": "3069:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3069:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3036:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3036:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3057:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3057:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3050:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3050:6:1"
																						},
																						"nativeSrc": "3050:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3050:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3043:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3043:6:1"
																				},
																				"nativeSrc": "3043:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3043:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3033:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3033:2:1"
																		},
																		"nativeSrc": "3033:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3033:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3026:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3026:6:1"
																},
																"nativeSrc": "3026:40:1",
																"nodeType": "YulFunctionCall",
																"src": "3026:40:1"
															},
															"nativeSrc": "3023:60:1",
															"nodeType": "YulIf",
															"src": "3023:60:1"
														},
														{
															"nativeSrc": "3092:15:1",
															"nodeType": "YulAssignment",
															"src": "3092:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3102:5:1",
																"nodeType": "YulIdentifier",
																"src": "3102:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3092:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3092:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "2840:273:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2873:9:1",
														"nodeType": "YulTypedName",
														"src": "2873:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2884:7:1",
														"nodeType": "YulTypedName",
														"src": "2884:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2896:6:1",
														"nodeType": "YulTypedName",
														"src": "2896:6:1",
														"type": ""
													}
												],
												"src": "2840:273:1"
											},
											{
												"body": {
													"nativeSrc": "3205:173:1",
													"nodeType": "YulBlock",
													"src": "3205:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3251:16:1",
																"nodeType": "YulBlock",
																"src": "3251:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3260:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3260:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3263:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3263:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3253:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3253:6:1"
																			},
																			"nativeSrc": "3253:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3253:12:1"
																		},
																		"nativeSrc": "3253:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3226:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3226:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3235:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3235:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3222:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3222:3:1"
																		},
																		"nativeSrc": "3222:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3222:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3247:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3247:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3218:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:1"
																},
																"nativeSrc": "3218:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3218:32:1"
															},
															"nativeSrc": "3215:52:1",
															"nodeType": "YulIf",
															"src": "3215:52:1"
														},
														{
															"nativeSrc": "3276:39:1",
															"nodeType": "YulAssignment",
															"src": "3276:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3305:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3305:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3286:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3286:18:1"
																},
																"nativeSrc": "3286:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3286:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3276:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:1"
																}
															]
														},
														{
															"nativeSrc": "3324:48:1",
															"nodeType": "YulAssignment",
															"src": "3324:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3357:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3368:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3368:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3353:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:1"
																		},
																		"nativeSrc": "3353:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3353:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3334:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3334:18:1"
																},
																"nativeSrc": "3334:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3334:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3324:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3118:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3163:9:1",
														"nodeType": "YulTypedName",
														"src": "3163:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3174:7:1",
														"nodeType": "YulTypedName",
														"src": "3174:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3186:6:1",
														"nodeType": "YulTypedName",
														"src": "3186:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3194:6:1",
														"nodeType": "YulTypedName",
														"src": "3194:6:1",
														"type": ""
													}
												],
												"src": "3118:260:1"
											},
											{
												"body": {
													"nativeSrc": "3438:325:1",
													"nodeType": "YulBlock",
													"src": "3438:325:1",
													"statements": [
														{
															"nativeSrc": "3448:22:1",
															"nodeType": "YulAssignment",
															"src": "3448:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3462:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3462:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3465:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3465:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3458:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3458:3:1"
																},
																"nativeSrc": "3458:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3458:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3448:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:1"
																}
															]
														},
														{
															"nativeSrc": "3479:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3479:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3509:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3509:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3515:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3515:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3505:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:1"
																},
																"nativeSrc": "3505:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3505:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3483:18:1",
																	"nodeType": "YulTypedName",
																	"src": "3483:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3556:31:1",
																"nodeType": "YulBlock",
																"src": "3556:31:1",
																"statements": [
																	{
																		"nativeSrc": "3558:27:1",
																		"nodeType": "YulAssignment",
																		"src": "3558:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3572:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3572:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3580:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3580:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3568:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3568:3:1"
																			},
																			"nativeSrc": "3568:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3568:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3558:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3536:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3536:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3529:6:1"
																},
																"nativeSrc": "3529:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3529:26:1"
															},
															"nativeSrc": "3526:61:1",
															"nodeType": "YulIf",
															"src": "3526:61:1"
														},
														{
															"body": {
																"nativeSrc": "3646:111:1",
																"nodeType": "YulBlock",
																"src": "3646:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3667:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3667:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3674:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3674:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3679:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3679:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3670:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3670:3:1"
																					},
																					"nativeSrc": "3670:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3670:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3660:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3660:6:1"
																			},
																			"nativeSrc": "3660:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3660:31:1"
																		},
																		"nativeSrc": "3660:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3660:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3711:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3711:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3714:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3714:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3704:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3704:6:1"
																			},
																			"nativeSrc": "3704:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3704:15:1"
																		},
																		"nativeSrc": "3704:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3704:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3739:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3739:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3742:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3742:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3732:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3732:6:1"
																			},
																			"nativeSrc": "3732:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3732:15:1"
																		},
																		"nativeSrc": "3732:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3732:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3602:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3602:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3625:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3625:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3633:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3622:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3622:2:1"
																		},
																		"nativeSrc": "3622:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3599:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3599:2:1"
																},
																"nativeSrc": "3599:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3599:38:1"
															},
															"nativeSrc": "3596:161:1",
															"nodeType": "YulIf",
															"src": "3596:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3383:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3418:4:1",
														"nodeType": "YulTypedName",
														"src": "3418:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3427:6:1",
														"nodeType": "YulTypedName",
														"src": "3427:6:1",
														"type": ""
													}
												],
												"src": "3383:380:1"
											},
											{
												"body": {
													"nativeSrc": "3800:95:1",
													"nodeType": "YulBlock",
													"src": "3800:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3817:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3817:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3824:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3824:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3829:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3829:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3820:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3820:3:1"
																		},
																		"nativeSrc": "3820:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3820:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3810:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:1"
																},
																"nativeSrc": "3810:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3810:31:1"
															},
															"nativeSrc": "3810:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3810:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3857:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3860:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3860:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3850:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:1"
																},
																"nativeSrc": "3850:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3850:15:1"
															},
															"nativeSrc": "3850:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3850:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3881:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3881:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3884:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3884:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3874:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:1"
																},
																"nativeSrc": "3874:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3874:15:1"
															},
															"nativeSrc": "3874:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3874:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3768:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3768:127:1"
											},
											{
												"body": {
													"nativeSrc": "3949:79:1",
													"nodeType": "YulBlock",
													"src": "3949:79:1",
													"statements": [
														{
															"nativeSrc": "3959:17:1",
															"nodeType": "YulAssignment",
															"src": "3959:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3971:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3971:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3974:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3974:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3967:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:1"
																},
																"nativeSrc": "3967:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3967:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3959:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3959:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4000:22:1",
																"nodeType": "YulBlock",
																"src": "4000:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4002:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4002:16:1"
																			},
																			"nativeSrc": "4002:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4002:18:1"
																		},
																		"nativeSrc": "4002:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4002:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3991:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3991:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3997:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3997:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3988:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3988:2:1"
																},
																"nativeSrc": "3988:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3988:11:1"
															},
															"nativeSrc": "3985:37:1",
															"nodeType": "YulIf",
															"src": "3985:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3900:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3931:1:1",
														"nodeType": "YulTypedName",
														"src": "3931:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3934:1:1",
														"nodeType": "YulTypedName",
														"src": "3934:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3940:4:1",
														"nodeType": "YulTypedName",
														"src": "3940:4:1",
														"type": ""
													}
												],
												"src": "3900:128:1"
											},
											{
												"body": {
													"nativeSrc": "4081:77:1",
													"nodeType": "YulBlock",
													"src": "4081:77:1",
													"statements": [
														{
															"nativeSrc": "4091:16:1",
															"nodeType": "YulAssignment",
															"src": "4091:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4102:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4102:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4105:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4105:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4098:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4098:3:1"
																},
																"nativeSrc": "4098:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4098:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4091:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4091:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4130:22:1",
																"nodeType": "YulBlock",
																"src": "4130:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4132:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4132:16:1"
																			},
																			"nativeSrc": "4132:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:18:1"
																		},
																		"nativeSrc": "4132:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4122:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4122:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4125:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4125:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4119:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4119:2:1"
																},
																"nativeSrc": "4119:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4119:10:1"
															},
															"nativeSrc": "4116:36:1",
															"nodeType": "YulIf",
															"src": "4116:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4033:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4064:1:1",
														"nodeType": "YulTypedName",
														"src": "4064:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4067:1:1",
														"nodeType": "YulTypedName",
														"src": "4067:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4073:3:1",
														"nodeType": "YulTypedName",
														"src": "4073:3:1",
														"type": ""
													}
												],
												"src": "4033:125:1"
											},
											{
												"body": {
													"nativeSrc": "4337:232:1",
													"nodeType": "YulBlock",
													"src": "4337:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4354:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4354:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4365:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4365:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4347:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4347:6:1"
																},
																"nativeSrc": "4347:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4347:21:1"
															},
															"nativeSrc": "4347:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4347:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4388:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4388:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4384:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4384:3:1"
																		},
																		"nativeSrc": "4384:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4384:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4404:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4377:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4377:6:1"
																},
																"nativeSrc": "4377:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4377:30:1"
															},
															"nativeSrc": "4377:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4377:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4427:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4427:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4438:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4438:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4423:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4423:3:1"
																		},
																		"nativeSrc": "4423:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4423:18:1"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nativeSrc": "4443:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4443:34:1",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4416:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4416:6:1"
																},
																"nativeSrc": "4416:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4416:62:1"
															},
															"nativeSrc": "4416:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4416:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4498:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4509:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4494:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nativeSrc": "4494:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:1"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nativeSrc": "4514:12:1",
																		"nodeType": "YulLiteral",
																		"src": "4514:12:1",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4487:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:1"
																},
																"nativeSrc": "4487:40:1",
																"nodeType": "YulFunctionCall",
																"src": "4487:40:1"
															},
															"nativeSrc": "4487:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "4487:40:1"
														},
														{
															"nativeSrc": "4536:27:1",
															"nodeType": "YulAssignment",
															"src": "4536:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4548:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4548:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4559:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4559:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4544:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4544:3:1"
																},
																"nativeSrc": "4544:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4544:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4536:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4536:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4163:406:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4314:9:1",
														"nodeType": "YulTypedName",
														"src": "4314:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4328:4:1",
														"nodeType": "YulTypedName",
														"src": "4328:4:1",
														"type": ""
													}
												],
												"src": "4163:406:1"
											},
											{
												"body": {
													"nativeSrc": "4606:95:1",
													"nodeType": "YulBlock",
													"src": "4606:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4623:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4623:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4630:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4630:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4635:10:1",
																				"nodeType": "YulLiteral",
																				"src": "4635:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4626:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:1"
																		},
																		"nativeSrc": "4626:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4626:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4616:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:1"
																},
																"nativeSrc": "4616:31:1",
																"nodeType": "YulFunctionCall",
																"src": "4616:31:1"
															},
															"nativeSrc": "4616:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "4616:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4663:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4663:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4666:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4666:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4656:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4656:6:1"
																},
																"nativeSrc": "4656:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4656:15:1"
															},
															"nativeSrc": "4656:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4656:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4687:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4687:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4690:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4690:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4680:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:1"
																},
																"nativeSrc": "4680:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4680:15:1"
															},
															"nativeSrc": "4680:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4680:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4574:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4574:127:1"
											},
											{
												"body": {
													"nativeSrc": "4752:74:1",
													"nodeType": "YulBlock",
													"src": "4752:74:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4775:22:1",
																"nodeType": "YulBlock",
																"src": "4775:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4777:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4777:16:1"
																			},
																			"nativeSrc": "4777:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4777:18:1"
																		},
																		"nativeSrc": "4777:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4777:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4772:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4772:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4765:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:1"
																},
																"nativeSrc": "4765:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4765:9:1"
															},
															"nativeSrc": "4762:35:1",
															"nodeType": "YulIf",
															"src": "4762:35:1"
														},
														{
															"nativeSrc": "4806:14:1",
															"nodeType": "YulAssignment",
															"src": "4806:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4815:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4815:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4818:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4818:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4811:3:1"
																},
																"nativeSrc": "4811:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4811:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4806:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4806:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4706:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4737:1:1",
														"nodeType": "YulTypedName",
														"src": "4737:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4740:1:1",
														"nodeType": "YulTypedName",
														"src": "4740:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4746:1:1",
														"nodeType": "YulTypedName",
														"src": "4746:1:1",
														"type": ""
													}
												],
												"src": "4706:120:1"
											},
											{
												"body": {
													"nativeSrc": "5005:236:1",
													"nodeType": "YulBlock",
													"src": "5005:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5022:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5022:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5033:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5015:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:1"
																},
																"nativeSrc": "5015:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5015:21:1"
															},
															"nativeSrc": "5015:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5015:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5056:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5056:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5067:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5067:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5052:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5052:3:1"
																		},
																		"nativeSrc": "5052:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5052:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5072:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5072:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5045:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5045:6:1"
																},
																"nativeSrc": "5045:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5045:30:1"
															},
															"nativeSrc": "5045:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5045:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5095:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5095:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5106:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5106:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5091:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5091:3:1"
																		},
																		"nativeSrc": "5091:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5091:18:1"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "5111:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5111:34:1",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5084:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5084:6:1"
																},
																"nativeSrc": "5084:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5084:62:1"
															},
															"nativeSrc": "5084:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5084:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5166:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5166:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5177:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5177:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5162:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:1"
																		},
																		"nativeSrc": "5162:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:18:1"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "5182:16:1",
																		"nodeType": "YulLiteral",
																		"src": "5182:16:1",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5155:6:1"
																},
																"nativeSrc": "5155:44:1",
																"nodeType": "YulFunctionCall",
																"src": "5155:44:1"
															},
															"nativeSrc": "5155:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "5155:44:1"
														},
														{
															"nativeSrc": "5208:27:1",
															"nodeType": "YulAssignment",
															"src": "5208:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5220:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5220:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5231:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5231:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:1"
																},
																"nativeSrc": "5216:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5216:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5208:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5208:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4831:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4982:9:1",
														"nodeType": "YulTypedName",
														"src": "4982:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4996:4:1",
														"nodeType": "YulTypedName",
														"src": "4996:4:1",
														"type": ""
													}
												],
												"src": "4831:410:1"
											},
											{
												"body": {
													"nativeSrc": "5278:95:1",
													"nodeType": "YulBlock",
													"src": "5278:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5295:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5295:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5302:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5302:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5307:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5307:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5298:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5298:3:1"
																		},
																		"nativeSrc": "5298:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5298:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5288:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5288:6:1"
																},
																"nativeSrc": "5288:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5288:31:1"
															},
															"nativeSrc": "5288:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5288:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5335:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5335:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5338:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:1"
																},
																"nativeSrc": "5328:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5328:15:1"
															},
															"nativeSrc": "5328:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5328:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5359:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5359:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5362:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5362:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5352:6:1"
																},
																"nativeSrc": "5352:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5352:15:1"
															},
															"nativeSrc": "5352:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5352:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5246:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5246:127:1"
											},
											{
												"body": {
													"nativeSrc": "5434:65:1",
													"nodeType": "YulBlock",
													"src": "5434:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5451:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5451:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5454:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5454:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5444:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:1"
																},
																"nativeSrc": "5444:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5444:14:1"
															},
															"nativeSrc": "5444:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "5444:14:1"
														},
														{
															"nativeSrc": "5467:26:1",
															"nodeType": "YulAssignment",
															"src": "5467:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5485:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5485:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5488:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5488:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5475:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5475:9:1"
																},
																"nativeSrc": "5475:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5475:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5467:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5467:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "5378:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5417:3:1",
														"nodeType": "YulTypedName",
														"src": "5417:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5425:4:1",
														"nodeType": "YulTypedName",
														"src": "5425:4:1",
														"type": ""
													}
												],
												"src": "5378:121:1"
											},
											{
												"body": {
													"nativeSrc": "5585:437:1",
													"nodeType": "YulBlock",
													"src": "5585:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5618:398:1",
																"nodeType": "YulBlock",
																"src": "5618:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5639:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5639:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "5642:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "5642:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5632:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5632:6:1"
																			},
																			"nativeSrc": "5632:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5632:16:1"
																		},
																		"nativeSrc": "5632:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5632:16:1"
																	},
																	{
																		"nativeSrc": "5661:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5661:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5683:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5683:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5686:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5686:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "5673:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5673:9:1"
																			},
																			"nativeSrc": "5673:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5673:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "5665:4:1",
																				"nodeType": "YulTypedName",
																				"src": "5665:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5704:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5704:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "5727:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "5727:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5737:1:1",
																							"nodeType": "YulLiteral",
																							"src": "5737:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "5744:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "5744:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5756:2:1",
																									"nodeType": "YulLiteral",
																									"src": "5756:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5740:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5740:3:1"
																							},
																							"nativeSrc": "5740:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5740:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "5733:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5733:3:1"
																					},
																					"nativeSrc": "5733:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5733:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5723:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5723:3:1"
																			},
																			"nativeSrc": "5723:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5723:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5708:11:1",
																				"nodeType": "YulTypedName",
																				"src": "5708:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5798:23:1",
																			"nodeType": "YulBlock",
																			"src": "5798:23:1",
																			"statements": [
																				{
																					"nativeSrc": "5800:19:1",
																					"nodeType": "YulAssignment",
																					"src": "5800:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "5815:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "5815:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5800:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "5800:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5780:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "5780:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5792:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5792:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5777:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5777:2:1"
																			},
																			"nativeSrc": "5777:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5777:20:1"
																		},
																		"nativeSrc": "5774:47:1",
																		"nodeType": "YulIf",
																		"src": "5774:47:1"
																	},
																	{
																		"nativeSrc": "5834:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5834:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "5848:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "5848:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5858:1:1",
																							"nodeType": "YulLiteral",
																							"src": "5858:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5865:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5865:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5870:2:1",
																									"nodeType": "YulLiteral",
																									"src": "5870:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5861:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5861:3:1"
																							},
																							"nativeSrc": "5861:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5861:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "5854:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5854:3:1"
																					},
																					"nativeSrc": "5854:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5854:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5844:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5844:3:1"
																			},
																			"nativeSrc": "5844:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5844:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "5838:2:1",
																				"nodeType": "YulTypedName",
																				"src": "5838:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5888:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5888:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "5901:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "5901:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "5892:5:1",
																				"nodeType": "YulTypedName",
																				"src": "5892:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5986:20:1",
																			"nodeType": "YulBlock",
																			"src": "5986:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "5995:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "5995:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6002:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6002:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "5988:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5988:6:1"
																						},
																						"nativeSrc": "5988:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5988:16:1"
																					},
																					"nativeSrc": "5988:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "5988:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5936:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "5936:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5943:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5943:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5933:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5933:2:1"
																			},
																			"nativeSrc": "5933:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5933:13:1"
																		},
																		"nativeSrc": "5925:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "5947:26:1",
																			"nodeType": "YulBlock",
																			"src": "5947:26:1",
																			"statements": [
																				{
																					"nativeSrc": "5949:22:1",
																					"nodeType": "YulAssignment",
																					"src": "5949:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "5962:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "5962:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5969:1:1",
																								"nodeType": "YulLiteral",
																								"src": "5969:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5958:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5958:3:1"
																						},
																						"nativeSrc": "5958:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5958:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "5949:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "5949:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "5929:3:1",
																			"nodeType": "YulBlock",
																			"src": "5929:3:1",
																			"statements": []
																		},
																		"src": "5925:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5601:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5601:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5606:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5606:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5598:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5598:2:1"
																},
																"nativeSrc": "5598:11:1",
																"nodeType": "YulFunctionCall",
																"src": "5598:11:1"
															},
															"nativeSrc": "5595:421:1",
															"nodeType": "YulIf",
															"src": "5595:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "5504:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5557:5:1",
														"nodeType": "YulTypedName",
														"src": "5557:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5564:3:1",
														"nodeType": "YulTypedName",
														"src": "5564:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5569:10:1",
														"nodeType": "YulTypedName",
														"src": "5569:10:1",
														"type": ""
													}
												],
												"src": "5504:518:1"
											},
											{
												"body": {
													"nativeSrc": "6112:81:1",
													"nodeType": "YulBlock",
													"src": "6112:81:1",
													"statements": [
														{
															"nativeSrc": "6122:65:1",
															"nodeType": "YulAssignment",
															"src": "6122:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "6137:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6137:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6155:1:1",
																										"nodeType": "YulLiteral",
																										"src": "6155:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "6158:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6158:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "6151:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6151:3:1"
																								},
																								"nativeSrc": "6151:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6151:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6168:1:1",
																										"nodeType": "YulLiteral",
																										"src": "6168:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "6164:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6164:3:1"
																								},
																								"nativeSrc": "6164:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6164:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "6147:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6147:3:1"
																						},
																						"nativeSrc": "6147:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6147:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6143:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6143:3:1"
																				},
																				"nativeSrc": "6143:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6143:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6133:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6133:3:1"
																		},
																		"nativeSrc": "6133:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6133:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6179:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6179:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6182:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6182:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6175:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6175:3:1"
																		},
																		"nativeSrc": "6175:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6175:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6130:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6130:2:1"
																},
																"nativeSrc": "6130:57:1",
																"nodeType": "YulFunctionCall",
																"src": "6130:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6122:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6122:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6027:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6089:4:1",
														"nodeType": "YulTypedName",
														"src": "6089:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6095:3:1",
														"nodeType": "YulTypedName",
														"src": "6095:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6103:4:1",
														"nodeType": "YulTypedName",
														"src": "6103:4:1",
														"type": ""
													}
												],
												"src": "6027:166:1"
											},
											{
												"body": {
													"nativeSrc": "6294:1249:1",
													"nodeType": "YulBlock",
													"src": "6294:1249:1",
													"statements": [
														{
															"nativeSrc": "6304:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6304:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6324:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6324:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6318:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6318:5:1"
																},
																"nativeSrc": "6318:10:1",
																"nodeType": "YulFunctionCall",
																"src": "6318:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6308:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6308:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6371:22:1",
																"nodeType": "YulBlock",
																"src": "6371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6373:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6373:16:1"
																			},
																			"nativeSrc": "6373:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6373:18:1"
																		},
																		"nativeSrc": "6373:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6343:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6343:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6351:18:1",
																		"nodeType": "YulLiteral",
																		"src": "6351:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6340:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6340:2:1"
																},
																"nativeSrc": "6340:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6340:30:1"
															},
															"nativeSrc": "6337:56:1",
															"nodeType": "YulIf",
															"src": "6337:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6446:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6446:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6484:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "6484:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6478:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6478:5:1"
																				},
																				"nativeSrc": "6478:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6478:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "6452:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "6452:25:1"
																		},
																		"nativeSrc": "6452:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6452:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6492:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6492:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "6402:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6402:43:1"
																},
																"nativeSrc": "6402:97:1",
																"nodeType": "YulFunctionCall",
																"src": "6402:97:1"
															},
															"nativeSrc": "6402:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "6402:97:1"
														},
														{
															"nativeSrc": "6508:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6508:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "6525:1:1",
																"nodeType": "YulLiteral",
																"src": "6525:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6512:9:1",
																	"nodeType": "YulTypedName",
																	"src": "6512:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6535:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6535:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "6554:4:1",
																"nodeType": "YulLiteral",
																"src": "6554:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "6539:11:1",
																	"nodeType": "YulTypedName",
																	"src": "6539:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6567:17:1",
															"nodeType": "YulAssignment",
															"src": "6567:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "6580:4:1",
																"nodeType": "YulLiteral",
																"src": "6580:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6567:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6567:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6630:656:1",
																		"nodeType": "YulBlock",
																		"src": "6630:656:1",
																		"statements": [
																			{
																				"nativeSrc": "6644:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6644:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6663:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "6663:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6675:2:1",
																									"nodeType": "YulLiteral",
																									"src": "6675:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6671:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6671:3:1"
																							},
																							"nativeSrc": "6671:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6671:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6659:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6659:3:1"
																					},
																					"nativeSrc": "6659:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6659:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6648:7:1",
																						"nodeType": "YulTypedName",
																						"src": "6648:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6692:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6692:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6736:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6736:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "6706:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "6706:29:1"
																					},
																					"nativeSrc": "6706:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6706:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6696:6:1",
																						"nodeType": "YulTypedName",
																						"src": "6696:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6754:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6754:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6763:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6763:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6758:1:1",
																						"nodeType": "YulTypedName",
																						"src": "6758:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6841:172:1",
																					"nodeType": "YulBlock",
																					"src": "6841:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6866:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6866:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6884:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "6884:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6889:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "6889:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6880:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6880:3:1"
																												},
																												"nativeSrc": "6880:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6880:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6874:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "6874:5:1"
																										},
																										"nativeSrc": "6874:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6874:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6859:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6859:6:1"
																								},
																								"nativeSrc": "6859:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6859:42:1"
																							},
																							"nativeSrc": "6859:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6859:42:1"
																						},
																						{
																							"nativeSrc": "6918:24:1",
																							"nodeType": "YulAssignment",
																							"src": "6918:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6932:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6932:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6940:1:1",
																										"nodeType": "YulLiteral",
																										"src": "6940:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6928:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6928:3:1"
																								},
																								"nativeSrc": "6928:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6928:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6918:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6918:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6959:40:1",
																							"nodeType": "YulAssignment",
																							"src": "6959:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6976:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "6976:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "6987:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "6987:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6972:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6972:3:1"
																								},
																								"nativeSrc": "6972:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6972:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6959:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "6959:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6788:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "6788:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6791:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "6791:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6785:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6785:2:1"
																					},
																					"nativeSrc": "6785:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6785:14:1"
																				},
																				"nativeSrc": "6777:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6800:28:1",
																					"nodeType": "YulBlock",
																					"src": "6800:28:1",
																					"statements": [
																						{
																							"nativeSrc": "6802:24:1",
																							"nodeType": "YulAssignment",
																							"src": "6802:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6811:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "6811:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "6814:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "6814:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6807:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6807:3:1"
																								},
																								"nativeSrc": "6807:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6807:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6802:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "6802:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6781:3:1",
																					"nodeType": "YulBlock",
																					"src": "6781:3:1",
																					"statements": []
																				},
																				"src": "6777:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "7061:166:1",
																					"nodeType": "YulBlock",
																					"src": "7061:166:1",
																					"statements": [
																						{
																							"nativeSrc": "7079:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7079:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7106:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "7106:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7111:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "7111:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7102:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "7102:3:1"
																										},
																										"nativeSrc": "7102:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "7102:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7096:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "7096:5:1"
																								},
																								"nativeSrc": "7096:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "7096:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7083:9:1",
																									"nodeType": "YulTypedName",
																									"src": "7083:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7146:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "7146:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7158:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "7158:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "7185:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "7185:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "7188:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "7188:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "7181:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "7181:3:1"
																																		},
																																		"nativeSrc": "7181:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "7181:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7197:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "7197:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "7177:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "7177:3:1"
																																},
																																"nativeSrc": "7177:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "7177:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7207:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "7207:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "7203:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "7203:3:1"
																																},
																																"nativeSrc": "7203:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "7203:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "7173:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "7173:3:1"
																														},
																														"nativeSrc": "7173:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "7173:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "7169:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "7169:3:1"
																												},
																												"nativeSrc": "7169:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "7169:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "7154:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "7154:3:1"
																										},
																										"nativeSrc": "7154:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "7154:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7139:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "7139:6:1"
																								},
																								"nativeSrc": "7139:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "7139:74:1"
																							},
																							"nativeSrc": "7139:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "7139:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7032:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "7032:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7041:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "7041:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7029:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "7029:2:1"
																					},
																					"nativeSrc": "7029:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7029:19:1"
																				},
																				"nativeSrc": "7026:201:1",
																				"nodeType": "YulIf",
																				"src": "7026:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7247:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "7247:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "7261:1:1",
																											"nodeType": "YulLiteral",
																											"src": "7261:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "7264:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "7264:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "7257:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "7257:3:1"
																									},
																									"nativeSrc": "7257:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "7257:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7273:1:1",
																									"nodeType": "YulLiteral",
																									"src": "7273:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7253:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "7253:3:1"
																							},
																							"nativeSrc": "7253:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "7253:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7240:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7240:6:1"
																					},
																					"nativeSrc": "7240:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7240:36:1"
																				},
																				"nativeSrc": "7240:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "7240:36:1"
																			}
																		]
																	},
																	"nativeSrc": "6623:663:1",
																	"nodeType": "YulCase",
																	"src": "6623:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6628:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6628:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7303:234:1",
																		"nodeType": "YulBlock",
																		"src": "7303:234:1",
																		"statements": [
																			{
																				"nativeSrc": "7317:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7317:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7330:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7330:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7321:5:1",
																						"nodeType": "YulTypedName",
																						"src": "7321:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7366:67:1",
																					"nodeType": "YulBlock",
																					"src": "7366:67:1",
																					"statements": [
																						{
																							"nativeSrc": "7384:35:1",
																							"nodeType": "YulAssignment",
																							"src": "7384:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7403:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "7403:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7408:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "7408:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7399:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "7399:3:1"
																										},
																										"nativeSrc": "7399:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "7399:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7393:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "7393:5:1"
																								},
																								"nativeSrc": "7393:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "7393:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7384:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "7384:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7347:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7347:6:1"
																				},
																				"nativeSrc": "7344:89:1",
																				"nodeType": "YulIf",
																				"src": "7344:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7453:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "7453:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7512:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "7512:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7519:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "7519:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7459:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "7459:52:1"
																							},
																							"nativeSrc": "7459:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "7459:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7446:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7446:6:1"
																					},
																					"nativeSrc": "7446:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7446:81:1"
																				},
																				"nativeSrc": "7446:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "7446:81:1"
																			}
																		]
																	},
																	"nativeSrc": "7295:242:1",
																	"nodeType": "YulCase",
																	"src": "7295:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6603:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6603:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6611:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6611:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6600:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6600:2:1"
																},
																"nativeSrc": "6600:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6600:14:1"
															},
															"nativeSrc": "6593:944:1",
															"nodeType": "YulSwitch",
															"src": "6593:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6198:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6279:4:1",
														"nodeType": "YulTypedName",
														"src": "6279:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6285:3:1",
														"nodeType": "YulTypedName",
														"src": "6285:3:1",
														"type": ""
													}
												],
												"src": "6198:1345:1"
											},
											{
												"body": {
													"nativeSrc": "7586:74:1",
													"nodeType": "YulBlock",
													"src": "7586:74:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7609:22:1",
																"nodeType": "YulBlock",
																"src": "7609:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7611:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7611:16:1"
																			},
																			"nativeSrc": "7611:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7611:18:1"
																		},
																		"nativeSrc": "7611:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7611:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7606:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7606:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7599:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7599:6:1"
																},
																"nativeSrc": "7599:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7599:9:1"
															},
															"nativeSrc": "7596:35:1",
															"nodeType": "YulIf",
															"src": "7596:35:1"
														},
														{
															"nativeSrc": "7640:14:1",
															"nodeType": "YulAssignment",
															"src": "7640:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7649:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7649:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7652:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7652:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "7645:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7645:3:1"
																},
																"nativeSrc": "7645:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7645:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7640:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7640:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "7548:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7571:1:1",
														"nodeType": "YulTypedName",
														"src": "7571:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7574:1:1",
														"nodeType": "YulTypedName",
														"src": "7574:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7580:1:1",
														"nodeType": "YulTypedName",
														"src": "7580:1:1",
														"type": ""
													}
												],
												"src": "7548:112:1"
											},
											{
												"body": {
													"nativeSrc": "7772:87:1",
													"nodeType": "YulBlock",
													"src": "7772:87:1",
													"statements": [
														{
															"nativeSrc": "7782:26:1",
															"nodeType": "YulAssignment",
															"src": "7782:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7794:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7794:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7805:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7790:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7790:3:1"
																},
																"nativeSrc": "7790:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7790:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7782:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7782:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7824:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7824:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7839:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7839:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7847:4:1",
																				"nodeType": "YulLiteral",
																				"src": "7847:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7835:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:1"
																		},
																		"nativeSrc": "7835:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7835:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7817:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7817:6:1"
																},
																"nativeSrc": "7817:36:1",
																"nodeType": "YulFunctionCall",
																"src": "7817:36:1"
															},
															"nativeSrc": "7817:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "7817:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7665:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7741:9:1",
														"nodeType": "YulTypedName",
														"src": "7741:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7752:6:1",
														"nodeType": "YulTypedName",
														"src": "7752:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7763:4:1",
														"nodeType": "YulTypedName",
														"src": "7763:4:1",
														"type": ""
													}
												],
												"src": "7665:194:1"
											},
											{
												"body": {
													"nativeSrc": "7896:95:1",
													"nodeType": "YulBlock",
													"src": "7896:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7913:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7913:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7920:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7920:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7925:10:1",
																				"nodeType": "YulLiteral",
																				"src": "7925:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7916:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:1"
																		},
																		"nativeSrc": "7916:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7906:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:1"
																},
																"nativeSrc": "7906:31:1",
																"nodeType": "YulFunctionCall",
																"src": "7906:31:1"
															},
															"nativeSrc": "7906:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "7906:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7953:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7953:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7956:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7956:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7946:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:1"
																},
																"nativeSrc": "7946:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7946:15:1"
															},
															"nativeSrc": "7946:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7946:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7977:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7977:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7980:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7980:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7970:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7970:6:1"
																},
																"nativeSrc": "7970:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7970:15:1"
															},
															"nativeSrc": "7970:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7970:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7864:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7864:127:1"
											},
											{
												"body": {
													"nativeSrc": "8170:228:1",
													"nodeType": "YulBlock",
													"src": "8170:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8187:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8187:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8198:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8198:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8180:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8180:6:1"
																},
																"nativeSrc": "8180:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8180:21:1"
															},
															"nativeSrc": "8180:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8180:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8221:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8221:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8232:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8232:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8217:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8217:3:1"
																		},
																		"nativeSrc": "8217:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8217:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8237:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8237:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8210:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:1"
																},
																"nativeSrc": "8210:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8210:30:1"
															},
															"nativeSrc": "8210:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8210:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8260:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8260:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8271:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8271:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8256:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:1"
																		},
																		"nativeSrc": "8256:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "8276:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8276:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8249:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8249:6:1"
																},
																"nativeSrc": "8249:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8249:62:1"
															},
															"nativeSrc": "8249:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8249:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8331:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8331:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8342:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8342:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8327:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8327:3:1"
																		},
																		"nativeSrc": "8327:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8327:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "8347:8:1",
																		"nodeType": "YulLiteral",
																		"src": "8347:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8320:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8320:6:1"
																},
																"nativeSrc": "8320:36:1",
																"nodeType": "YulFunctionCall",
																"src": "8320:36:1"
															},
															"nativeSrc": "8320:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "8320:36:1"
														},
														{
															"nativeSrc": "8365:27:1",
															"nodeType": "YulAssignment",
															"src": "8365:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8377:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8377:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8388:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8388:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8373:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8373:3:1"
																},
																"nativeSrc": "8373:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8373:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8365:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8365:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7996:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8147:9:1",
														"nodeType": "YulTypedName",
														"src": "8147:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8161:4:1",
														"nodeType": "YulTypedName",
														"src": "8161:4:1",
														"type": ""
													}
												],
												"src": "7996:402:1"
											},
											{
												"body": {
													"nativeSrc": "8577:226:1",
													"nodeType": "YulBlock",
													"src": "8577:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8594:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8594:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8605:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8605:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8587:6:1"
																},
																"nativeSrc": "8587:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8587:21:1"
															},
															"nativeSrc": "8587:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8587:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8628:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8628:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8639:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8639:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8624:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8624:3:1"
																		},
																		"nativeSrc": "8624:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8624:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8644:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8644:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8617:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8617:6:1"
																},
																"nativeSrc": "8617:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8617:30:1"
															},
															"nativeSrc": "8617:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8617:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8667:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8667:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8678:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8678:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8663:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8663:3:1"
																		},
																		"nativeSrc": "8663:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8663:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8683:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8683:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8656:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8656:6:1"
																},
																"nativeSrc": "8656:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8656:62:1"
															},
															"nativeSrc": "8656:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8656:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8738:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8738:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8749:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8749:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8734:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8734:3:1"
																		},
																		"nativeSrc": "8734:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8734:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8754:6:1",
																		"nodeType": "YulLiteral",
																		"src": "8754:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8727:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8727:6:1"
																},
																"nativeSrc": "8727:34:1",
																"nodeType": "YulFunctionCall",
																"src": "8727:34:1"
															},
															"nativeSrc": "8727:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "8727:34:1"
														},
														{
															"nativeSrc": "8770:27:1",
															"nodeType": "YulAssignment",
															"src": "8770:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8782:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8782:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8793:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8793:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8778:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8778:3:1"
																},
																"nativeSrc": "8778:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8778:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8770:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8770:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8403:400:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8554:9:1",
														"nodeType": "YulTypedName",
														"src": "8554:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8568:4:1",
														"nodeType": "YulTypedName",
														"src": "8568:4:1",
														"type": ""
													}
												],
												"src": "8403:400:1"
											},
											{
												"body": {
													"nativeSrc": "8982:224:1",
													"nodeType": "YulBlock",
													"src": "8982:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8999:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8999:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9010:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9010:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8992:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8992:6:1"
																},
																"nativeSrc": "8992:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8992:21:1"
															},
															"nativeSrc": "8992:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8992:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9033:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9033:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9044:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9044:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9029:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9029:3:1"
																		},
																		"nativeSrc": "9029:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9029:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9049:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9049:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9022:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9022:6:1"
																},
																"nativeSrc": "9022:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9022:30:1"
															},
															"nativeSrc": "9022:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9022:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9072:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9072:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9083:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9083:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9068:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:1"
																		},
																		"nativeSrc": "9068:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9068:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "9088:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9088:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9061:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9061:6:1"
																},
																"nativeSrc": "9061:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9061:62:1"
															},
															"nativeSrc": "9061:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9061:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9143:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9143:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9154:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9154:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9139:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9139:3:1"
																		},
																		"nativeSrc": "9139:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9139:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "9159:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9159:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9132:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:1"
																},
																"nativeSrc": "9132:32:1",
																"nodeType": "YulFunctionCall",
																"src": "9132:32:1"
															},
															"nativeSrc": "9132:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "9132:32:1"
														},
														{
															"nativeSrc": "9173:27:1",
															"nodeType": "YulAssignment",
															"src": "9173:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9185:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9196:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9196:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9181:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:1"
																},
																"nativeSrc": "9181:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9181:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9173:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9173:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8808:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8959:9:1",
														"nodeType": "YulTypedName",
														"src": "8959:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8973:4:1",
														"nodeType": "YulTypedName",
														"src": "8973:4:1",
														"type": ""
													}
												],
												"src": "8808:398:1"
											},
											{
												"body": {
													"nativeSrc": "9385:227:1",
													"nodeType": "YulBlock",
													"src": "9385:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9402:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9402:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9413:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9395:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9395:6:1"
																},
																"nativeSrc": "9395:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9395:21:1"
															},
															"nativeSrc": "9395:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9395:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9436:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9436:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9447:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9447:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9432:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9432:3:1"
																		},
																		"nativeSrc": "9432:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9432:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9452:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9452:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9425:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:1"
																},
																"nativeSrc": "9425:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9425:30:1"
															},
															"nativeSrc": "9425:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9425:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9475:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9475:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9486:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9486:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9471:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9471:3:1"
																		},
																		"nativeSrc": "9471:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9471:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "9491:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9491:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9464:6:1"
																},
																"nativeSrc": "9464:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9464:62:1"
															},
															"nativeSrc": "9464:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9464:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9546:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9546:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9557:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9557:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9542:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9542:3:1"
																		},
																		"nativeSrc": "9542:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9542:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "9562:7:1",
																		"nodeType": "YulLiteral",
																		"src": "9562:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9535:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9535:6:1"
																},
																"nativeSrc": "9535:35:1",
																"nodeType": "YulFunctionCall",
																"src": "9535:35:1"
															},
															"nativeSrc": "9535:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "9535:35:1"
														},
														{
															"nativeSrc": "9579:27:1",
															"nodeType": "YulAssignment",
															"src": "9579:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9591:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9591:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9602:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9602:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9587:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9587:3:1"
																},
																"nativeSrc": "9587:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9587:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9579:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9579:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9211:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9362:9:1",
														"nodeType": "YulTypedName",
														"src": "9362:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9376:4:1",
														"nodeType": "YulTypedName",
														"src": "9376:4:1",
														"type": ""
													}
												],
												"src": "9211:401:1"
											},
											{
												"body": {
													"nativeSrc": "9791:225:1",
													"nodeType": "YulBlock",
													"src": "9791:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9808:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9808:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9819:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9819:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9801:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9801:6:1"
																},
																"nativeSrc": "9801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9801:21:1"
															},
															"nativeSrc": "9801:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9801:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9842:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9842:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9853:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9853:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9838:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9838:3:1"
																		},
																		"nativeSrc": "9838:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9838:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9858:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9831:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9831:6:1"
																},
																"nativeSrc": "9831:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9831:30:1"
															},
															"nativeSrc": "9831:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9831:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9881:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9881:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9892:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9892:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9877:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9877:3:1"
																		},
																		"nativeSrc": "9877:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9877:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "9897:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9897:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9870:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9870:6:1"
																},
																"nativeSrc": "9870:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9870:62:1"
															},
															"nativeSrc": "9870:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9870:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9952:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9963:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9963:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9948:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9948:3:1"
																		},
																		"nativeSrc": "9948:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9948:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "9968:5:1",
																		"nodeType": "YulLiteral",
																		"src": "9968:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9941:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9941:6:1"
																},
																"nativeSrc": "9941:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9941:33:1"
															},
															"nativeSrc": "9941:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "9941:33:1"
														},
														{
															"nativeSrc": "9983:27:1",
															"nodeType": "YulAssignment",
															"src": "9983:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9995:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9995:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10006:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10006:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9991:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9991:3:1"
																},
																"nativeSrc": "9991:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9991:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9983:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9983:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9617:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9768:9:1",
														"nodeType": "YulTypedName",
														"src": "9768:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9782:4:1",
														"nodeType": "YulTypedName",
														"src": "9782:4:1",
														"type": ""
													}
												],
												"src": "9617:399:1"
											},
											{
												"body": {
													"nativeSrc": "10195:231:1",
													"nodeType": "YulBlock",
													"src": "10195:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10212:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10212:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10223:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10223:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10205:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10205:6:1"
																},
																"nativeSrc": "10205:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10205:21:1"
															},
															"nativeSrc": "10205:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10205:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10246:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10246:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10257:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10257:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10242:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10242:3:1"
																		},
																		"nativeSrc": "10242:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10242:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10262:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10262:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10235:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10235:6:1"
																},
																"nativeSrc": "10235:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10235:30:1"
															},
															"nativeSrc": "10235:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10235:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10285:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10285:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10296:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10296:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10281:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10281:3:1"
																		},
																		"nativeSrc": "10281:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10281:18:1"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nativeSrc": "10301:34:1",
																		"nodeType": "YulLiteral",
																		"src": "10301:34:1",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10274:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10274:6:1"
																},
																"nativeSrc": "10274:62:1",
																"nodeType": "YulFunctionCall",
																"src": "10274:62:1"
															},
															"nativeSrc": "10274:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "10274:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10356:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10356:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10367:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10367:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10352:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10352:3:1"
																		},
																		"nativeSrc": "10352:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10352:18:1"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "10372:11:1",
																		"nodeType": "YulLiteral",
																		"src": "10372:11:1",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10345:6:1"
																},
																"nativeSrc": "10345:39:1",
																"nodeType": "YulFunctionCall",
																"src": "10345:39:1"
															},
															"nativeSrc": "10345:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "10345:39:1"
														},
														{
															"nativeSrc": "10393:27:1",
															"nodeType": "YulAssignment",
															"src": "10393:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10405:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10405:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10416:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10416:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10401:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10401:3:1"
																},
																"nativeSrc": "10401:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10401:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10393:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10393:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10021:405:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10172:9:1",
														"nodeType": "YulTypedName",
														"src": "10172:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10186:4:1",
														"nodeType": "YulTypedName",
														"src": "10186:4:1",
														"type": ""
													}
												],
												"src": "10021:405:1"
											},
											{
												"body": {
													"nativeSrc": "10605:230:1",
													"nodeType": "YulBlock",
													"src": "10605:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10622:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10622:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10633:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10615:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10615:6:1"
																},
																"nativeSrc": "10615:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10615:21:1"
															},
															"nativeSrc": "10615:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10615:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10656:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10656:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10667:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10667:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10652:3:1"
																		},
																		"nativeSrc": "10652:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10652:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10672:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10672:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10645:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10645:6:1"
																},
																"nativeSrc": "10645:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10645:30:1"
															},
															"nativeSrc": "10645:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10645:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10695:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10695:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10706:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10706:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10691:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10691:3:1"
																		},
																		"nativeSrc": "10691:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10691:18:1"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206578636565647320746865206d617854",
																		"kind": "string",
																		"nativeSrc": "10711:34:1",
																		"nodeType": "YulLiteral",
																		"src": "10711:34:1",
																		"type": "",
																		"value": "Transfer amount exceeds the maxT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10684:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10684:6:1"
																},
																"nativeSrc": "10684:62:1",
																"nodeType": "YulFunctionCall",
																"src": "10684:62:1"
															},
															"nativeSrc": "10684:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "10684:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10766:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10766:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10777:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10777:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10762:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:1"
																		},
																		"nativeSrc": "10762:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10762:18:1"
																	},
																	{
																		"hexValue": "78416d6f756e742e",
																		"kind": "string",
																		"nativeSrc": "10782:10:1",
																		"nodeType": "YulLiteral",
																		"src": "10782:10:1",
																		"type": "",
																		"value": "xAmount."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10755:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10755:6:1"
																},
																"nativeSrc": "10755:38:1",
																"nodeType": "YulFunctionCall",
																"src": "10755:38:1"
															},
															"nativeSrc": "10755:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "10755:38:1"
														},
														{
															"nativeSrc": "10802:27:1",
															"nodeType": "YulAssignment",
															"src": "10802:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10814:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10814:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10825:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10825:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10810:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10810:3:1"
																},
																"nativeSrc": "10810:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10810:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10802:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10802:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10431:404:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10582:9:1",
														"nodeType": "YulTypedName",
														"src": "10582:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10596:4:1",
														"nodeType": "YulTypedName",
														"src": "10596:4:1",
														"type": ""
													}
												],
												"src": "10431:404:1"
											},
											{
												"body": {
													"nativeSrc": "11014:182:1",
													"nodeType": "YulBlock",
													"src": "11014:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11031:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11031:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11042:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11042:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11024:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11024:6:1"
																},
																"nativeSrc": "11024:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11024:21:1"
															},
															"nativeSrc": "11024:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11024:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11065:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11065:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11076:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11076:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11061:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11061:3:1"
																		},
																		"nativeSrc": "11061:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11061:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11081:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11081:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11054:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11054:6:1"
																},
																"nativeSrc": "11054:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11054:30:1"
															},
															"nativeSrc": "11054:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11054:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11104:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11104:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11115:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11115:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11100:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11100:3:1"
																		},
																		"nativeSrc": "11100:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11100:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11120:34:1",
																		"nodeType": "YulLiteral",
																		"src": "11120:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11093:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11093:6:1"
																},
																"nativeSrc": "11093:62:1",
																"nodeType": "YulFunctionCall",
																"src": "11093:62:1"
															},
															"nativeSrc": "11093:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "11093:62:1"
														},
														{
															"nativeSrc": "11164:26:1",
															"nodeType": "YulAssignment",
															"src": "11164:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11176:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11176:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11187:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11187:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11172:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11172:3:1"
																},
																"nativeSrc": "11172:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11172:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11164:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11164:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10840:356:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10991:9:1",
														"nodeType": "YulTypedName",
														"src": "10991:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11005:4:1",
														"nodeType": "YulTypedName",
														"src": "11005:4:1",
														"type": ""
													}
												],
												"src": "10840:356:1"
											},
											{
												"body": {
													"nativeSrc": "11375:233:1",
													"nodeType": "YulBlock",
													"src": "11375:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11392:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11392:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11403:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11403:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11385:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11385:6:1"
																},
																"nativeSrc": "11385:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11385:21:1"
															},
															"nativeSrc": "11385:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11385:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11426:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11426:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11437:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11437:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11422:3:1"
																		},
																		"nativeSrc": "11422:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11422:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11442:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11442:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:1"
																},
																"nativeSrc": "11415:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11415:30:1"
															},
															"nativeSrc": "11415:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11415:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11465:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11465:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11476:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11476:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11461:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11461:3:1"
																		},
																		"nativeSrc": "11461:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11461:18:1"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nativeSrc": "11481:34:1",
																		"nodeType": "YulLiteral",
																		"src": "11481:34:1",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11454:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11454:6:1"
																},
																"nativeSrc": "11454:62:1",
																"nodeType": "YulFunctionCall",
																"src": "11454:62:1"
															},
															"nativeSrc": "11454:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "11454:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11536:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11547:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:1"
																		},
																		"nativeSrc": "11532:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:1"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "11552:13:1",
																		"nodeType": "YulLiteral",
																		"src": "11552:13:1",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:1"
																},
																"nativeSrc": "11525:41:1",
																"nodeType": "YulFunctionCall",
																"src": "11525:41:1"
															},
															"nativeSrc": "11525:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "11525:41:1"
														},
														{
															"nativeSrc": "11575:27:1",
															"nodeType": "YulAssignment",
															"src": "11575:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11587:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11587:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11598:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11598:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11583:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11583:3:1"
																},
																"nativeSrc": "11583:19:1",
																"nodeType": "YulFunctionCall",
																"src": "11583:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11575:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11575:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11201:407:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11352:9:1",
														"nodeType": "YulTypedName",
														"src": "11352:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11366:4:1",
														"nodeType": "YulTypedName",
														"src": "11366:4:1",
														"type": ""
													}
												],
												"src": "11201:407:1"
											},
											{
												"body": {
													"nativeSrc": "11750:150:1",
													"nodeType": "YulBlock",
													"src": "11750:150:1",
													"statements": [
														{
															"nativeSrc": "11760:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11760:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11780:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11774:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11774:5:1"
																},
																"nativeSrc": "11774:13:1",
																"nodeType": "YulFunctionCall",
																"src": "11774:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11764:6:1",
																	"nodeType": "YulTypedName",
																	"src": "11764:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11835:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11835:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11843:4:1",
																				"nodeType": "YulLiteral",
																				"src": "11843:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11831:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11831:3:1"
																		},
																		"nativeSrc": "11831:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11831:17:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11850:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11850:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11855:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11855:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11796:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "11796:34:1"
																},
																"nativeSrc": "11796:66:1",
																"nodeType": "YulFunctionCall",
																"src": "11796:66:1"
															},
															"nativeSrc": "11796:66:1",
															"nodeType": "YulExpressionStatement",
															"src": "11796:66:1"
														},
														{
															"nativeSrc": "11871:23:1",
															"nodeType": "YulAssignment",
															"src": "11871:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11882:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11882:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11887:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11887:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11878:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11878:3:1"
																},
																"nativeSrc": "11878:16:1",
																"nodeType": "YulFunctionCall",
																"src": "11878:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11871:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11871:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11613:287:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11726:3:1",
														"nodeType": "YulTypedName",
														"src": "11726:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11731:6:1",
														"nodeType": "YulTypedName",
														"src": "11731:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11742:3:1",
														"nodeType": "YulTypedName",
														"src": "11742:3:1",
														"type": ""
													}
												],
												"src": "11613:287:1"
											},
											{
												"body": {
													"nativeSrc": "12079:177:1",
													"nodeType": "YulBlock",
													"src": "12079:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12096:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12096:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12107:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12107:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12089:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12089:6:1"
																},
																"nativeSrc": "12089:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12089:21:1"
															},
															"nativeSrc": "12089:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12089:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12130:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12130:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12141:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12141:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12126:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12126:3:1"
																		},
																		"nativeSrc": "12126:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12126:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12146:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12146:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12119:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12119:6:1"
																},
																"nativeSrc": "12119:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12119:30:1"
															},
															"nativeSrc": "12119:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12119:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12169:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12169:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12180:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12180:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12165:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12165:3:1"
																		},
																		"nativeSrc": "12165:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12165:18:1"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nativeSrc": "12185:29:1",
																		"nodeType": "YulLiteral",
																		"src": "12185:29:1",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12158:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12158:6:1"
																},
																"nativeSrc": "12158:57:1",
																"nodeType": "YulFunctionCall",
																"src": "12158:57:1"
															},
															"nativeSrc": "12158:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "12158:57:1"
														},
														{
															"nativeSrc": "12224:26:1",
															"nodeType": "YulAssignment",
															"src": "12224:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12236:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12236:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12247:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12247:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12232:3:1"
																},
																"nativeSrc": "12232:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12232:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12224:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12224:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11905:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12056:9:1",
														"nodeType": "YulTypedName",
														"src": "12056:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12070:4:1",
														"nodeType": "YulTypedName",
														"src": "12070:4:1",
														"type": ""
													}
												],
												"src": "11905:351:1"
											},
											{
												"body": {
													"nativeSrc": "12435:298:1",
													"nodeType": "YulBlock",
													"src": "12435:298:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12452:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12452:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12463:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12463:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12445:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12445:6:1"
																},
																"nativeSrc": "12445:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12445:21:1"
															},
															"nativeSrc": "12445:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12445:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12486:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12486:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12497:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12497:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12482:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12482:3:1"
																		},
																		"nativeSrc": "12482:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12482:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12502:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12502:2:1",
																		"type": "",
																		"value": "68"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12475:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12475:6:1"
																},
																"nativeSrc": "12475:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12475:30:1"
															},
															"nativeSrc": "12475:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12475:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12525:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12525:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12536:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12536:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12521:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12521:3:1"
																		},
																		"nativeSrc": "12521:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12521:18:1"
																	},
																	{
																		"hexValue": "43616e6e6f74207075726368617365206d6f7265207468616e2031306d202830",
																		"kind": "string",
																		"nativeSrc": "12541:34:1",
																		"nodeType": "YulLiteral",
																		"src": "12541:34:1",
																		"type": "",
																		"value": "Cannot purchase more than 10m (0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12514:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12514:6:1"
																},
																"nativeSrc": "12514:62:1",
																"nodeType": "YulFunctionCall",
																"src": "12514:62:1"
															},
															"nativeSrc": "12514:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "12514:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12596:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12596:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12607:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12607:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12592:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12592:3:1"
																		},
																		"nativeSrc": "12592:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12592:18:1"
																	},
																	{
																		"hexValue": "2e312529206f6620737570706c7920696e2073696e676c65207472616e736163",
																		"kind": "string",
																		"nativeSrc": "12612:34:1",
																		"nodeType": "YulLiteral",
																		"src": "12612:34:1",
																		"type": "",
																		"value": ".1%) of supply in single transac"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12585:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12585:6:1"
																},
																"nativeSrc": "12585:62:1",
																"nodeType": "YulFunctionCall",
																"src": "12585:62:1"
															},
															"nativeSrc": "12585:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "12585:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12667:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12667:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12678:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12678:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12663:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12663:3:1"
																		},
																		"nativeSrc": "12663:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12663:19:1"
																	},
																	{
																		"hexValue": "74696f6e",
																		"kind": "string",
																		"nativeSrc": "12684:6:1",
																		"nodeType": "YulLiteral",
																		"src": "12684:6:1",
																		"type": "",
																		"value": "tion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12656:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12656:6:1"
																},
																"nativeSrc": "12656:35:1",
																"nodeType": "YulFunctionCall",
																"src": "12656:35:1"
															},
															"nativeSrc": "12656:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "12656:35:1"
														},
														{
															"nativeSrc": "12700:27:1",
															"nodeType": "YulAssignment",
															"src": "12700:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12712:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12712:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12723:3:1",
																		"nodeType": "YulLiteral",
																		"src": "12723:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12708:3:1"
																},
																"nativeSrc": "12708:19:1",
																"nodeType": "YulFunctionCall",
																"src": "12708:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12700:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12700:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12261:472:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12412:9:1",
														"nodeType": "YulTypedName",
														"src": "12412:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12426:4:1",
														"nodeType": "YulTypedName",
														"src": "12426:4:1",
														"type": ""
													}
												],
												"src": "12261:472:1"
											},
											{
												"body": {
													"nativeSrc": "12790:116:1",
													"nodeType": "YulBlock",
													"src": "12790:116:1",
													"statements": [
														{
															"nativeSrc": "12800:20:1",
															"nodeType": "YulAssignment",
															"src": "12800:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12815:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12815:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12818:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12818:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12811:3:1"
																},
																"nativeSrc": "12811:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12811:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12800:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "12800:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12878:22:1",
																"nodeType": "YulBlock",
																"src": "12878:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12880:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12880:16:1"
																			},
																			"nativeSrc": "12880:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12880:18:1"
																		},
																		"nativeSrc": "12880:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12880:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12849:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "12849:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12842:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "12842:6:1"
																				},
																				"nativeSrc": "12842:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12842:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12856:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "12856:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12863:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "12863:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12872:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "12872:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12859:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "12859:3:1"
																						},
																						"nativeSrc": "12859:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "12859:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12853:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "12853:2:1"
																				},
																				"nativeSrc": "12853:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12853:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12839:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "12839:2:1"
																		},
																		"nativeSrc": "12839:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12839:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12832:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12832:6:1"
																},
																"nativeSrc": "12832:45:1",
																"nodeType": "YulFunctionCall",
																"src": "12832:45:1"
															},
															"nativeSrc": "12829:71:1",
															"nodeType": "YulIf",
															"src": "12829:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12738:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12769:1:1",
														"nodeType": "YulTypedName",
														"src": "12769:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12772:1:1",
														"nodeType": "YulTypedName",
														"src": "12772:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12778:7:1",
														"nodeType": "YulTypedName",
														"src": "12778:7:1",
														"type": ""
													}
												],
												"src": "12738:168:1"
											},
											{
												"body": {
													"nativeSrc": "13085:248:1",
													"nodeType": "YulBlock",
													"src": "13085:248:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13102:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13102:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13113:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13113:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13095:6:1"
																},
																"nativeSrc": "13095:21:1",
																"nodeType": "YulFunctionCall",
																"src": "13095:21:1"
															},
															"nativeSrc": "13095:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "13095:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13136:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13136:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13147:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13147:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13132:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13132:3:1"
																		},
																		"nativeSrc": "13132:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13132:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13152:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13152:2:1",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13125:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13125:6:1"
																},
																"nativeSrc": "13125:30:1",
																"nodeType": "YulFunctionCall",
																"src": "13125:30:1"
															},
															"nativeSrc": "13125:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "13125:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13175:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13175:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13186:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13186:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13171:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13171:3:1"
																		},
																		"nativeSrc": "13171:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13171:18:1"
																	},
																	{
																		"hexValue": "43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c",
																		"kind": "string",
																		"nativeSrc": "13191:34:1",
																		"nodeType": "YulLiteral",
																		"src": "13191:34:1",
																		"type": "",
																		"value": "Cannot sell more than 10% of bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13164:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13164:6:1"
																},
																"nativeSrc": "13164:62:1",
																"nodeType": "YulFunctionCall",
																"src": "13164:62:1"
															},
															"nativeSrc": "13164:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "13164:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13246:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13246:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13257:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13257:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13242:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13242:3:1"
																		},
																		"nativeSrc": "13242:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13242:18:1"
																	},
																	{
																		"hexValue": "616e636520696e2073696e676c65207472616e73616374696f6e",
																		"kind": "string",
																		"nativeSrc": "13262:28:1",
																		"nodeType": "YulLiteral",
																		"src": "13262:28:1",
																		"type": "",
																		"value": "ance in single transaction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13235:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13235:6:1"
																},
																"nativeSrc": "13235:56:1",
																"nodeType": "YulFunctionCall",
																"src": "13235:56:1"
															},
															"nativeSrc": "13235:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "13235:56:1"
														},
														{
															"nativeSrc": "13300:27:1",
															"nodeType": "YulAssignment",
															"src": "13300:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13312:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13312:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13323:3:1",
																		"nodeType": "YulLiteral",
																		"src": "13323:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13308:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13308:3:1"
																},
																"nativeSrc": "13308:19:1",
																"nodeType": "YulFunctionCall",
																"src": "13308:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13300:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13300:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12911:422:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13062:9:1",
														"nodeType": "YulTypedName",
														"src": "13062:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13076:4:1",
														"nodeType": "YulTypedName",
														"src": "13076:4:1",
														"type": ""
													}
												],
												"src": "12911:422:1"
											},
											{
												"body": {
													"nativeSrc": "13512:179:1",
													"nodeType": "YulBlock",
													"src": "13512:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13529:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13529:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13540:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13540:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13522:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13522:6:1"
																},
																"nativeSrc": "13522:21:1",
																"nodeType": "YulFunctionCall",
																"src": "13522:21:1"
															},
															"nativeSrc": "13522:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "13522:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13563:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13563:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13574:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13574:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13559:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13559:3:1"
																		},
																		"nativeSrc": "13559:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13559:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13579:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13579:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13552:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13552:6:1"
																},
																"nativeSrc": "13552:30:1",
																"nodeType": "YulFunctionCall",
																"src": "13552:30:1"
															},
															"nativeSrc": "13552:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "13552:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13602:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13602:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13613:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13613:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13598:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13598:3:1"
																		},
																		"nativeSrc": "13598:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13598:18:1"
																	},
																	{
																		"hexValue": "596f7520676f747461206b6565702031204d45544820616c7761797321",
																		"kind": "string",
																		"nativeSrc": "13618:31:1",
																		"nodeType": "YulLiteral",
																		"src": "13618:31:1",
																		"type": "",
																		"value": "You gotta keep 1 METH always!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13591:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13591:6:1"
																},
																"nativeSrc": "13591:59:1",
																"nodeType": "YulFunctionCall",
																"src": "13591:59:1"
															},
															"nativeSrc": "13591:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "13591:59:1"
														},
														{
															"nativeSrc": "13659:26:1",
															"nodeType": "YulAssignment",
															"src": "13659:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13671:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13671:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13682:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13682:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13667:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13667:3:1"
																},
																"nativeSrc": "13667:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13667:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13659:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13659:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13338:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13489:9:1",
														"nodeType": "YulTypedName",
														"src": "13489:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13503:4:1",
														"nodeType": "YulTypedName",
														"src": "13503:4:1",
														"type": ""
													}
												],
												"src": "13338:353:1"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Transfer amount exceeds the maxT\")\n        mstore(add(headStart, 96), \"xAmount.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already excluded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"Cannot purchase more than 10m (0\")\n        mstore(add(headStart, 96), \".1%) of supply in single transac\")\n        mstore(add(headStart, 128), \"tion\")\n        tail := add(headStart, 160)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Cannot sell more than 10% of bal\")\n        mstore(add(headStart, 96), \"ance in single transaction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"You gotta keep 1 METH always!\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101a1575f3560e01c806380da2287116100f357806397a9d56011610093578063af465a271161006e578063af465a271461038c578063cba0e99614610395578063dd62ed3e146103c0578063f2fde38b146103f8575f80fd5b806397a9d5601461035e578063a457c2d714610366578063a9059cbb14610379575f80fd5b80638c0b5e22116100ce5780638c0b5e22146103345780638da5cb5b1461033d57806394e107841461034e57806395d89b4114610356575f80fd5b806380da2287146102cf5780638129fc1c1461031957806383f24c0914610321575f80fd5b806345e0b9d41161015e5780635319e78f116101395780635319e78f14610274578063658c27a91461028757806370a08231146102b2578063715018a6146102c5575f80fd5b806345e0b9d4146102335780634d09deb31461023c5780634dacf3f514610267575f80fd5b806306fdde03146101a5578063095ea7b3146101c357806318160ddd146101e657806323b872dd146101f8578063313ce5671461020b5780633950935114610220575b5f80fd5b6101ad61040b565b6040516101ba9190611b67565b60405180910390f35b6101d66101d1366004611baf565b61049b565b60405190151581526020016101ba565b606f545b6040519081526020016101ba565b6101d6610206366004611bd7565b6104b1565b60675460405160ff90911681526020016101ba565b6101d661022e366004611baf565b610501565b6101ea60705481565b61024f61024a366004611c10565b610537565b6040516001600160a01b0390911681526020016101ba565b6072546101d69060ff1681565b6101ea610282366004611c27565b61055f565b6101d6610295366004611c27565b6001600160a01b03165f908152606d602052604090205460ff1690565b6101ea6102c0366004611c27565b61060e565b6102cd610657565b005b6103046102dd366004611c27565b6001600160a01b03165f90815260696020908152604080832054606a909252909120549091565b604080519283526020830191909152016101ba565b6102cd61066a565b6102cd61032f366004611c47565b610927565b6101ea60715481565b6033546001600160a01b031661024f565b6101ea610942565b6101ad610963565b610304610972565b6101d6610374366004611baf565b610a26565b6101d6610387366004611baf565b610a5c565b6101ea606f5481565b6101d66103a3366004611c27565b6001600160a01b03165f908152606c602052604090205460ff1690565b6101ea6103ce366004611c66565b6001600160a01b039182165f908152606b6020908152604080832093909416825291909152205490565b6102cd610406366004611c27565b610a68565b60606065805461041a90611c97565b80601f016020809104026020016040519081016040528092919081815260200182805461044690611c97565b80156104915780601f1061046857610100808354040283529160200191610491565b820191905f5260205f20905b81548152906001019060200180831161047457829003601f168201915b5050505050905090565b5f6104a7338484610ade565b5060015b92915050565b5f6104bd848484610c01565b6001600160a01b0384165f908152606b60209081526040808320338085529252909120546104f79186916104f2908690611ce3565b610ade565b5060019392505050565b335f818152606b602090815260408083206001600160a01b038716845290915281205490916104a79185906104f2908690611cf6565b60688181548110610546575f80fd5b5f918252602090912001546001600160a01b0316905081565b6001600160a01b0381165f908152606a60205260408120546070548111156105e15760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b5f6105ea610942565b9050815f036105fc57505f9392505050565b6106068183611d1d565b949350505050565b6001600160a01b0381165f908152606c602052604081205460ff161561064957506001600160a01b03165f9081526069602052604090205490565b6104ab8261055f565b919050565b61065f610f70565b6106685f610fca565b565b5f54610100900460ff161580801561068857505f54600160ff909116105b806106a15750303b1580156106a157505f5460ff166001145b6107045760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d8565b5f805460ff191660011790558015610725575f805461ff0019166101001790555b61072d61101b565b60408051808201909152600481526309a8aa8960e31b60208201526065906107559082611d8f565b5060408051808201909152600481526309a8aa8960e31b602082015260669061077e9082611d8f565b506067805460ff191660121790556b204fce5e3e25026110000000606f8190555f19606e8190556107af9190611e4f565b606e546107bc9190611ce3565b6070819055606a5f6107d66033546001600160a01b031690565b6001600160a01b031681526020808201929092526040015f90812092909255606f54607155606c90527f7febd347df14ea35c529e50fb2dd629d4a6226f5ccc893710fb466f8b83823fc805460ff1990811660019081179092557f8c482e007f935c93984ddf7a647e33ef99566883ffae3563aa616dc14d1632f780548216831790557fb6e99d88b536ae7728c4b89ca5a6073cf06fd2059e0aff5b1a4de2c799d9cb968054821683179055610369909252607280549092161790556108a46033546001600160a01b031690565b6001600160a01b03165f6001600160a01b03165f80516020611f3c833981519152606f546040516108d791815260200190565b60405180910390a38015610924575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b61092f610f70565b6072805460ff1916911515919091179055565b5f805f61094d610972565b909250905061095c8183611d1d565b9250505090565b60606066805461041a90611c97565b607054606f545f918291825b606854811015610a1c57606a5f6068838154811061099e5761099e611e62565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546109cc9084611ce3565b925060695f606883815481106109e4576109e4611e62565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054610a129083611ce3565b915060010161097e565b5090939092509050565b335f818152606b602090815260408083206001600160a01b038716845290915281205490916104a79185906104f2908690611ce3565b5f6104a7338484610c01565b610a70610f70565b6001600160a01b038116610ad55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d8565b61092481610fca565b6001600160a01b038316610b405760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d8565b6001600160a01b038216610ba15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d8565b6001600160a01b038381165f818152606b602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b607254610100900460ff1615610c15575f80fd5b6072805461ff0019166101001790556001600160a01b038316610c885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d8565b6001600160a01b038216610cea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d8565b5f8111610d4b5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016105d8565b610d5483611049565b15156001148015610d7d57506001600160a01b0383165f908152606d602052604090205460ff16155b8015610da157506001600160a01b0383165f908152606c602052604090205460ff16155b15610db857610daf836110e2565b610db88361116d565b610dc182611049565b15156001148015610dea57506001600160a01b0382165f908152606d602052604090205460ff16155b8015610e0e57506001600160a01b0382165f908152606c602052604090205460ff16155b15610e2557610e1c826110e2565b610e258261116d565b6033546001600160a01b03848116911614801590610e5157506033546001600160a01b03838116911614155b15610ebd576001600160a01b0383165f908152606d602052604090205460ff16158015610e9657506001600160a01b0382165f908152606d602052604090205460ff16155b15610ebd57607154811115610ebd5760405162461bcd60e51b81526004016105d890611e76565b6033546001600160a01b03848116911614801590610ee957506033546001600160a01b03838116911614155b15610f55576001600160a01b0383165f908152606d602052604090205460ff16158015610f2e57506001600160a01b0382165f908152606d602052604090205460ff16155b15610f5557607154811115610f555760405162461bcd60e51b81526004016105d890611e76565b610f60838383611279565b50506072805461ff001916905550565b6033546001600160a01b031633146106685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d8565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f54610100900460ff166110415760405162461bcd60e51b81526004016105d890611ebe565b610668611375565b60408051600481526024810182526020810180516001600160e01b031663c45a015560e01b17905290515f91829182916001600160a01b0386169161108e9190611f09565b5f60405180830381855afa9150503d805f81146110c6576040519150601f19603f3d011682016040523d82523d5f602084013e6110cb565b606091505b509150915081801561060657505115159392505050565b6001600160a01b0381165f908152606d602052604090205460ff161561114a5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c75646564000000000060448201526064016105d8565b6001600160a01b03165f908152606d60205260409020805460ff19166001179055565b6001600160a01b0381165f908152606c602052604090205460ff16156111d55760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c75646564000000000060448201526064016105d8565b6001600160a01b0381165f908152606a602052604090205415611214576111fb8161055f565b6001600160a01b0382165f908152606960205260409020555b6001600160a01b03165f818152606c60205260408120805460ff191660019081179091556068805491820181559091527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530180546001600160a01b0319169091179055565b6001600160a01b0383165f908152606c602052604090205460ff1680156112b857506001600160a01b0382165f908152606c602052604090205460ff16155b156112cd576112c88383836113a4565b505050565b6001600160a01b0383165f908152606c602052604090205460ff1615801561130c57506001600160a01b0382165f908152606c602052604090205460ff165b1561131c576112c883838361160c565b6001600160a01b0383165f908152606c602052604090205460ff16801561135a57506001600160a01b0382165f908152606c602052604090205460ff165b1561136a576112c8838383611854565b6112c88383836119a8565b5f54610100900460ff1661139b5760405162461bcd60e51b81526004016105d890611ebe565b61066833610fca565b6113ac611b02565b60725460ff16151560010361144e576103e8606f546113cb9190611d1d565b82111561144e5760405162461bcd60e51b8152602060048201526044602482018190527f43616e6e6f74207075726368617365206d6f7265207468616e2031306d202830908201527f2e312529206f6620737570706c7920696e2073696e676c65207472616e7361636064820152633a34b7b760e11b608482015260a4016105d8565b818152611459610942565b6114639083611f24565b60208201525f604082018190526127109061147e9084611f24565b6114889190611d1d565b6080820152611495610942565b81608001516114a49190611f24565b60a08201819052156114bc5760a08101516101008201525b80516001600160a01b0385165f90815260696020526040812080549091906114e5908490611ce3565b90915550506020808201516001600160a01b0386165f908152606a90925260408220805491929091611518908490611ce3565b909155505060a081015160208201516115319190611ce3565b6001600160a01b0384165f908152606a602052604081208054909190611558908490611cf6565b9091555050610100810151607080545f90611574908490611ce3565b9091555050608081015181516001600160a01b0380861692908716915f80516020611f3c833981519152916115a891611ce3565b60405190815260200160405180910390a3805160808201517fe6ef78c5a1f105fc4b9500eeb7cd09b041367bdee35f1d85761735ee78b3ff2e91906115ed9082611ce3565b604080519283526020830191909152015b60405180910390a150505050565b611614611b02565b600a61161f8561055f565b6116299190611d1d565b82111561169e5760405162461bcd60e51b815260206004820152603a60248201527f43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c60448201527f616e636520696e2073696e676c65207472616e73616374696f6e00000000000060648201526084016105d8565b8181526116a9610942565b6116b39083611f24565b60208201525f60608201819052612710906116ce9084611f24565b6116d89190611d1d565b60c08201526116e5610942565b8160c001516116f49190611f24565b60e082018190521561170c5760e08101516101008201525b8060200151606a5f866001600160a01b03166001600160a01b031681526020019081526020015f205f8282546117429190611ce3565b909155505060c081015181516117589190611ce3565b6001600160a01b0384165f908152606960205260408120805490919061177f908490611cf6565b909155505060e081015160208201516117989190611ce3565b6001600160a01b0384165f908152606a6020526040812080549091906117bf908490611cf6565b9091555050610100810151607080545f906117db908490611ce3565b909155505060c081015181516001600160a01b0380861692908716915f80516020611f3c8339815191529161180f91611ce3565b60405190815260200160405180910390a3805160c08201517fff000e16c1c0d33b07404c2b2abb9832356b5cfd57566d73c9d09611f030890d91906115ed9082611ce3565b61185c611b02565b818152611867610942565b6118719083611f24565b60208083019190915281516001600160a01b0386165f9081526069909252604082208054919290916118a4908490611ce3565b90915550506020808201516001600160a01b0386165f908152606a909252604082208054919290916118d7908490611ce3565b909155505080516001600160a01b0384165f9081526069602052604081208054909190611905908490611cf6565b90915550506020808201516001600160a01b0385165f908152606a90925260408220805491929091611938908490611cf6565b909155505080516040519081526001600160a01b0384811691908616905f80516020611f3c8339815191529060200160405180910390a380516040805182815260208101929092527f2541109a23d530c06d62a3bf63d8d03107194870126fddb7170c0daef360cd8a91016115fe565b6119b0611b02565b670de0b6b3a76400006119c28561055f565b6119cc9190611ce3565b821115611a1b5760405162461bcd60e51b815260206004820152601d60248201527f596f7520676f747461206b6565702031204d45544820616c776179732100000060448201526064016105d8565b818152611a26610942565b611a309083611f24565b60208083018290526001600160a01b0386165f908152606a909152604081208054909190611a5f908490611ce3565b90915550506020808201516001600160a01b0385165f908152606a90925260408220805491929091611a92908490611cf6565b909155505080516040519081526001600160a01b0384811691908616905f80516020611f3c8339815191529060200160405180910390a380516040805182815260208101929092527fd9923e08d9d88ff7a7e9b8460f3163dc6b887fabe315449da3b5cd16bb5e934091016115fe565b6040518061012001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b5f5b83811015611b5f578181015183820152602001611b47565b50505f910152565b602081525f8251806020840152611b85816040850160208701611b45565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610652575f80fd5b5f8060408385031215611bc0575f80fd5b611bc983611b99565b946020939093013593505050565b5f805f60608486031215611be9575f80fd5b611bf284611b99565b9250611c0060208501611b99565b9150604084013590509250925092565b5f60208284031215611c20575f80fd5b5035919050565b5f60208284031215611c37575f80fd5b611c4082611b99565b9392505050565b5f60208284031215611c57575f80fd5b81358015158114611c40575f80fd5b5f8060408385031215611c77575f80fd5b611c8083611b99565b9150611c8e60208401611b99565b90509250929050565b600181811c90821680611cab57607f821691505b602082108103611cc957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104ab576104ab611ccf565b808201808211156104ab576104ab611ccf565b634e487b7160e01b5f52601260045260245ffd5b5f82611d2b57611d2b611d09565b500490565b634e487b7160e01b5f52604160045260245ffd5b601f8211156112c857805f5260205f20601f840160051c81016020851015611d695750805b601f840160051c820191505b81811015611d88575f8155600101611d75565b5050505050565b815167ffffffffffffffff811115611da957611da9611d30565b611dbd81611db78454611c97565b84611d44565b602080601f831160018114611df0575f8415611dd95750858301515b5f19600386901b1c1916600185901b178555611e47565b5f85815260208120601f198616915b82811015611e1e57888601518255948401946001909101908401611dff565b5085821015611e3b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f82611e5d57611e5d611d09565b500690565b634e487b7160e01b5f52603260045260245ffd5b60208082526028908201527f5472616e7366657220616d6f756e74206578636565647320746865206d6178546040820152673c20b6b7bab73a1760c11b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f8251611f1a818460208701611b45565b9190910192915050565b80820281158282048414176104ab576104ab611ccf56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204554e5b0f6426765178e5f7312fdff93570d7615d0349f198c19856faf32ae4b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80DA2287 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0x97A9D560 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xAF465A27 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAF465A27 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97A9D560 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C0B5E22 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x94E10784 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80DA2287 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x83F24C09 EQ PUSH2 0x321 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45E0B9D4 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x5319E78F GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x5319E78F EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x658C27A9 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45E0B9D4 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x4D09DEB3 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x4DACF3F5 EQ PUSH2 0x267 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x220 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AD PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x6F SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH2 0x1EA PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x1D6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6A SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x66A JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH2 0x1EA PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24F JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x963 JUMP JUMPDEST PUSH2 0x304 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x1EA PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0x1C97 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x446 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x491 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x468 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x491 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x474 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4A7 CALLER DUP5 DUP5 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BD DUP5 DUP5 DUP5 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x4F7 SWAP2 DUP7 SWAP2 PUSH2 0x4F2 SWAP1 DUP7 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4A7 SWAP2 DUP6 SWAP1 PUSH2 0x4F2 SWAP1 DUP7 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x68 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x70 SLOAD DUP2 GT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5EA PUSH2 0x942 JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 SUB PUSH2 0x5FC JUMPI POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x606 DUP2 DUP4 PUSH2 0x1D1D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x649 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4AB DUP3 PUSH2 0x55F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65F PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x668 PUSH0 PUSH2 0xFCA JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x688 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x6A1 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A1 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x725 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x72D PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x9A8AA89 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x65 SWAP1 PUSH2 0x755 SWAP1 DUP3 PUSH2 0x1D8F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x9A8AA89 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x66 SWAP1 PUSH2 0x77E SWAP1 DUP3 PUSH2 0x1D8F JUMP JUMPDEST POP PUSH1 0x67 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH12 0x204FCE5E3E25026110000000 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH0 NOT PUSH1 0x6E DUP2 SWAP1 SSTORE PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0x1E4F JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x70 DUP2 SWAP1 SSTORE PUSH1 0x6A PUSH0 PUSH2 0x7D6 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 SWAP1 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x6F SLOAD PUSH1 0x71 SSTORE PUSH1 0x6C SWAP1 MSTORE PUSH32 0x7FEBD347DF14EA35C529E50FB2DD629D4A6226F5CCC893710FB466F8B83823FC DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH32 0x8C482E007F935C93984DDF7A647E33EF99566883FFAE3563AA616DC14D1632F7 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0xB6E99D88B536AE7728C4B89CA5A6073CF06FD2059E0AFF5B1A4DE2C799D9CB96 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH2 0x369 SWAP1 SWAP3 MSTORE PUSH1 0x72 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x8A4 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x6F SLOAD PUSH1 0x40 MLOAD PUSH2 0x8D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x924 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x92F PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x94D PUSH2 0x972 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x95C DUP2 DUP4 PUSH2 0x1D1D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x41A SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH1 0x6F SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x68 SLOAD DUP2 LT ISZERO PUSH2 0xA1C JUMPI PUSH1 0x6A PUSH0 PUSH1 0x68 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x99E JUMPI PUSH2 0x99E PUSH2 0x1E62 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x9CC SWAP1 DUP5 PUSH2 0x1CE3 JUMP JUMPDEST SWAP3 POP PUSH1 0x69 PUSH0 PUSH1 0x68 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9E4 JUMPI PUSH2 0x9E4 PUSH2 0x1E62 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xA12 SWAP1 DUP4 PUSH2 0x1CE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x97E JUMP JUMPDEST POP SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4A7 SWAP2 DUP6 SWAP1 PUSH2 0x4F2 SWAP1 DUP7 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH0 PUSH2 0x4A7 CALLER DUP5 DUP5 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xA70 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x924 DUP2 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0xD54 DUP4 PUSH2 0x1049 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xD7D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDA1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xDB8 JUMPI PUSH2 0xDAF DUP4 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xDB8 DUP4 PUSH2 0x116D JUMP JUMPDEST PUSH2 0xDC1 DUP3 PUSH2 0x1049 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDEA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE0E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE25 JUMPI PUSH2 0xE1C DUP3 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xE25 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xE51 JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE96 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xEBD JUMPI PUSH1 0x71 SLOAD DUP2 GT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xEE9 JUMPI POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xF55 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF2E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF55 JUMPI PUSH1 0x71 SLOAD DUP2 GT ISZERO PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH2 0xF60 DUP4 DUP4 DUP4 PUSH2 0x1279 JUMP JUMPDEST POP POP PUSH1 0x72 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x668 PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x606 JUMPI POP MLOAD ISZERO ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x114A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1214 JUMPI PUSH2 0x11FB DUP2 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xA2153420D844928B4421650203C77BABC8B33D7F2E7B450E2966DB0C22097753 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x12B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12C8 DUP4 DUP4 DUP4 PUSH2 0x13A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x130C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x131C JUMPI PUSH2 0x12C8 DUP4 DUP4 DUP4 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x135A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x136A JUMPI PUSH2 0x12C8 DUP4 DUP4 DUP4 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x12C8 DUP4 DUP4 DUP4 PUSH2 0x19A8 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x668 CALLER PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x13AC PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x144E JUMPI PUSH2 0x3E8 PUSH1 0x6F SLOAD PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x43616E6E6F74207075726368617365206D6F7265207468616E2031306D202830 SWAP1 DUP3 ADD MSTORE PUSH32 0x2E312529206F6620737570706C7920696E2073696E676C65207472616E736163 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5D8 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x1459 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1463 SWAP1 DUP4 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2710 SWAP1 PUSH2 0x147E SWAP1 DUP5 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x1488 SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1495 PUSH2 0x942 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x14BC JUMPI PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x14E5 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1518 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1531 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1558 SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x70 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x1574 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x80 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x15A8 SWAP2 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH32 0xE6EF78C5A1F105FC4B9500EEB7CD09B041367BDEE35F1D85761735EE78B3FF2E SWAP2 SWAP1 PUSH2 0x15ED SWAP1 DUP3 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x1614 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0xA PUSH2 0x161F DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x169E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656C6C206D6F7265207468616E20313025206F662062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E636520696E2073696E676C65207472616E73616374696F6E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D8 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x16A9 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x16B3 SWAP1 DUP4 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2710 SWAP1 PUSH2 0x16CE SWAP1 DUP5 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x16D8 SWAP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x16E5 PUSH2 0x942 JUMP JUMPDEST DUP2 PUSH1 0xC0 ADD MLOAD PUSH2 0x16F4 SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x170C JUMPI PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x6A PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC0 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x1758 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x177F SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1798 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x17BF SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x70 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x17DB SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC0 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x180F SWAP2 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0xC0 DUP3 ADD MLOAD PUSH32 0xFF000E16C1C0D33B07404C2B2ABB9832356B5CFD57566D73C9D09611F030890D SWAP2 SWAP1 PUSH2 0x15ED SWAP1 DUP3 PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0x185C PUSH2 0x1B02 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x1867 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1871 SWAP1 DUP4 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x18A4 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x18D7 SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1905 SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1938 SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x2541109A23D530C06D62A3BF63D8D03107194870126FDDB7170C0DAEF360CD8A SWAP2 ADD PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x1B02 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x19C2 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x19CC SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1A1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520676F747461206B6565702031204D45544820616C7761797321000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D8 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x1A26 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x1A30 SWAP1 DUP4 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1A5F SWAP1 DUP5 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6A SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1A92 SWAP1 DUP5 SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xD9923E08D9D88FF7A7E9B8460F3163DC6B887FABE315449DA3B5CD16BB5E9340 SWAP2 ADD PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B47 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B85 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B45 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x652 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BC9 DUP4 PUSH2 0x1B99 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BF2 DUP5 PUSH2 0x1B99 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C00 PUSH1 0x20 DUP6 ADD PUSH2 0x1B99 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C20 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C37 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C40 DUP3 PUSH2 0x1B99 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1C40 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 DUP4 PUSH2 0x1B99 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8E PUSH1 0x20 DUP5 ADD PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CAB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CC9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4AB PUSH2 0x1CCF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4AB PUSH2 0x1CCF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1D2B JUMPI PUSH2 0x1D2B PUSH2 0x1D09 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x12C8 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D69 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D88 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D75 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA9 JUMPI PUSH2 0x1DA9 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x1DBD DUP2 PUSH2 0x1DB7 DUP5 SLOAD PUSH2 0x1C97 JUMP JUMPDEST DUP5 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DD9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E47 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E1E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1DFF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E3B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E5D JUMPI PUSH2 0x1E5D PUSH2 0x1D09 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206578636565647320746865206D617854 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3C20B6B7BAB73A17 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1F1A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B45 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4AB JUMPI PUSH2 0x4AB PUSH2 0x1CCF JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SLOAD 0xE5 0xB0 0xF6 TIMESTAMP PUSH8 0x65178E5F7312FDFF SWAP4 JUMPI 0xD PUSH23 0x15D0349F198C19856FAF32AE4B64736F6C634300081800 CALLER ",
							"sourceMap": "26674:21434:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30000:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32052:181;;;;;;:::i;:::-;;:::i;:::-;;;1272:14:1;;1265:22;1247:41;;1235:2;1220:18;32052:181:0;1107:187:1;30410:115:0;30510:7;;30410:115;;;1445:25:1;;;1433:2;1418:18;30410:115:0;1299:177:1;31378:336:0;;;;;;:::i;:::-;;:::i;30248:83::-;30314:9;;30248:83;;30314:9;;;;1956:36:1;;1944:2;1929:18;30248:83:0;1814:184:1;32306:215:0;;;;;;:::i;:::-;;:::i;28014:22::-;;;;;;26899:26;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2352:32:1;;;2334:51;;2322:2;2307:18;26899:26:0;2188:203:1;28115:21:0;;;;;;;;;34855:576;;;;;;:::i;:::-;;:::i;47214:128::-;;;;;;:::i;:::-;-1:-1:-1;;;;;47305:29:0;47281:4;47305:29;;;:20;:29;;;;;;;;;47214:128;30648:378;;;;;;:::i;:::-;;:::i;22656:103::-;;;:::i;:::-;;47768:226;;;;;;:::i;:::-;-1:-1:-1;;;;;47885:17:0;47837:7;47885:17;;;:7;:17;;;;;;;;;47932:7;:17;;;;;;;47885;;47768:226;;;;;2761:25:1;;;2817:2;2802:18;;2795:34;;;;2734:18;47768:226:0;2587:248:1;28482:1429:0;;;:::i;33008:99::-;;;;;;:::i;:::-;;:::i;28080:26::-;;;;;;22015:87;22088:6;;-1:-1:-1;;;;;22088:6:0;22015:87;;35498:261;;;:::i;30121:87::-;;;:::i;35856:639::-;;;:::i;32594:225::-;;;;;;:::i;:::-;;:::i;31098:187::-;;;;;;:::i;:::-;;:::i;27822:22::-;;;;;;47421:110;;;;;;:::i;:::-;-1:-1:-1;;;;;47503:20:0;47479:4;47503:20;;;:11;:20;;;;;;;;;47421:110;31807:163;;;;;;:::i;:::-;-1:-1:-1;;;;;31935:18:0;;;31908:7;31935:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;31807:163;22914:201;;;;;;:::i;:::-;;:::i;30000:83::-;30037:13;30070:5;30063:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30000:83;:::o;32052:181::-;32147:4;32164:39;20205:10;32187:7;32196:6;32164:8;:39::i;:::-;-1:-1:-1;32221:4:0;32052:181;;;;;:::o;31378:336::-;31546:4;31563:36;31573:6;31581:9;31592:6;31563:9;:36::i;:::-;-1:-1:-1;;;;;31641:19:0;;;;;;:11;:19;;;;;;;;20205:10;31641:33;;;;;;;;;31610:74;;31619:6;;31641:42;;31677:6;;31641:42;:::i;:::-;31610:8;:74::i;:::-;-1:-1:-1;31702:4:0;31378:336;;;;;:::o;32306:215::-;20205:10;32394:4;32443:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;32443:34:0;;;;;;;;;;32394:4;;32411:80;;32434:7;;32443:47;;32480:10;;32443:47;:::i;26899:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26899:26:0;;-1:-1:-1;26899:26:0;:::o;34855:576::-;-1:-1:-1;;;;;34950:16:0;;34913:7;34950:16;;;:7;:16;;;;;;35074:7;;35064:17;;;35056:72;;;;-1:-1:-1;;;35056:72:0;;4365:2:1;35056:72:0;;;4347:21:1;4404:2;4384:18;;;4377:30;4443:34;4423:18;;;4416:62;-1:-1:-1;;;4494:18:1;;;4487:40;4544:19;;35056:72:0;;;;;;;;;35205:19;35227:10;:8;:10::i;:::-;35205:32;;35252:6;35262:1;35252:11;35248:176;;-1:-1:-1;35287:1:0;;34855:576;-1:-1:-1;;;34855:576:0:o;35248:176::-;35392:20;35401:11;35392:6;:20;:::i;:::-;35385:27;34855:576;-1:-1:-1;;;;34855:576:0:o;30648:378::-;-1:-1:-1;;;;;30819:20:0;;30734:7;30819:20;;;:11;:20;;;;;;;;30815:204;;;-1:-1:-1;;;;;;30863:16:0;;;;;:7;:16;;;;;;;30648:378::o;30815:204::-;30988:19;30999:7;30988:10;:19::i;30815:204::-;30648:378;;;:::o;22656:103::-;21901:13;:11;:13::i;:::-;22721:30:::1;22748:1;22721:18;:30::i;:::-;22656:103::o:0;28482:1429::-;15965:19;15988:13;;;;;;15987:14;;16035:34;;;;-1:-1:-1;16053:12:0;;16068:1;16053:12;;;;:16;16035:34;16034:108;;;-1:-1:-1;16114:4:0;4927:19;:23;;;16075:66;;-1:-1:-1;16124:12:0;;;;;:17;16075:66;16012:204;;;;-1:-1:-1;;;16012:204:0;;5033:2:1;16012:204:0;;;5015:21:1;5072:2;5052:18;;;5045:30;5111:34;5091:18;;;5084:62;-1:-1:-1;;;5162:18:1;;;5155:44;5216:19;;16012:204:0;4831:410:1;16012:204:0;16227:12;:16;;-1:-1:-1;;16227:16:0;16242:1;16227:16;;;16254:67;;;;16289:13;:20;;-1:-1:-1;;16289:20:0;;;;;16254:67;28660:35:::1;:33;:35::i;:::-;28740:14;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;28740:14:0::1;::::0;::::1;::::0;:5:::1;::::0;:14:::1;::::0;:5;:14:::1;:::i;:::-;-1:-1:-1::0;28765:16:0::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;28765:16:0::1;::::0;::::1;::::0;:7:::1;::::0;:16:::1;::::0;:7;:16:::1;:::i;:::-;-1:-1:-1::0;28792:9:0::1;:14:::0;;-1:-1:-1;;28792:14:0::1;28804:2;28792:14;::::0;;28915:29:::1;28905:7;:39:::0;;;-1:-1:-1;;28989:4:0::1;:18:::0;;;29086:14:::1;::::0;28915:29;29086:14:::1;:::i;:::-;29078:4;;:23;;;;:::i;:::-;29067:7;:35:::0;;;29218:7:::1;:16;29226:7;22088:6:::0;;-1:-1:-1;;;;;22088:6:0;;22015:87;29226:7:::1;-1:-1:-1::0;;;;;29218:16:0::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;29218:16:0;;;:26;;;;29272:7:::1;::::0;29258:11:::1;:21:::0;29353:11:::1;:23:::0;;;:30;;-1:-1:-1;;29353:30:0;;::::1;29379:4;29353:30:::0;;::::1;::::0;;;29394:64;:71;;;::::1;::::0;::::1;::::0;;29476:64;:71;;;::::1;::::0;::::1;::::0;;29496:42:::1;29737:64:::0;;;29821:9:::1;:16:::0;;;;::::1;;::::0;;29876:7:::1;22088:6:::0;;-1:-1:-1;;;;;22088:6:0;;22015:87;29876:7:::1;-1:-1:-1::0;;;;;29855:38:0::1;29872:1;-1:-1:-1::0;;;;;29855:38:0::1;-1:-1:-1::0;;;;;;;;;;;29885:7:0::1;;29855:38;;;;1445:25:1::0;;1433:2;1418:18;;1299:177;29855:38:0::1;;;;;;;;16347:14:::0;16343:102;;;16394:5;16378:21;;-1:-1:-1;;16378:21:0;;;16419:14;;-1:-1:-1;1956:36:1;;16419:14:0;;1944:2:1;1929:18;16419:14:0;;;;;;;16343:102;15954:498;28482:1429::o;33008:99::-;21901:13;:11;:13::i;:::-;33080:9:::1;:19:::0;;-1:-1:-1;;33080:19:0::1;::::0;::::1;;::::0;;;::::1;::::0;;33008:99::o;35498:261::-;35539:7;35621:15;35638;35657:19;:17;:19::i;:::-;35620:56;;-1:-1:-1;35620:56:0;-1:-1:-1;35734:17:0;35620:56;;35734:17;:::i;:::-;35727:24;;;;35498:261;:::o;30121:87::-;30160:13;30193:7;30186:14;;;;;:::i;35856:639::-;36012:7;;36048;;35906;;;;;36123:327;36147:9;:16;36143:20;;36123:327;;;36285:7;:21;36293:9;36303:1;36293:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;36293:12:0;36285:21;;;;;;;;;;;;;36275:31;;:7;:31;:::i;:::-;36265:41;;36417:7;:21;36425:9;36435:1;36425:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;36425:12:0;36417:21;;;;;;;;;;;;;36407:31;;:7;:31;:::i;:::-;36397:41;-1:-1:-1;36165:3:0;;36123:327;;;-1:-1:-1;36470:7:0;;36479;;-1:-1:-1;35856:639:0;-1:-1:-1;35856:639:0:o;32594:225::-;20205:10;32687:4;32736:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;32736:34:0;;;;;;;;;;32687:4;;32704:85;;32727:7;;32736:52;;32773:15;;32736:52;:::i;31098:187::-;31196:4;31213:42;20205:10;31237:9;31248:6;31213:9;:42::i;22914:201::-;21901:13;:11;:13::i;:::-;-1:-1:-1;;;;;23003:22:0;::::1;22995:73;;;::::0;-1:-1:-1;;;22995:73:0;;8198:2:1;22995:73:0::1;::::0;::::1;8180:21:1::0;8237:2;8217:18;;;8210:30;8276:34;8256:18;;;8249:62;-1:-1:-1;;;8327:18:1;;;8320:36;8373:19;;22995:73:0::1;7996:402:1::0;22995:73:0::1;23079:28;23098:8;23079:18;:28::i;36579:506::-:0;-1:-1:-1;;;;;36770:19:0;;36762:68;;;;-1:-1:-1;;;36762:68:0;;8605:2:1;36762:68:0;;;8587:21:1;8644:2;8624:18;;;8617:30;8683:34;8663:18;;;8656:62;-1:-1:-1;;;8734:18:1;;;8727:34;8778:19;;36762:68:0;8403:400:1;36762:68:0;-1:-1:-1;;;;;36849:21:0;;36841:68;;;;-1:-1:-1;;;36841:68:0;;9010:2:1;36841:68:0;;;8992:21:1;9049:2;9029:18;;;9022:30;9088:34;9068:18;;;9061:62;-1:-1:-1;;;9139:18:1;;;9132:32;9181:19;;36841:68:0;8808:398:1;36841:68:0;-1:-1:-1;;;;;36993:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;37045:32;;1445:25:1;;;37045:32:0;;1418:18:1;37045:32:0;;;;;;;36579:506;;;:::o;37208:2505::-;37367:5;;;;;;;:14;37359:23;;;;;;37393:5;:12;;-1:-1:-1;;37393:12:0;;;;;-1:-1:-1;;;;;37476:18:0;;37468:68;;;;-1:-1:-1;;;37468:68:0;;9413:2:1;37468:68:0;;;9395:21:1;9452:2;9432:18;;;9425:30;9491:34;9471:18;;;9464:62;-1:-1:-1;;;9542:18:1;;;9535:35;9587:19;;37468:68:0;9211:401:1;37468:68:0;-1:-1:-1;;;;;37555:16:0;;37547:64;;;;-1:-1:-1;;;37547:64:0;;9819:2:1;37547:64:0;;;9801:21:1;9858:2;9838:18;;;9831:30;9897:34;9877:18;;;9870:62;-1:-1:-1;;;9948:18:1;;;9941:33;9991:19;;37547:64:0;9617:399:1;37547:64:0;37639:1;37630:6;:10;37622:64;;;;-1:-1:-1;;;37622:64:0;;10223:2:1;37622:64:0;;;10205:21:1;10262:2;10242:18;;;10235:30;10301:34;10281:18;;;10274:62;-1:-1:-1;;;10352:18:1;;;10345:39;10401:19;;37622:64:0;10021:405:1;37622:64:0;37931:14;37940:4;37931:8;:14::i;:::-;:22;;37949:4;37931:22;:67;;;;-1:-1:-1;;;;;;37972:26:0;;;;;;:20;:26;;;;;;;;37971:27;37931:67;:102;;;;-1:-1:-1;;;;;;38016:17:0;;;;;;:11;:17;;;;;;;;38015:18;37931:102;37913:228;;;38068:22;38085:4;38068:16;:22::i;:::-;38109:20;38124:4;38109:14;:20::i;:::-;38171:12;38180:2;38171:8;:12::i;:::-;:20;;38187:4;38171:20;:63;;;;-1:-1:-1;;;;;;38210:24:0;;;;;;:20;:24;;;;;;;;38209:25;38171:63;:96;;;;-1:-1:-1;;;;;;38252:15:0;;;;;;:11;:15;;;;;;;;38251:16;38171:96;38153:218;;;38302:20;38319:2;38302:16;:20::i;:::-;38341:18;38356:2;38341:14;:18::i;:::-;22088:6;;-1:-1:-1;;;;;38466:15:0;;;22088:6;;38466:15;;;;:32;;-1:-1:-1;22088:6:0;;-1:-1:-1;;;;;38485:13:0;;;22088:6;;38485:13;;38466:32;38462:463;;;-1:-1:-1;;;;;38689:26:0;;;;;;:20;:26;;;;;;;;38688:27;:56;;;;-1:-1:-1;;;;;;38720:24:0;;;;;;:20;:24;;;;;;;;38719:25;38688:56;38684:230;;;38842:11;;38832:6;:21;;38824:74;;;;-1:-1:-1;;;38824:74:0;;;;;;;:::i;:::-;22088:6;;-1:-1:-1;;;;;39000:15:0;;;22088:6;;39000:15;;;;:32;;-1:-1:-1;22088:6:0;;-1:-1:-1;;;;;39019:13:0;;;22088:6;;39019:13;;39000:32;38996:452;;;-1:-1:-1;;;;;39212:26:0;;;;;;:20;:26;;;;;;;;39211:27;:56;;;;-1:-1:-1;;;;;;39243:24:0;;;;;;:20;:24;;;;;;;;39242:25;39211:56;39207:230;;;39365:11;;39355:6;:21;;39347:74;;;;-1:-1:-1;;;39347:74:0;;;;;;;:::i;:::-;39647:32;39662:4;39668:2;39672:6;39647:14;:32::i;:::-;-1:-1:-1;;39692:5:0;:13;;-1:-1:-1;;39692:13:0;;;-1:-1:-1;37208:2505:0:o;22180:132::-;22088:6;;-1:-1:-1;;;;;22088:6:0;20205:10;22244:23;22236:68;;;;-1:-1:-1;;;22236:68:0;;11042:2:1;22236:68:0;;;11024:21:1;;;11061:18;;;11054:30;11120:34;11100:18;;;11093:62;11172:18;;22236:68:0;10840:356:1;23275:191:0;23368:6;;;-1:-1:-1;;;;;23385:17:0;;;-1:-1:-1;;;;;;23385:17:0;;;;;;;23418:40;;23368:6;;;23385:17;23368:6;;23418:40;;23349:16;;23418:40;23338:128;23275:191;:::o;21558:97::-;18108:13;;;;;;;18100:69;;;;-1:-1:-1;;;18100:69:0;;;;;;;:::i;:::-;21621:26:::1;:24;:26::i;33273:217::-:0;33405:32;;;;;;;;;;;;;;;;-1:-1:-1;;;;;33405:32:0;-1:-1:-1;;;33405:32:0;;;33385:53;;33332:4;;;;;;-1:-1:-1;;;;;33385:19:0;;;:53;;33405:32;33385:53;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33349:89;;;;33456:7;:26;;;;-1:-1:-1;33467:11:0;:15;;;33449:33;-1:-1:-1;;;33273:217:0:o;33674:187::-;-1:-1:-1;;;;;33745:29:0;;;;;;:20;:29;;;;;;;;33744:30;33736:70;;;;-1:-1:-1;;;33736:70:0;;12107:2:1;33736:70:0;;;12089:21:1;12146:2;12126:18;;;12119:30;12185:29;12165:18;;;12158:57;12232:18;;33736:70:0;11905:351:1;33736:70:0;-1:-1:-1;;;;;33817:29:0;;;;;:20;:29;;;;;:36;;-1:-1:-1;;33817:36:0;33849:4;33817:36;;;33674:187::o;34114:584::-;-1:-1:-1;;;;;34183:20:0;;;;;;:11;:20;;;;;;;;34182:21;34174:61;;;;-1:-1:-1;;;34174:61:0;;12107:2:1;34174:61:0;;;12089:21:1;12146:2;12126:18;;;12119:30;12185:29;12165:18;;;12158:57;12232:18;;34174:61:0;11905:351:1;34174:61:0;-1:-1:-1;;;;;34300:16:0;;34319:1;34300:16;;;:7;:16;;;;;;:20;34296:214;;34479:19;34490:7;34479:10;:19::i;:::-;-1:-1:-1;;;;;34460:16:0;;;;;;:7;:16;;;;;:38;34296:214;-1:-1:-1;;;;;34564:20:0;;;;;:11;:20;;;;;:27;;-1:-1:-1;;34564:27:0;34587:4;34564:27;;;;;;34667:9;:23;;;;;;;;;;;;;;-1:-1:-1;;;;;;34667:23:0;;;;;;34114:584::o;39793:955::-;-1:-1:-1;;;;;39944:19:0;;;;;;:11;:19;;;;;;;;:46;;;;-1:-1:-1;;;;;;39968:22:0;;;;;;:11;:22;;;;;;;;39967:23;39944:46;39940:801;;;40008:48;40030:6;40038:9;40049:6;40008:21;:48::i;:::-;39793:955;;;:::o;39940:801::-;-1:-1:-1;;;;;40214:19:0;;;;;;:11;:19;;;;;;;;40213:20;:46;;;;-1:-1:-1;;;;;;40237:22:0;;;;;;:11;:22;;;;;;;;40213:46;40209:532;;;40276:46;40296:6;40304:9;40315:6;40276:19;:46::i;40209:532::-;-1:-1:-1;;;;;40486:19:0;;;;;;:11;:19;;;;;;;;:45;;;;-1:-1:-1;;;;;;40509:22:0;;;;;;:11;:22;;;;;;;;40486:45;40482:259;;;40549:48;40571:6;40579:9;40590:6;40549:21;:48::i;40482:259::-;40685:44;40703:6;40711:9;40722:6;40685:17;:44::i;21663:113::-;18108:13;;;;;;;18100:69;;;;-1:-1:-1;;;18100:69:0;;;;;;;:::i;:::-;21736:32:::1;20205:10:::0;21736:18:::1;:32::i;43171:1797::-:0;43273:24;;:::i;:::-;43375:9;;;;:17;;:9;:17;43372:157;;43439:4;43429:7;;:14;;;;:::i;:::-;43417:7;:27;;43409:108;;;;-1:-1:-1;;;43409:108:0;;12463:2:1;43409:108:0;;;12445:21:1;12502:2;12482:18;;;12475:30;;;12541:34;12521:18;;;12514:62;12612:34;12592:18;;;12585:62;-1:-1:-1;;;12663:19:1;;;12656:35;12708:19;;43409:108:0;12261:472:1;43409:108:0;43587:26;;;43653:10;:8;:10::i;:::-;43643:20;;:7;:20;:::i;:::-;43624:16;;;:39;43753:1;43731:19;;;:23;;;43876:5;;43843:29;;:7;:29;:::i;:::-;43842:39;;;;:::i;:::-;43822:17;;;:59;43932:10;:8;:10::i;:::-;43912:4;:17;;;:30;;;;:::i;:::-;43892:17;;;:50;;;44042:21;44024:108;;44103:17;;;;44080:20;;;:40;44024:108;44297:16;;-1:-1:-1;;;;;44278:15:0;;44297:16;44278:15;;;:7;:15;;;;;:35;;:15;;44297:16;44278:35;;44297:16;;44278:35;:::i;:::-;;;;-1:-1:-1;;44343:16:0;;;;;-1:-1:-1;;;;;44324:15:0;;;;;;:7;:15;;;;;;:35;;44343:16;;44324:15;;:35;;44343:16;;44324:35;:::i;:::-;;;;-1:-1:-1;;44527:17:0;;;;44508:16;;;;:36;;44527:17;44508:36;:::i;:::-;-1:-1:-1;;;;;44485:18:0;;;;;;:7;:18;;;;;:60;;:18;;;:60;;;;;:::i;:::-;;;;-1:-1:-1;;44651:20:0;;;;44640:7;:31;;:7;;:31;;44651:20;;44640:31;:::i;:::-;;;;-1:-1:-1;;44796:17:0;;;;44777:16;;-1:-1:-1;;;;;44748:67:0;;;;;;;;-1:-1:-1;;;;;;;;;;;44748:67:0;44777:36;;;:::i;:::-;44748:67;;1445:25:1;;;1433:2;1418:18;44748:67:0;;;;;;;44876:16;;44927:17;;;;44841:119;;44876:16;44908:36;;44876:16;44908:36;:::i;:::-;44841:119;;;2761:25:1;;;2817:2;2802:18;;2795:34;;;;2734:18;44841:119:0;;;;;;;;43262:1706;43171:1797;;;:::o;41269:1760::-;41369:24;;:::i;:::-;41567:2;41546:18;41557:6;41546:10;:18::i;:::-;:23;;;;:::i;:::-;41535:7;:34;;41527:105;;;;-1:-1:-1;;;41527:105:0;;13113:2:1;41527:105:0;;;13095:21:1;13152:2;13132:18;;;13125:30;13191:34;13171:18;;;13164:62;13262:28;13242:18;;;13235:56;13308:19;;41527:105:0;12911:422:1;41527:105:0;41693:26;;;41759:10;:8;:10::i;:::-;41749:20;;:7;:20;:::i;:::-;41730:16;;;:39;41805:1;41782:20;;;:24;;;41930:5;;41896:30;;:7;:30;:::i;:::-;41895:40;;;;:::i;:::-;41874:18;;;:61;41988:10;:8;:10::i;:::-;41967:4;:18;;;:31;;;;:::i;:::-;41946:18;;;:52;;;42084:22;42080:97;;42147:18;;;;42124:20;;;:41;42080:97;42328:4;:16;;;42309:7;:15;42317:6;-1:-1:-1;;;;;42309:15:0;-1:-1:-1;;;;;42309:15:0;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;;42523:18:0;;;;42504:16;;:37;;42523:18;42504:37;:::i;:::-;-1:-1:-1;;;;;42481:18:0;;;;;;:7;:18;;;;;:61;;:18;;;:61;;;;;:::i;:::-;;;;-1:-1:-1;;42595:18:0;;;;42576:16;;;;:37;;42595:18;42576:37;:::i;:::-;-1:-1:-1;;;;;42553:18:0;;;;;;:7;:18;;;;;:61;;:18;;;:61;;;;;:::i;:::-;;;;-1:-1:-1;;42720:20:0;;;;42709:7;:31;;:7;;:31;;42720:20;;42709:31;:::i;:::-;;;;-1:-1:-1;;42865:18:0;;;;42846:16;;-1:-1:-1;;;;;42817:68:0;;;;;;;;-1:-1:-1;;;;;;;;;;;42817:68:0;42846:37;;;:::i;:::-;42817:68;;1445:25:1;;;1433:2;1418:18;42817:68:0;;;;;;;42936:16;;42987:18;;;;42903:118;;42936:16;42968:37;;42936:16;42968:37;:::i;45141:936::-;45243:24;;:::i;:::-;45381:26;;;45447:10;:8;:10::i;:::-;45437:20;;:7;:20;:::i;:::-;45418:16;;;;:39;;;;45574:16;;-1:-1:-1;;;;;45555:15:0;;45574:16;45555:15;;;:7;:15;;;;;;:35;;45574:16;;45555:15;;:35;;45574:16;;45555:35;:::i;:::-;;;;-1:-1:-1;;45620:16:0;;;;;-1:-1:-1;;;;;45601:15:0;;;;;;:7;:15;;;;;;:35;;45620:16;;45601:15;;:35;;45620:16;;45601:35;:::i;:::-;;;;-1:-1:-1;;45740:16:0;;-1:-1:-1;;;;;45718:18:0;;45740:16;45718:18;;;:7;:18;;;;;:38;;:18;;45740:16;45718:38;;45740:16;;45718:38;:::i;:::-;;;;-1:-1:-1;;45789:16:0;;;;;-1:-1:-1;;;;;45767:18:0;;;;;;:7;:18;;;;;;:38;;45789:16;;45767:18;;:38;;45789:16;;45767:38;:::i;:::-;;;;-1:-1:-1;;45910:16:0;;45882:45;;1445:25:1;;;-1:-1:-1;;;;;45882:45:0;;;;;;;;-1:-1:-1;;;;;;;;;;;45882:45:0;1433:2:1;1418:18;45882:45:0;;;;;;;45980:16;;45945:124;;;2761:25:1;;;2817:2;2802:18;;2795:34;;;;45945:124:0;;2734:18:1;45945:124:0;2587:248:1;46218:927:0;46316:24;;:::i;:::-;46486:19;46465:18;46476:6;46465:10;:18::i;:::-;:40;;;;:::i;:::-;46454:7;:51;;46446:93;;;;-1:-1:-1;;;46446:93:0;;13540:2:1;46446:93:0;;;13522:21:1;13579:2;13559:18;;;13552:30;13618:31;13598:18;;;13591:59;13667:18;;46446:93:0;13338:353:1;46446:93:0;46598:26;;;46664:10;:8;:10::i;:::-;46654:20;;:7;:20;:::i;:::-;46635:16;;;;:39;;;-1:-1:-1;;;;;46791:15:0;;;;;;:7;:15;;;;;;:35;;:15;;;:35;;46635:39;;46791:35;:::i;:::-;;;;-1:-1:-1;;46945:16:0;;;;;-1:-1:-1;;;;;46923:18:0;;;;;;:7;:18;;;;;;:38;;46945:16;;46923:18;;:38;;46945:16;;46923:38;:::i;:::-;;;;-1:-1:-1;;47008:16:0;;46979:47;;1445:25:1;;;-1:-1:-1;;;;;46979:47:0;;;;;;;;-1:-1:-1;;;;;;;;;;;46979:47:0;1433:2:1;1418:18;46979:47:0;;;;;;;47075:16;;47044:93;;;2761:25:1;;;2817:2;2802:18;;2795:34;;;;47044:93:0;;2734:18:1;47044:93:0;2587:248:1;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:250:1:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:1;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:1;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:1:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:1;;777:42;;767:70;;833:1;830;823:12;848:254;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:1:o;1481:328::-;1558:6;1566;1574;1627:2;1615:9;1606:7;1602:23;1598:32;1595:52;;;1643:1;1640;1633:12;1595:52;1666:29;1685:9;1666:29;:::i;:::-;1656:39;;1714:38;1748:2;1737:9;1733:18;1714:38;:::i;:::-;1704:48;;1799:2;1788:9;1784:18;1771:32;1761:42;;1481:328;;;;;:::o;2003:180::-;2062:6;2115:2;2103:9;2094:7;2090:23;2086:32;2083:52;;;2131:1;2128;2121:12;2083:52;-1:-1:-1;2154:23:1;;2003:180;-1:-1:-1;2003:180:1:o;2396:186::-;2455:6;2508:2;2496:9;2487:7;2483:23;2479:32;2476:52;;;2524:1;2521;2514:12;2476:52;2547:29;2566:9;2547:29;:::i;:::-;2537:39;2396:186;-1:-1:-1;;;2396:186:1:o;2840:273::-;2896:6;2949:2;2937:9;2928:7;2924:23;2920:32;2917:52;;;2965:1;2962;2955:12;2917:52;3004:9;2991:23;3057:5;3050:13;3043:21;3036:5;3033:32;3023:60;;3079:1;3076;3069:12;3118:260;3186:6;3194;3247:2;3235:9;3226:7;3222:23;3218:32;3215:52;;;3263:1;3260;3253:12;3215:52;3286:29;3305:9;3286:29;:::i;:::-;3276:39;;3334:38;3368:2;3357:9;3353:18;3334:38;:::i;:::-;3324:48;;3118:260;;;;;:::o;3383:380::-;3462:1;3458:12;;;;3505;;;3526:61;;3580:4;3572:6;3568:17;3558:27;;3526:61;3633:2;3625:6;3622:14;3602:18;3599:38;3596:161;;3679:10;3674:3;3670:20;3667:1;3660:31;3714:4;3711:1;3704:15;3742:4;3739:1;3732:15;3596:161;;3383:380;;;:::o;3768:127::-;3829:10;3824:3;3820:20;3817:1;3810:31;3860:4;3857:1;3850:15;3884:4;3881:1;3874:15;3900:128;3967:9;;;3988:11;;;3985:37;;;4002:18;;:::i;4033:125::-;4098:9;;;4119:10;;;4116:36;;;4132:18;;:::i;4574:127::-;4635:10;4630:3;4626:20;4623:1;4616:31;4666:4;4663:1;4656:15;4690:4;4687:1;4680:15;4706:120;4746:1;4772;4762:35;;4777:18;;:::i;:::-;-1:-1:-1;4811:9:1;;4706:120::o;5246:127::-;5307:10;5302:3;5298:20;5295:1;5288:31;5338:4;5335:1;5328:15;5362:4;5359:1;5352:15;5504:518;5606:2;5601:3;5598:11;5595:421;;;5642:5;5639:1;5632:16;5686:4;5683:1;5673:18;5756:2;5744:10;5740:19;5737:1;5733:27;5727:4;5723:38;5792:4;5780:10;5777:20;5774:47;;;-1:-1:-1;5815:4:1;5774:47;5870:2;5865:3;5861:12;5858:1;5854:20;5848:4;5844:31;5834:41;;5925:81;5943:2;5936:5;5933:13;5925:81;;;6002:1;5988:16;;5969:1;5958:13;5925:81;;;5929:3;;5504:518;;;:::o;6198:1345::-;6324:3;6318:10;6351:18;6343:6;6340:30;6337:56;;;6373:18;;:::i;:::-;6402:97;6492:6;6452:38;6484:4;6478:11;6452:38;:::i;:::-;6446:4;6402:97;:::i;:::-;6554:4;;6611:2;6600:14;;6628:1;6623:663;;;;7330:1;7347:6;7344:89;;;-1:-1:-1;7399:19:1;;;7393:26;7344:89;-1:-1:-1;;6155:1:1;6151:11;;;6147:24;6143:29;6133:40;6179:1;6175:11;;;6130:57;7446:81;;6593:944;;6623:663;5451:1;5444:14;;;5488:4;5475:18;;-1:-1:-1;;6659:20:1;;;6777:236;6791:7;6788:1;6785:14;6777:236;;;6880:19;;;6874:26;6859:42;;6972:27;;;;6940:1;6928:14;;;;6807:19;;6777:236;;;6781:3;7041:6;7032:7;7029:19;7026:201;;;7102:19;;;7096:26;-1:-1:-1;;7185:1:1;7181:14;;;7197:3;7177:24;7173:37;7169:42;7154:58;7139:74;;7026:201;;;7273:1;7264:6;7261:1;7257:14;7253:22;7247:4;7240:36;6593:944;;;;;6198:1345;;:::o;7548:112::-;7580:1;7606;7596:35;;7611:18;;:::i;:::-;-1:-1:-1;7645:9:1;;7548:112::o;7864:127::-;7925:10;7920:3;7916:20;7913:1;7906:31;7956:4;7953:1;7946:15;7980:4;7977:1;7970:15;10431:404;10633:2;10615:21;;;10672:2;10652:18;;;10645:30;10711:34;10706:2;10691:18;;10684:62;-1:-1:-1;;;10777:2:1;10762:18;;10755:38;10825:3;10810:19;;10431:404::o;11201:407::-;11403:2;11385:21;;;11442:2;11422:18;;;11415:30;11481:34;11476:2;11461:18;;11454:62;-1:-1:-1;;;11547:2:1;11532:18;;11525:41;11598:3;11583:19;;11201:407::o;11613:287::-;11742:3;11780:6;11774:13;11796:66;11855:6;11850:3;11843:4;11835:6;11831:17;11796:66;:::i;:::-;11878:16;;;;;11613:287;-1:-1:-1;;11613:287:1:o;12738:168::-;12811:9;;;12842;;12859:15;;;12853:22;;12839:37;12829:71;;12880:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1616200",
								"executionCost": "25910",
								"totalCost": "1642110"
							},
							"external": {
								"_excluded(uint256)": "4679",
								"_getCurrentSupply()": "infinite",
								"_getRate()": "infinite",
								"_rTotal()": "2340",
								"_tTotal()": "2338",
								"allowance(address,address)": "infinite",
								"antiWhale()": "2399",
								"approve(address,uint256)": "24639",
								"balanceOf(address)": "infinite",
								"decimals()": "2400",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize()": "infinite",
								"isExcluded(address)": "2612",
								"isExcludedFromMaxTx(address)": "2613",
								"maxTxAmount()": "2339",
								"name()": "infinite",
								"owner()": "2397",
								"rBalanceOf(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setAntiWhaleStatus(bool)": "26746",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"viewTBalanceRBalance(address)": "4776"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_tokenTransfer(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite",
								"excludeAddress(address)": "infinite",
								"excludeFromMaxTx(address)": "infinite",
								"isRouter(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26674,
									"end": 48108,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37095,
									"end": 37121,
									"name": "PUSH",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 37095,
									"end": 37121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37095,
									"end": 37121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 37095,
									"end": 37121,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 37095,
									"end": 37121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37095,
									"end": 37121,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26674,
									"end": 48108,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204554e5b0f6426765178e5f7312fdff93570d7615d0349f198c19856faf32ae4b64736f6c63430008180033",
									".code": [
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "80DA2287"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "97A9D560"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "AF465A27"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "AF465A27"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "CBA0E996"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "97A9D560"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "8C0B5E22"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "8C0B5E22"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "94E10784"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "80DA2287"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "8129FC1C"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "83F24C09"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "45E0B9D4"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "5319E78F"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "5319E78F"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "658C27A9"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "45E0B9D4"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "4D09DEB3"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "4DACF3F5"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 48108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30000,
											"end": 30083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 30000,
											"end": 30083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32052,
											"end": 32233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32052,
											"end": 32233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1286,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1107,
											"end": 1294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30410,
											"end": 30525,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30410,
											"end": 30525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30510,
											"end": 30517,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 30510,
											"end": 30517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30525,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30410,
											"end": 30525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30410,
											"end": 30525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30410,
											"end": 30525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1299,
											"end": 1476,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31378,
											"end": 31714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31378,
											"end": 31714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30248,
											"end": 30331,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30248,
											"end": 30331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30314,
											"end": 30323,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 30314,
											"end": 30323,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30248,
											"end": 30331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30248,
											"end": 30331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30314,
											"end": 30323,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 30314,
											"end": 30323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30314,
											"end": 30323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30314,
											"end": 30323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30248,
											"end": 30331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1814,
											"end": 1998,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32306,
											"end": 32521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32306,
											"end": 32521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 28036,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28014,
											"end": 28036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 28036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28014,
											"end": 28036,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28014,
											"end": 28036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 28036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28014,
											"end": 28036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26899,
											"end": 26925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 26899,
											"end": 26925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2188,
											"end": 2391,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28115,
											"end": 28136,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 34855,
											"end": 35431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 34855,
											"end": 35431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 47214,
											"end": 47342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47281,
											"end": 47285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47305,
											"end": 47325,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47305,
											"end": 47334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47214,
											"end": 47342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 30648,
											"end": 31026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 30648,
											"end": 31026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22656,
											"end": 22759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 47768,
											"end": 47994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47837,
											"end": 47844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47892,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 47939,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 47932,
											"end": 47949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 47949,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 47949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 47949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 47949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 47949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 47949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47885,
											"end": 47902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47768,
											"end": 47994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2587,
											"end": 2835,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28482,
											"end": 29911,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28482,
											"end": 29911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 29911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 28482,
											"end": 29911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28482,
											"end": 29911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 33008,
											"end": 33107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33008,
											"end": 33107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28080,
											"end": 28106,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28080,
											"end": 28106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28080,
											"end": 28106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28080,
											"end": 28106,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28080,
											"end": 28106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28080,
											"end": 28106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28080,
											"end": 28106,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22015,
											"end": 22102,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22015,
											"end": 22102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22015,
											"end": 22102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22015,
											"end": 22102,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35498,
											"end": 35759,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 35498,
											"end": 35759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35498,
											"end": 35759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 35498,
											"end": 35759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35498,
											"end": 35759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30121,
											"end": 30208,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 30121,
											"end": 30208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30121,
											"end": 30208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 30121,
											"end": 30208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 30121,
											"end": 30208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35856,
											"end": 36495,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 35856,
											"end": 36495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35856,
											"end": 36495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 35856,
											"end": 36495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 35856,
											"end": 36495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32594,
											"end": 32819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 32594,
											"end": 32819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31098,
											"end": 31285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31098,
											"end": 31285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27844,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27822,
											"end": 27844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 27822,
											"end": 27844,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 27822,
											"end": 27844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27822,
											"end": 27844,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 47421,
											"end": 47531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47479,
											"end": 47483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47514,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47503,
											"end": 47523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47421,
											"end": 47531,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 31807,
											"end": 31970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31946,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31953,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31807,
											"end": 31970,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22914,
											"end": 23115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 22914,
											"end": 23115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30037,
											"end": 30050,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30070,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30063,
											"end": 30075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30063,
											"end": 30075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30063,
											"end": 30075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30000,
											"end": 30083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32147,
											"end": 32151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32164,
											"end": 32203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20205,
											"end": 20215,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32187,
											"end": 32194,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32196,
											"end": 32202,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32164,
											"end": 32172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32164,
											"end": 32203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32164,
											"end": 32203,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32164,
											"end": 32203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32221,
											"end": 32225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31546,
											"end": 31550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31563,
											"end": 31599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 31573,
											"end": 31579,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31598,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31563,
											"end": 31572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 31563,
											"end": 31599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31563,
											"end": 31599,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 31563,
											"end": 31599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31652,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20205,
											"end": 20215,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 31610,
											"end": 31684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31619,
											"end": 31625,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31619,
											"end": 31625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 31641,
											"end": 31683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31677,
											"end": 31683,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31677,
											"end": 31683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 31641,
											"end": 31683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31683,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 31641,
											"end": 31683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31610,
											"end": 31684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31684,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 31610,
											"end": 31684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31702,
											"end": 31706,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32306,
											"end": 32521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20205,
											"end": 20215,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32394,
											"end": 32398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32454,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32468,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32394,
											"end": 32398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32394,
											"end": 32398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32411,
											"end": 32491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32411,
											"end": 32491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32434,
											"end": 32441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32434,
											"end": 32441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 32443,
											"end": 32490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 32490,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 32490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32443,
											"end": 32490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 32443,
											"end": 32490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26899,
											"end": 26925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26899,
											"end": 26925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34913,
											"end": 34920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34950,
											"end": 34957,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34950,
											"end": 34966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35074,
											"end": 35081,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 35074,
											"end": 35081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35064,
											"end": 35081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35064,
											"end": 35081,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35064,
											"end": 35081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4367,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 4384,
											"end": 4402,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4384,
											"end": 4402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65666C656374696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4563,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4544,
											"end": 4563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 35056,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35227,
											"end": 35237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 35227,
											"end": 35235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35227,
											"end": 35237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35227,
											"end": 35237,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 35227,
											"end": 35237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35252,
											"end": 35258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35262,
											"end": 35263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35252,
											"end": 35263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35248,
											"end": 35424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 35248,
											"end": 35424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35287,
											"end": 35288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35287,
											"end": 35288,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34855,
											"end": 35431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35248,
											"end": 35424,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 35248,
											"end": 35424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 35401,
											"end": 35412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 35392,
											"end": 35412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35412,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 35392,
											"end": 35412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35385,
											"end": 35412,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34855,
											"end": 35431,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34855,
											"end": 35431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30734,
											"end": 30741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30819,
											"end": 30830,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 30819,
											"end": 30839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30815,
											"end": 31019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30815,
											"end": 31019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30815,
											"end": 31019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30870,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30863,
											"end": 30879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30815,
											"end": 31019,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30815,
											"end": 31019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30988,
											"end": 31007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 30999,
											"end": 31006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30988,
											"end": 30998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30988,
											"end": 31007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30815,
											"end": 31019,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 30815,
											"end": 31019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 31026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22656,
											"end": 22759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 21901,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 21901,
											"end": 21914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22721,
											"end": 22751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22748,
											"end": 22749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22721,
											"end": 22739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 22721,
											"end": 22751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22721,
											"end": 22751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22721,
											"end": 22751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22656,
											"end": 22759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 29911,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28482,
											"end": 29911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 15984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15988,
											"end": 16001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15988,
											"end": 16001,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15988,
											"end": 16001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15988,
											"end": 16001,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15988,
											"end": 16001,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15988,
											"end": 16001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16035,
											"end": 16069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16053,
											"end": 16065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16068,
											"end": 16069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16053,
											"end": 16065,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16053,
											"end": 16065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16053,
											"end": 16065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16053,
											"end": 16065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16053,
											"end": 16069,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16069,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16035,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16034,
											"end": 16142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16034,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16034,
											"end": 16142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16114,
											"end": 16118,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4946,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16075,
											"end": 16141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16075,
											"end": 16141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16124,
											"end": 16136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16124,
											"end": 16136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16124,
											"end": 16136,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16124,
											"end": 16136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16124,
											"end": 16136,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16124,
											"end": 16141,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16075,
											"end": 16141,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16075,
											"end": 16141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5033,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5015,
											"end": 5036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5074,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 5052,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5052,
											"end": 5070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5145,
											"name": "PUSH",
											"source": 1,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 5091,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5091,
											"end": 5109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5216,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5216,
											"end": 5235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4831,
											"end": 5241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 16012,
											"end": 16216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16227,
											"end": 16239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16227,
											"end": 16243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16227,
											"end": 16243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16227,
											"end": 16243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16242,
											"end": 16243,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16227,
											"end": 16243,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16227,
											"end": 16243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16227,
											"end": 16243,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 16254,
											"end": 16321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16321,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 16254,
											"end": 16321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28660,
											"end": 28693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28660,
											"end": 28695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28660,
											"end": 28695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A8AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28740,
											"end": 28745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28740,
											"end": 28754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 28740,
											"end": 28754,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28740,
											"end": 28754,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A8AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28765,
											"end": 28772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28765,
											"end": 28781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 28765,
											"end": 28781,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28765,
											"end": 28781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28792,
											"end": 28801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28792,
											"end": 28806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 28806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28792,
											"end": 28806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28804,
											"end": 28806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28792,
											"end": 28806,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 28806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 28806,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28915,
											"end": 28944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 28905,
											"end": 28912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 28905,
											"end": 28944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28905,
											"end": 28944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28905,
											"end": 28944,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28989,
											"end": 28993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6E"
										},
										{
											"begin": 28989,
											"end": 29007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28989,
											"end": 29007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28989,
											"end": 29007,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 29086,
											"end": 29100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28915,
											"end": 28944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 29086,
											"end": 29100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 29086,
											"end": 29100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6E"
										},
										{
											"begin": 29078,
											"end": 29082,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 29078,
											"end": 29101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29078,
											"end": 29101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 29078,
											"end": 29101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29067,
											"end": 29102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29102,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 29218,
											"end": 29234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29226,
											"end": 29233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22015,
											"end": 22102,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29226,
											"end": 29233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 29226,
											"end": 29233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29218,
											"end": 29234,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29218,
											"end": 29244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 29272,
											"end": 29279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29258,
											"end": 29269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 29258,
											"end": 29279,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 29353,
											"end": 29376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29376,
											"name": "PUSH",
											"source": 0,
											"value": "7FEBD347DF14EA35C529E50FB2DD629D4A6226F5CCC893710FB466F8B83823FC"
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29379,
											"end": 29383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29383,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29353,
											"end": 29383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29458,
											"name": "PUSH",
											"source": 0,
											"value": "8C482E007F935C93984DDF7A647E33EF99566883FFAE3563AA616DC14D1632F7"
										},
										{
											"begin": 29394,
											"end": 29465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29465,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29465,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29465,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29476,
											"end": 29540,
											"name": "PUSH",
											"source": 0,
											"value": "B6E99D88B536AE7728C4B89CA5A6073CF06FD2059E0AFF5B1A4DE2C799D9CB96"
										},
										{
											"begin": 29476,
											"end": 29547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29476,
											"end": 29547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29476,
											"end": 29547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29476,
											"end": 29547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29476,
											"end": 29547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29476,
											"end": 29547,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29476,
											"end": 29547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29476,
											"end": 29547,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29496,
											"end": 29538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 29737,
											"end": 29801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29737,
											"end": 29801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29737,
											"end": 29801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29821,
											"end": 29837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29837,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29837,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29837,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29821,
											"end": 29837,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29876,
											"end": 29883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22015,
											"end": 22102,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29876,
											"end": 29883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 29876,
											"end": 29883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29885,
											"end": 29892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 29885,
											"end": 29892,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1476,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29855,
											"end": 29893,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16347,
											"end": 16361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16343,
											"end": 16445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16343,
											"end": 16445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 16343,
											"end": 16445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16378,
											"end": 16399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16378,
											"end": 16399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16378,
											"end": 16399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16378,
											"end": 16399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16378,
											"end": 16399,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16433,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 16343,
											"end": 16445,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 16343,
											"end": 16445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15954,
											"end": 16452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 29911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33008,
											"end": 33107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 21901,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 21901,
											"end": 21914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33080,
											"end": 33099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33008,
											"end": 33107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35498,
											"end": 35759,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35498,
											"end": 35759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35539,
											"end": 35546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35621,
											"end": 35636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35638,
											"end": 35653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35657,
											"end": 35676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 35657,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 35657,
											"end": 35676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35657,
											"end": 35676,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 35657,
											"end": 35676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35620,
											"end": 35676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35620,
											"end": 35676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35620,
											"end": 35676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35734,
											"end": 35751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 35620,
											"end": 35676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35620,
											"end": 35676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35734,
											"end": 35751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 35734,
											"end": 35751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35734,
											"end": 35751,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 35734,
											"end": 35751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35727,
											"end": 35751,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35727,
											"end": 35751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35727,
											"end": 35751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35727,
											"end": 35751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35498,
											"end": 35759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35498,
											"end": 35759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30121,
											"end": 30208,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 30121,
											"end": 30208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30173,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30193,
											"end": 30200,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 30186,
											"end": 30200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30186,
											"end": 30200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30186,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 30186,
											"end": 30200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30186,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30186,
											"end": 30200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35856,
											"end": 36495,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 35856,
											"end": 36495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36012,
											"end": 36019,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 36012,
											"end": 36019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36048,
											"end": 36055,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 36048,
											"end": 36055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 35913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35906,
											"end": 35913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 35913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 35913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 35913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36147,
											"end": 36156,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 36147,
											"end": 36163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36143,
											"end": 36163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36292,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36293,
											"end": 36302,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 36303,
											"end": 36304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 36293,
											"end": 36305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36293,
											"end": 36305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36306,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 36275,
											"end": 36306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36282,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36275,
											"end": 36306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36306,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 36275,
											"end": 36306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36265,
											"end": 36306,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36265,
											"end": 36306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36424,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36425,
											"end": 36434,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 36435,
											"end": 36436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 36425,
											"end": 36437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36425,
											"end": 36437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36407,
											"end": 36438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 36407,
											"end": 36438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36407,
											"end": 36414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36407,
											"end": 36438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36407,
											"end": 36438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36407,
											"end": 36438,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 36407,
											"end": 36438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36397,
											"end": 36438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36165,
											"end": 36168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36165,
											"end": 36168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 36123,
											"end": 36450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36470,
											"end": 36477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36470,
											"end": 36477,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36479,
											"end": 36486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36479,
											"end": 36486,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35856,
											"end": 36495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35856,
											"end": 36495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 32594,
											"end": 32819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20205,
											"end": 20215,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32687,
											"end": 32691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32747,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32687,
											"end": 32691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32687,
											"end": 32691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32704,
											"end": 32789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32704,
											"end": 32789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32727,
											"end": 32734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32727,
											"end": 32734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 32736,
											"end": 32788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32773,
											"end": 32788,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32773,
											"end": 32788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32736,
											"end": 32788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32736,
											"end": 32788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31098,
											"end": 31285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31196,
											"end": 31200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31213,
											"end": 31255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20205,
											"end": 20215,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31248,
											"end": 31254,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31213,
											"end": 31222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 31213,
											"end": 31255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 22914,
											"end": 23115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 21901,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 21901,
											"end": 21914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 21901,
											"end": 21914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23003,
											"end": 23025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23003,
											"end": 23025,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 22995,
											"end": 23068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22995,
											"end": 23068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22995,
											"end": 23068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8198,
											"end": 8200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22995,
											"end": 23068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22995,
											"end": 23068,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8239,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8276,
											"end": 8310,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8249,
											"end": 8311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8320,
											"end": 8356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8373,
											"end": 8392,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8373,
											"end": 8392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22995,
											"end": 23068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7996,
											"end": 8398,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22995,
											"end": 23068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 22995,
											"end": 23068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23079,
											"end": 23107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 23098,
											"end": 23106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23079,
											"end": 23097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 23079,
											"end": 23107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36579,
											"end": 37085,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 36579,
											"end": 37085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36770,
											"end": 36789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8587,
											"end": 8608,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8617,
											"end": 8647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8717,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8797,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8778,
											"end": 8797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8403,
											"end": 8803,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 36762,
											"end": 36830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36849,
											"end": 36870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36849,
											"end": 36870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9010,
											"end": 9012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9049,
											"end": 9051,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9029,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9029,
											"end": 9047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9088,
											"end": 9122,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9181,
											"end": 9200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8808,
											"end": 9206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 36841,
											"end": 36909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37004,
											"name": "PUSH",
											"source": 0,
											"value": "6B"
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37020,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37029,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37045,
											"end": 37077,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 36579,
											"end": 37085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36579,
											"end": 37085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36579,
											"end": 37085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36579,
											"end": 37085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37208,
											"end": 39713,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 37208,
											"end": 39713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37367,
											"end": 37372,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37367,
											"end": 37372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37367,
											"end": 37372,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37367,
											"end": 37372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37367,
											"end": 37372,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37367,
											"end": 37372,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37367,
											"end": 37372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37367,
											"end": 37381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37359,
											"end": 37382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37359,
											"end": 37382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37359,
											"end": 37382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37359,
											"end": 37382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37359,
											"end": 37382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37359,
											"end": 37382,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37359,
											"end": 37382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37398,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37393,
											"end": 37405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37405,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37393,
											"end": 37405,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37405,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37476,
											"end": 37494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37476,
											"end": 37494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9452,
											"end": 9454,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9425,
											"end": 9455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9491,
											"end": 9525,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 9606,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9587,
											"end": 9606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9211,
											"end": 9612,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 37468,
											"end": 37536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37555,
											"end": 37571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37555,
											"end": 37571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9801,
											"end": 9822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9838,
											"end": 9856,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9838,
											"end": 9856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 9856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9870,
											"end": 9932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9941,
											"end": 9974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10010,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9991,
											"end": 10010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9617,
											"end": 10016,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 37547,
											"end": 37611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37639,
											"end": 37640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37630,
											"end": 37636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37640,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10223,
											"end": 10225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10264,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10301,
											"end": 10335,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10274,
											"end": 10336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10352,
											"end": 10370,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10352,
											"end": 10370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10352,
											"end": 10370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10401,
											"end": 10420,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10401,
											"end": 10420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10021,
											"end": 10426,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 37622,
											"end": 37686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 37940,
											"end": 37944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 37931,
											"end": 37945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37945,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 37931,
											"end": 37945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37949,
											"end": 37953,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37931,
											"end": 37953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 37931,
											"end": 37998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37992,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37972,
											"end": 37998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37971,
											"end": 37998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 37998,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 37931,
											"end": 37998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 38033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 38033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 38033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 37931,
											"end": 38033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38027,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38016,
											"end": 38033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38015,
											"end": 38033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37931,
											"end": 38033,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 37931,
											"end": 38033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37913,
											"end": 38141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37913,
											"end": 38141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 37913,
											"end": 38141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38068,
											"end": 38090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 38085,
											"end": 38089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38068,
											"end": 38084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 38068,
											"end": 38090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38068,
											"end": 38090,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 38068,
											"end": 38090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38109,
											"end": 38129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 38124,
											"end": 38128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38109,
											"end": 38123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 38109,
											"end": 38129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38109,
											"end": 38129,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 38109,
											"end": 38129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 38180,
											"end": 38182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 38171,
											"end": 38183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38183,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 38171,
											"end": 38183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38187,
											"end": 38191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38171,
											"end": 38191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 38171,
											"end": 38234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38230,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38210,
											"end": 38234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38209,
											"end": 38234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38234,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 38171,
											"end": 38234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 38171,
											"end": 38267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38263,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38252,
											"end": 38267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38251,
											"end": 38267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38171,
											"end": 38267,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 38171,
											"end": 38267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38153,
											"end": 38371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38153,
											"end": 38371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 38153,
											"end": 38371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38302,
											"end": 38322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 38319,
											"end": 38321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38302,
											"end": 38318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 38302,
											"end": 38322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38302,
											"end": 38322,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 38302,
											"end": 38322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38341,
											"end": 38359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 38356,
											"end": 38358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38341,
											"end": 38355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 38341,
											"end": 38359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38341,
											"end": 38359,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 38341,
											"end": 38359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38466,
											"end": 38481,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38466,
											"end": 38481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38466,
											"end": 38481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38466,
											"end": 38481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38466,
											"end": 38481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38466,
											"end": 38481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38466,
											"end": 38481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38466,
											"end": 38498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 38466,
											"end": 38498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38485,
											"end": 38498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38485,
											"end": 38498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38485,
											"end": 38498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38485,
											"end": 38498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38485,
											"end": 38498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38466,
											"end": 38498,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 38466,
											"end": 38498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 38462,
											"end": 38925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38709,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38689,
											"end": 38715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38688,
											"end": 38715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38688,
											"end": 38744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38688,
											"end": 38744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38688,
											"end": 38744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 38688,
											"end": 38744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38740,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38720,
											"end": 38744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38719,
											"end": 38744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38688,
											"end": 38744,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 38688,
											"end": 38744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38684,
											"end": 38914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38684,
											"end": 38914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 38684,
											"end": 38914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38842,
											"end": 38853,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38842,
											"end": 38853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38832,
											"end": 38838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38832,
											"end": 38853,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38832,
											"end": 38853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 38824,
											"end": 38898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 38824,
											"end": 38898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39000,
											"end": 39015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 39000,
											"end": 39032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39019,
											"end": 39032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39019,
											"end": 39032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39019,
											"end": 39032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39019,
											"end": 39032,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39019,
											"end": 39032,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39032,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 39000,
											"end": 39032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38996,
											"end": 39448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38996,
											"end": 39448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 38996,
											"end": 39448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39232,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39212,
											"end": 39238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39211,
											"end": 39238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39211,
											"end": 39267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39211,
											"end": 39267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39211,
											"end": 39267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 39211,
											"end": 39267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39243,
											"end": 39267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39211,
											"end": 39267,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 39211,
											"end": 39267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39207,
											"end": 39437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39207,
											"end": 39437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 39207,
											"end": 39437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39365,
											"end": 39376,
											"name": "PUSH",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 39365,
											"end": 39376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39355,
											"end": 39361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39355,
											"end": 39376,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39355,
											"end": 39376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 39347,
											"end": 39421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 39347,
											"end": 39421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39647,
											"end": 39679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 39662,
											"end": 39666,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39668,
											"end": 39670,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39672,
											"end": 39678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39647,
											"end": 39661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 39647,
											"end": 39679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39647,
											"end": 39679,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 39647,
											"end": 39679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39692,
											"end": 39697,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 39692,
											"end": 39705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39692,
											"end": 39705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 39692,
											"end": 39705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39692,
											"end": 39705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39692,
											"end": 39705,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37208,
											"end": 39713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22180,
											"end": 22312,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 22180,
											"end": 22312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20205,
											"end": 20215,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22244,
											"end": 22267,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11024,
											"end": 11045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11061,
											"end": 11079,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11061,
											"end": 11079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11061,
											"end": 11079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11154,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11093,
											"end": 11155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22236,
											"end": 22304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10840,
											"end": 11196,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23275,
											"end": 23466,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 23275,
											"end": 23466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23368,
											"end": 23374,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23368,
											"end": 23374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23368,
											"end": 23374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23418,
											"end": 23458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23418,
											"end": 23458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23368,
											"end": 23374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23368,
											"end": 23374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23368,
											"end": 23374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23385,
											"end": 23402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23368,
											"end": 23374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23368,
											"end": 23374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23418,
											"end": 23458,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 23418,
											"end": 23458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23349,
											"end": 23365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23349,
											"end": 23365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23418,
											"end": 23458,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23338,
											"end": 23466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23275,
											"end": 23466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23275,
											"end": 23466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21558,
											"end": 21655,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 21558,
											"end": 21655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 18100,
											"end": 18169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 21621,
											"end": 21645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 21621,
											"end": 21647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33273,
											"end": 33490,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33273,
											"end": 33490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C45A0155"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33332,
											"end": 33336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33332,
											"end": 33336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33332,
											"end": 33336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33332,
											"end": 33336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33332,
											"end": 33336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33332,
											"end": 33336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 33385,
											"end": 33438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33349,
											"end": 33438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33456,
											"end": 33463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33456,
											"end": 33482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33456,
											"end": 33482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33456,
											"end": 33482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33456,
											"end": 33482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33467,
											"end": 33478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33467,
											"end": 33482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33467,
											"end": 33482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33467,
											"end": 33482,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33449,
											"end": 33482,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33273,
											"end": 33490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33674,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 33674,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33765,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 33745,
											"end": 33774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33744,
											"end": 33774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12107,
											"end": 12109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12146,
											"end": 12148,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12119,
											"end": 12149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12214,
											"name": "PUSH",
											"source": 1,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12158,
											"end": 12215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11905,
											"end": 12256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 33736,
											"end": 33806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "6D"
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33817,
											"end": 33853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33849,
											"end": 33853,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33817,
											"end": 33853,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33817,
											"end": 33853,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33674,
											"end": 33861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34114,
											"end": 34698,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34114,
											"end": 34698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34194,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 34183,
											"end": 34203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34182,
											"end": 34203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12107,
											"end": 12109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12146,
											"end": 12148,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12119,
											"end": 12149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12214,
											"name": "PUSH",
											"source": 1,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12158,
											"end": 12215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11905,
											"end": 12256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 34174,
											"end": 34235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34319,
											"end": 34320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34307,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34296,
											"end": 34510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 34296,
											"end": 34510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34479,
											"end": 34498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 34490,
											"end": 34497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34479,
											"end": 34489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 34479,
											"end": 34498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34479,
											"end": 34498,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 34479,
											"end": 34498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34467,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34460,
											"end": 34498,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34296,
											"end": 34510,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 34296,
											"end": 34510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34575,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34587,
											"end": 34591,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34591,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "PUSH",
											"source": 0,
											"value": "A2153420D844928B4421650203C77BABC8B33D7F2E7B450E2966DB0C22097753"
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34690,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34114,
											"end": 34698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39793,
											"end": 40748,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 39793,
											"end": 40748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39955,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39944,
											"end": 39963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 39944,
											"end": 39990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39979,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39968,
											"end": 39990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39967,
											"end": 39990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39944,
											"end": 39990,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 39944,
											"end": 39990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39940,
											"end": 40741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39940,
											"end": 40741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 39940,
											"end": 40741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40008,
											"end": 40056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 40030,
											"end": 40036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40038,
											"end": 40047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40049,
											"end": 40055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40008,
											"end": 40029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 40008,
											"end": 40056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40008,
											"end": 40056,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 40008,
											"end": 40056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39793,
											"end": 40748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39793,
											"end": 40748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39793,
											"end": 40748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39793,
											"end": 40748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39940,
											"end": 40741,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 39940,
											"end": 40741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40225,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40214,
											"end": 40233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40213,
											"end": 40233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40213,
											"end": 40259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40213,
											"end": 40259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40213,
											"end": 40259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 40213,
											"end": 40259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40248,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40237,
											"end": 40259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40213,
											"end": 40259,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 40213,
											"end": 40259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 40209,
											"end": 40741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 40296,
											"end": 40302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40304,
											"end": 40313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 40276,
											"end": 40322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40741,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 40209,
											"end": 40741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40497,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40486,
											"end": 40505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 40486,
											"end": 40531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40520,
											"name": "PUSH",
											"source": 0,
											"value": "6C"
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40509,
											"end": 40531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40486,
											"end": 40531,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 40486,
											"end": 40531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40482,
											"end": 40741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40482,
											"end": 40741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 40482,
											"end": 40741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40549,
											"end": 40597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 40571,
											"end": 40577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40579,
											"end": 40588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40549,
											"end": 40570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 40549,
											"end": 40597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40482,
											"end": 40741,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 40482,
											"end": 40741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40685,
											"end": 40729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 40703,
											"end": 40709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40711,
											"end": 40720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40722,
											"end": 40728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40685,
											"end": 40702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 40685,
											"end": 40729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 21776,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 21663,
											"end": 21776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 18100,
											"end": 18169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 18100,
											"end": 18169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21736,
											"end": 21768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20205,
											"end": 20215,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21736,
											"end": 21754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 21736,
											"end": 21768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 44968,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 43171,
											"end": 44968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43273,
											"end": 43297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 43273,
											"end": 43297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 43273,
											"end": 43297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43273,
											"end": 43297,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 43273,
											"end": 43297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43375,
											"end": 43384,
											"name": "PUSH",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 43375,
											"end": 43384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43375,
											"end": 43384,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43375,
											"end": 43384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43375,
											"end": 43392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43375,
											"end": 43392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43375,
											"end": 43384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43375,
											"end": 43392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43372,
											"end": 43529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 43372,
											"end": 43529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43439,
											"end": 43443,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 43429,
											"end": 43436,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 43429,
											"end": 43436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43429,
											"end": 43443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 43429,
											"end": 43443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43429,
											"end": 43443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43429,
											"end": 43443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 43429,
											"end": 43443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43429,
											"end": 43443,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 43429,
											"end": 43443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43417,
											"end": 43424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43417,
											"end": 43444,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43417,
											"end": 43444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12502,
											"end": 12504,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12482,
											"end": 12500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12541,
											"end": 12575,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F74207075726368617365206D6F7265207468616E2031306D202830"
										},
										{
											"begin": 12521,
											"end": 12539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 12539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 12539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12514,
											"end": 12576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12612,
											"end": 12646,
											"name": "PUSH",
											"source": 1,
											"value": "2E312529206F6620737570706C7920696E2073696E676C65207472616E736163"
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12592,
											"end": 12610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12585,
											"end": 12647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12663,
											"end": 12682,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12663,
											"end": 12682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12663,
											"end": 12682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12727,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 12708,
											"end": 12727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12261,
											"end": 12733,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 43409,
											"end": 43517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43587,
											"end": 43613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43587,
											"end": 43613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43587,
											"end": 43613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43653,
											"end": 43663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 43653,
											"end": 43661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 43653,
											"end": 43663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43653,
											"end": 43663,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 43653,
											"end": 43663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43643,
											"end": 43663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 43643,
											"end": 43663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43643,
											"end": 43650,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43643,
											"end": 43663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 43643,
											"end": 43663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43643,
											"end": 43663,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 43643,
											"end": 43663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43624,
											"end": 43640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43624,
											"end": 43640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43624,
											"end": 43640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43624,
											"end": 43663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43753,
											"end": 43754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43731,
											"end": 43750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43731,
											"end": 43750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43731,
											"end": 43750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43731,
											"end": 43754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43731,
											"end": 43754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43731,
											"end": 43754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43876,
											"end": 43881,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 43876,
											"end": 43881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43843,
											"end": 43872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 43843,
											"end": 43872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43843,
											"end": 43850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43843,
											"end": 43872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 43843,
											"end": 43872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43843,
											"end": 43872,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 43843,
											"end": 43872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43842,
											"end": 43881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 43842,
											"end": 43881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43842,
											"end": 43881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43842,
											"end": 43881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 43842,
											"end": 43881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43842,
											"end": 43881,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 43842,
											"end": 43881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43822,
											"end": 43839,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43822,
											"end": 43839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43822,
											"end": 43839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43822,
											"end": 43881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43932,
											"end": 43942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 43932,
											"end": 43940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 43932,
											"end": 43942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43932,
											"end": 43942,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 43932,
											"end": 43942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43912,
											"end": 43916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43912,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43912,
											"end": 43929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43912,
											"end": 43929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43912,
											"end": 43942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 43912,
											"end": 43942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43912,
											"end": 43942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43912,
											"end": 43942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 43912,
											"end": 43942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43912,
											"end": 43942,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 43912,
											"end": 43942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43892,
											"end": 43909,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 43892,
											"end": 43909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43892,
											"end": 43909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43892,
											"end": 43942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43892,
											"end": 43942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43892,
											"end": 43942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44042,
											"end": 44063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44024,
											"end": 44132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 44024,
											"end": 44132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44103,
											"end": 44120,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 44103,
											"end": 44120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44103,
											"end": 44120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44103,
											"end": 44120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44080,
											"end": 44100,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44080,
											"end": 44100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44080,
											"end": 44100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44080,
											"end": 44120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44024,
											"end": 44132,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 44024,
											"end": 44132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44285,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44313,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 44278,
											"end": 44313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44278,
											"end": 44313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44331,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44343,
											"end": 44359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 44324,
											"end": 44359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44324,
											"end": 44359,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44527,
											"end": 44544,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 44527,
											"end": 44544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44527,
											"end": 44544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44527,
											"end": 44544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44508,
											"end": 44524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44508,
											"end": 44524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44508,
											"end": 44524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44508,
											"end": 44524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44508,
											"end": 44544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 44508,
											"end": 44544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44527,
											"end": 44544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44508,
											"end": 44544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 44508,
											"end": 44544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44508,
											"end": 44544,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 44508,
											"end": 44544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44492,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 44485,
											"end": 44545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44545,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44651,
											"end": 44671,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44651,
											"end": 44671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44647,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44640,
											"end": 44647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44671,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 44640,
											"end": 44671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44640,
											"end": 44671,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44796,
											"end": 44813,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44796,
											"end": 44813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44777,
											"end": 44793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44777,
											"end": 44793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44777,
											"end": 44813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 44777,
											"end": 44813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44777,
											"end": 44813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 44777,
											"end": 44813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44777,
											"end": 44813,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 44777,
											"end": 44813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44815,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 44876,
											"end": 44892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44876,
											"end": 44892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44927,
											"end": 44944,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44927,
											"end": 44944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44927,
											"end": 44944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44927,
											"end": 44944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "PUSH",
											"source": 0,
											"value": "E6EF78C5A1F105FC4B9500EEB7CD09B041367BDEE35F1D85761735EE78B3FF2E"
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44876,
											"end": 44892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44908,
											"end": 44944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 44908,
											"end": 44944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44876,
											"end": 44892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44908,
											"end": 44944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 44908,
											"end": 44944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44908,
											"end": 44944,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 44908,
											"end": 44944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 44960,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 43262,
											"end": 44968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 44968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 44968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 44968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43171,
											"end": 44968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41269,
											"end": 43029,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 41269,
											"end": 43029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41369,
											"end": 41393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 41369,
											"end": 41393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 41369,
											"end": 41393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41369,
											"end": 41393,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 41369,
											"end": 41393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41567,
											"end": 41569,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 41546,
											"end": 41564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 41557,
											"end": 41563,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41546,
											"end": 41556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41546,
											"end": 41564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41546,
											"end": 41564,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 41546,
											"end": 41564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41546,
											"end": 41569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 41546,
											"end": 41569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41546,
											"end": 41569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41546,
											"end": 41569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 41546,
											"end": 41569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41546,
											"end": 41569,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 41546,
											"end": 41569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41535,
											"end": 41542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41535,
											"end": 41569,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41535,
											"end": 41569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13115,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13152,
											"end": 13154,
											"name": "PUSH",
											"source": 1,
											"value": "3A"
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13125,
											"end": 13155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F742073656C6C206D6F7265207468616E20313025206F662062616C"
										},
										{
											"begin": 13171,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13171,
											"end": 13189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13171,
											"end": 13189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13164,
											"end": 13226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13262,
											"end": 13290,
											"name": "PUSH",
											"source": 1,
											"value": "616E636520696E2073696E676C65207472616E73616374696F6E000000000000"
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13235,
											"end": 13291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13308,
											"end": 13327,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13308,
											"end": 13327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12911,
											"end": 13333,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 41527,
											"end": 41632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41693,
											"end": 41719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41693,
											"end": 41719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41693,
											"end": 41719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41759,
											"end": 41769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 41759,
											"end": 41767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 41759,
											"end": 41769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41759,
											"end": 41769,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 41759,
											"end": 41769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41749,
											"end": 41769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 41749,
											"end": 41769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41749,
											"end": 41756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41749,
											"end": 41769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 41749,
											"end": 41769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41749,
											"end": 41769,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 41749,
											"end": 41769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41730,
											"end": 41746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41730,
											"end": 41746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41730,
											"end": 41746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41730,
											"end": 41769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41805,
											"end": 41806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41782,
											"end": 41802,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41782,
											"end": 41802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41930,
											"end": 41935,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 41930,
											"end": 41935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41896,
											"end": 41926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 41896,
											"end": 41926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41896,
											"end": 41903,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41896,
											"end": 41926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 41896,
											"end": 41926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41896,
											"end": 41926,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 41896,
											"end": 41926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 41895,
											"end": 41935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 41895,
											"end": 41935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41935,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 41895,
											"end": 41935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41874,
											"end": 41892,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 41874,
											"end": 41892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41874,
											"end": 41892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41874,
											"end": 41935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41988,
											"end": 41998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 41988,
											"end": 41996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 41988,
											"end": 41998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41988,
											"end": 41998,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 41988,
											"end": 41998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41967,
											"end": 41971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41967,
											"end": 41985,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 41967,
											"end": 41985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41967,
											"end": 41985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41967,
											"end": 41998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 41967,
											"end": 41998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41967,
											"end": 41998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41967,
											"end": 41998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 41967,
											"end": 41998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41967,
											"end": 41998,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 41967,
											"end": 41998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41946,
											"end": 41964,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 41946,
											"end": 41964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41946,
											"end": 41964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41946,
											"end": 41998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41946,
											"end": 41998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41946,
											"end": 41998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 42106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42080,
											"end": 42177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 42080,
											"end": 42177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42165,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 42147,
											"end": 42165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42124,
											"end": 42144,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42124,
											"end": 42144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42124,
											"end": 42144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42124,
											"end": 42165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42080,
											"end": 42177,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 42080,
											"end": 42177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42328,
											"end": 42332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42328,
											"end": 42344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42328,
											"end": 42344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42328,
											"end": 42344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42316,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42317,
											"end": 42323,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 42309,
											"end": 42344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42344,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42523,
											"end": 42541,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 42523,
											"end": 42541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42523,
											"end": 42541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42523,
											"end": 42541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 42504,
											"end": 42541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42523,
											"end": 42541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 42504,
											"end": 42541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42541,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 42504,
											"end": 42541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42488,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42481,
											"end": 42542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42542,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42595,
											"end": 42613,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 42595,
											"end": 42613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42595,
											"end": 42613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42595,
											"end": 42613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42576,
											"end": 42592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42576,
											"end": 42592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42576,
											"end": 42592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42576,
											"end": 42592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42576,
											"end": 42613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 42576,
											"end": 42613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42595,
											"end": 42613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42576,
											"end": 42613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 42576,
											"end": 42613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42576,
											"end": 42613,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 42576,
											"end": 42613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42560,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42553,
											"end": 42614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42720,
											"end": 42740,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42720,
											"end": 42740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42720,
											"end": 42740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42720,
											"end": 42740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42716,
											"name": "PUSH",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42709,
											"end": 42716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42720,
											"end": 42740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42720,
											"end": 42740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 42709,
											"end": 42740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42709,
											"end": 42740,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42865,
											"end": 42883,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 42865,
											"end": 42883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42846,
											"end": 42862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42846,
											"end": 42862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42846,
											"end": 42883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 42846,
											"end": 42883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42846,
											"end": 42883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 42846,
											"end": 42883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42846,
											"end": 42883,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 42846,
											"end": 42883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42817,
											"end": 42885,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 42936,
											"end": 42952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42936,
											"end": 42952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42987,
											"end": 43005,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 42987,
											"end": 43005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42987,
											"end": 43005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42987,
											"end": 43005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42903,
											"end": 43021,
											"name": "PUSH",
											"source": 0,
											"value": "FF000E16C1C0D33B07404C2B2ABB9832356B5CFD57566D73C9D09611F030890D"
										},
										{
											"begin": 42903,
											"end": 43021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42936,
											"end": 42952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42968,
											"end": 43005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 42968,
											"end": 43005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42936,
											"end": 42952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42968,
											"end": 43005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 42968,
											"end": 43005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45141,
											"end": 46077,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 45141,
											"end": 46077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45243,
											"end": 45267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 45243,
											"end": 45267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 45243,
											"end": 45267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45243,
											"end": 45267,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 45243,
											"end": 45267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45381,
											"end": 45407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45381,
											"end": 45407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45381,
											"end": 45407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45447,
											"end": 45457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 45447,
											"end": 45455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 45447,
											"end": 45457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45447,
											"end": 45457,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 45447,
											"end": 45457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45437,
											"end": 45457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 45437,
											"end": 45457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45437,
											"end": 45444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45437,
											"end": 45457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 45437,
											"end": 45457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45437,
											"end": 45457,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 45437,
											"end": 45457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45418,
											"end": 45434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45418,
											"end": 45434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45418,
											"end": 45434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45418,
											"end": 45434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45418,
											"end": 45457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45418,
											"end": 45457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45418,
											"end": 45457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45418,
											"end": 45457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45574,
											"end": 45590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45574,
											"end": 45590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45574,
											"end": 45590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45562,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45574,
											"end": 45590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45574,
											"end": 45590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45574,
											"end": 45590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45574,
											"end": 45590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 45555,
											"end": 45590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45590,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45608,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45620,
											"end": 45636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 45601,
											"end": 45636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45601,
											"end": 45636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45740,
											"end": 45756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45725,
											"name": "PUSH",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45756,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 45718,
											"end": 45756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45756,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45774,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45789,
											"end": 45805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 45767,
											"end": 45805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45805,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45910,
											"end": 45926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45910,
											"end": 45926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45882,
											"end": 45927,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 45996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 45996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45945,
											"end": 46069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45945,
											"end": 46069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45945,
											"end": 46069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 45945,
											"end": 46069,
											"name": "PUSH",
											"source": 0,
											"value": "2541109A23D530C06D62A3BF63D8D03107194870126FDDB7170C0DAEF360CD8A"
										},
										{
											"begin": 45945,
											"end": 46069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45945,
											"end": 46069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 2587,
											"end": 2835,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46218,
											"end": 47145,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 46218,
											"end": 47145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46316,
											"end": 46340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 46316,
											"end": 46340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 46316,
											"end": 46340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46316,
											"end": 46340,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 46316,
											"end": 46340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46486,
											"end": 46505,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 46465,
											"end": 46483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 46476,
											"end": 46482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 46475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 46465,
											"end": 46483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 46483,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 46465,
											"end": 46483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 46505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 46465,
											"end": 46505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 46505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 46505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 46465,
											"end": 46505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 46505,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 46465,
											"end": 46505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13540,
											"end": 13542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13579,
											"end": 13581,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13552,
											"end": 13582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13618,
											"end": 13649,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520676F747461206B6565702031204D45544820616C7761797321000000"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13591,
											"end": 13650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13667,
											"end": 13685,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13667,
											"end": 13685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 13338,
											"end": 13691,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 46446,
											"end": 46539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46598,
											"end": 46624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46598,
											"end": 46624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46598,
											"end": 46624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46664,
											"end": 46674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 46664,
											"end": 46672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 46664,
											"end": 46674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46664,
											"end": 46674,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 46664,
											"end": 46674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46654,
											"end": 46674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 46654,
											"end": 46674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46654,
											"end": 46661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46654,
											"end": 46674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 46654,
											"end": 46674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46654,
											"end": 46674,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 46654,
											"end": 46674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46635,
											"end": 46651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46635,
											"end": 46651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46635,
											"end": 46651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46635,
											"end": 46651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46635,
											"end": 46674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46635,
											"end": 46674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46635,
											"end": 46674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46798,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46635,
											"end": 46674,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46635,
											"end": 46674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 46791,
											"end": 46826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46791,
											"end": 46826,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46930,
											"name": "PUSH",
											"source": 0,
											"value": "6A"
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 46923,
											"end": 46961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46923,
											"end": 46961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47008,
											"end": 47024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47008,
											"end": 47024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47026,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 47075,
											"end": 47091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47075,
											"end": 47091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47044,
											"end": 47137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47044,
											"end": 47137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47044,
											"end": 47137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 47044,
											"end": 47137,
											"name": "PUSH",
											"source": 0,
											"value": "D9923E08D9D88FF7A7E9B8460F3163DC6B887FABE315449DA3B5CD16BB5E9340"
										},
										{
											"begin": 47044,
											"end": 47137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47044,
											"end": 47137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 2587,
											"end": 2835,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "370"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 269,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 269,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 400,
											"end": 421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 444,
											"end": 457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 473,
											"end": 491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 544,
											"end": 559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 509,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 588,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 509,
											"end": 588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 624,
											"end": 653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 609,
											"end": 654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 659,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 269,
											"end": 665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 670,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 670,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 738,
											"end": 758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 738,
											"end": 758,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 787,
											"end": 818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 777,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 767,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 767,
											"end": 837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 848,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 916,
											"end": 922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 974,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 956,
											"end": 963,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 952,
											"end": 975,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 948,
											"end": 980,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 945,
											"end": 997,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 945,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 945,
											"end": 997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 993,
											"end": 994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 983,
											"end": 995,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 945,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 945,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 1016,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1045,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 848,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 1666,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1695,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 1714,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1797,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1803,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2003,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2113,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2118,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2133,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 2083,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2582,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2396,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2510,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2511,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 2476,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 2547,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2576,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2582,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2396,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 3113,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2840,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3063,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3064,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3065,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 3023,
											"end": 3083,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3233,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3250,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 3215,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 3305,
											"end": 3314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3286,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3315,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 3286,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3334,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 3334,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3458,
											"end": 3470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3470,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3584,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3636,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3637,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3689,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3674,
											"end": 3677,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3670,
											"end": 3690,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3718,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3704,
											"end": 3719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3746,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3895,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3768,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3839,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3824,
											"end": 3827,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3820,
											"end": 3840,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3864,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 4028,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3900,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4022,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3985,
											"end": 4022,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 4002,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4158,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4033,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4152,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4116,
											"end": 4152,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 4132,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4701,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4574,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4645,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4630,
											"end": 4633,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4626,
											"end": 4646,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4670,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4656,
											"end": 4671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4687,
											"end": 4688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4826,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4706,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 4762,
											"end": 4797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4777,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4811,
											"end": 4820,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5373,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 5246,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5302,
											"end": 5305,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5298,
											"end": 5318,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5359,
											"end": 5360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5608,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5601,
											"end": 5604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5609,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 6016,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5595,
											"end": 6016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5744,
											"end": 5754,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5733,
											"end": 5760,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 5774,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5872,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5865,
											"end": 5868,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5854,
											"end": 5874,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 5941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5933,
											"end": 5946,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6002,
											"end": 6003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5988,
											"end": 6004,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5958,
											"end": 5971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5929,
											"end": 5932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5929,
											"end": 5932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 6022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 6022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 7543,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6198,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6351,
											"end": 6369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6343,
											"end": 6349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6370,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 6337,
											"end": 6393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 6373,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 6492,
											"end": 6498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6484,
											"end": 6488,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6489,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6452,
											"end": 6490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6490,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6452,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6450,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 6402,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6499,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 6402,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6554,
											"end": 6558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6613,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6629,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7399,
											"end": 7418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 7344,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6155,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6171,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6172,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6175,
											"end": 6186,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6175,
											"end": 6186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6175,
											"end": 6186,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6187,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7527,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7527,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 6623,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5488,
											"end": 5492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6788,
											"end": 6789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6799,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6899,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6899,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6859,
											"end": 6901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6859,
											"end": 6901,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6941,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6928,
											"end": 6942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 6777,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7047,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7121,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 7177,
											"end": 7201,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7173,
											"end": 7210,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7211,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7154,
											"end": 7212,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7213,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7264,
											"end": 7270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7261,
											"end": 7262,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7257,
											"end": 7271,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7251,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 7537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 7543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 7543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7660,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7548,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7606,
											"end": 7607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7596,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 7596,
											"end": 7631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 7611,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7991,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7864,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7935,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7920,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7916,
											"end": 7936,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7984,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7985,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10431,
											"end": 10835,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 10431,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10674,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10711,
											"end": 10745,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657220616D6F756E74206578636565647320746865206D617854"
										},
										{
											"begin": 10706,
											"end": 10708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10684,
											"end": 10746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3C20B6B7BAB73A17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10777,
											"end": 10779,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10755,
											"end": 10793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10828,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10810,
											"end": 10829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10431,
											"end": 10835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11201,
											"end": 11608,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 11201,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11403,
											"end": 11405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11385,
											"end": 11406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11442,
											"end": 11444,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11415,
											"end": 11445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11481,
											"end": 11515,
											"name": "PUSH",
											"source": 1,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 11476,
											"end": 11478,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11454,
											"end": 11516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11547,
											"end": 11549,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11601,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11583,
											"end": 11602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11583,
											"end": 11602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11201,
											"end": 11608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11613,
											"end": 11900,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11613,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11780,
											"end": 11786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11774,
											"end": 11787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 11855,
											"end": 11861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11835,
											"end": 11841,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 11796,
											"end": 11862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 11862,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 11796,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11894,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11613,
											"end": 11900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11613,
											"end": 11900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12738,
											"end": 12906,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 12738,
											"end": 12906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12811,
											"end": 12820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12811,
											"end": 12820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12811,
											"end": 12820,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12851,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12859,
											"end": 12874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12859,
											"end": 12874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12859,
											"end": 12874,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 12875,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 12875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12876,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 12829,
											"end": 12900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 12880,
											"end": 12898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							},
							"sourceList": [
								"METH.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_excluded(uint256)": "4d09deb3",
							"_getCurrentSupply()": "97a9d560",
							"_getRate()": "94e10784",
							"_rTotal()": "45e0b9d4",
							"_tTotal()": "af465a27",
							"allowance(address,address)": "dd62ed3e",
							"antiWhale()": "4dacf3f5",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"isExcluded(address)": "cba0e996",
							"isExcludedFromMaxTx(address)": "658c27a9",
							"maxTxAmount()": "8c0b5e22",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"rBalanceOf(address)": "5319e78f",
							"renounceOwnership()": "715018a6",
							"setAntiWhaleStatus(bool)": "83f24c09",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"viewTBalanceRBalance(address)": "80da2287"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TransferBothExcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TransferFromExcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TransferStandard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"TransferToExcluded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_excluded\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getCurrentSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiWhale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromMaxTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"rBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setAntiWhaleStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"viewTBalanceRBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"METH Token developer team (info@crystalmeth.xyz)\",\"details\":\"Inherits multiple OpenZeppelin standards \",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"An ERC20 contract named METH\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_excluded(uint256)\":{\"notice\":\"array of address which are excluded from rewards\"},\"_getCurrentSupply()\":{\"notice\":\"used by the _getRate function to return two values: rSupply and tSupply\"},\"_getRate()\":{\"notice\":\"function used by the getValues function\"},\"_rTotal()\":{\"notice\":\"/// rTotal is a calculated value - rTotal = MAX \\u2212 (MAX mod tTotal) /// (Note: value will go down after each buy/sell transaction)  \"},\"_tTotal()\":{\"notice\":\"the total fixed supply of METH tokens\"},\"allowance(address,address)\":{\"notice\":\"uses \\\"override\\\" and returns the value from the _allowances function\"},\"approve(address,uint256)\":{\"notice\":\"uses \\\"override\\\" and returns the custom _approve function\"},\"balanceOf(address)\":{\"notice\":\"uses \\\"override\\\" - returns tOwned amounts for excluded addresses and rOwned amounts for all others\"},\"decimals()\":{\"notice\":\"token decimals\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"uses \\\"override\\\" and calls the _approve function\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"uses \\\"override\\\" and calls the _approve function\"},\"isExcluded(address)\":{\"notice\":\"checks if address is excluded from reflection rewards\"},\"isExcludedFromMaxTx(address)\":{\"notice\":\"checks if address is excluded from Max Tx\"},\"maxTxAmount()\":{\"notice\":\"maximum transation amount\"},\"name()\":{\"notice\":\"token name\"},\"rBalanceOf(address)\":{\"notice\":\"Used by the standard ERC20 \\\"balanceOf()\\\" function /// returns the rAmount divided by the current rate value. \"},\"symbol()\":{\"notice\":\"token symbol\"},\"totalSupply()\":{\"notice\":\"uses \\\"override\\\" to return value from _tTotal (tSpace)\"},\"transfer(address,uint256)\":{\"notice\":\"uses \\\"override\\\" to call the _transfer function\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"uses \\\"override\\\" and calls the  _transfer and the _approve functions\"},\"viewTBalanceRBalance(address)\":{\"notice\":\"verify account balance in both tSpace and rSpace\"}},\"notice\":\"Serves as a dynamic reflection token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"METH.sol\":\"METH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"METH.sol\":{\"keccak256\":\"0x145fff2dc9a0871b0d8e064d78d75040046dbfca82c524eca89f4dc460ed6784\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4433108f12274129d535f2be8e67cf362904d901c12ba074763c350461834140\",\"dweb:/ipfs/QmXjUi2131MKvGYBmayqTNwuXcAXAuMpcF6zxEBcfzYkTu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 333,
								"contract": "METH.sol:METH",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 336,
								"contract": "METH.sol:METH",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 541,
								"contract": "METH.sol:METH",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 549,
								"contract": "METH.sol:METH",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 669,
								"contract": "METH.sol:METH",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 755,
								"contract": "METH.sol:METH",
								"label": "_name",
								"offset": 0,
								"slot": "101",
								"type": "t_string_storage"
							},
							{
								"astId": 757,
								"contract": "METH.sol:METH",
								"label": "_symbol",
								"offset": 0,
								"slot": "102",
								"type": "t_string_storage"
							},
							{
								"astId": 759,
								"contract": "METH.sol:METH",
								"label": "_decimals",
								"offset": 0,
								"slot": "103",
								"type": "t_uint8"
							},
							{
								"astId": 763,
								"contract": "METH.sol:METH",
								"label": "_excluded",
								"offset": 0,
								"slot": "104",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 768,
								"contract": "METH.sol:METH",
								"label": "_tOwned",
								"offset": 0,
								"slot": "105",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 773,
								"contract": "METH.sol:METH",
								"label": "_rOwned",
								"offset": 0,
								"slot": "106",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 780,
								"contract": "METH.sol:METH",
								"label": "_allowances",
								"offset": 0,
								"slot": "107",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 785,
								"contract": "METH.sol:METH",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "108",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 790,
								"contract": "METH.sol:METH",
								"label": "_isExcludedFromMaxTx",
								"offset": 0,
								"slot": "109",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 793,
								"contract": "METH.sol:METH",
								"label": "_MAX",
								"offset": 0,
								"slot": "110",
								"type": "t_uint256"
							},
							{
								"astId": 796,
								"contract": "METH.sol:METH",
								"label": "_tTotal",
								"offset": 0,
								"slot": "111",
								"type": "t_uint256"
							},
							{
								"astId": 799,
								"contract": "METH.sol:METH",
								"label": "_rTotal",
								"offset": 0,
								"slot": "112",
								"type": "t_uint256"
							},
							{
								"astId": 802,
								"contract": "METH.sol:METH",
								"label": "maxTxAmount",
								"offset": 0,
								"slot": "113",
								"type": "t_uint256"
							},
							{
								"astId": 804,
								"contract": "METH.sol:METH",
								"label": "antiWhale",
								"offset": 0,
								"slot": "114",
								"type": "t_bool"
							},
							{
								"astId": 1417,
								"contract": "METH.sol:METH",
								"label": "mutex",
								"offset": 1,
								"slot": "114",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"_excluded(uint256)": {
								"notice": "array of address which are excluded from rewards"
							},
							"_getCurrentSupply()": {
								"notice": "used by the _getRate function to return two values: rSupply and tSupply"
							},
							"_getRate()": {
								"notice": "function used by the getValues function"
							},
							"_rTotal()": {
								"notice": "/// rTotal is a calculated value - rTotal = MAX − (MAX mod tTotal) /// (Note: value will go down after each buy/sell transaction)  "
							},
							"_tTotal()": {
								"notice": "the total fixed supply of METH tokens"
							},
							"allowance(address,address)": {
								"notice": "uses \"override\" and returns the value from the _allowances function"
							},
							"approve(address,uint256)": {
								"notice": "uses \"override\" and returns the custom _approve function"
							},
							"balanceOf(address)": {
								"notice": "uses \"override\" - returns tOwned amounts for excluded addresses and rOwned amounts for all others"
							},
							"decimals()": {
								"notice": "token decimals"
							},
							"decreaseAllowance(address,uint256)": {
								"notice": "uses \"override\" and calls the _approve function"
							},
							"increaseAllowance(address,uint256)": {
								"notice": "uses \"override\" and calls the _approve function"
							},
							"isExcluded(address)": {
								"notice": "checks if address is excluded from reflection rewards"
							},
							"isExcludedFromMaxTx(address)": {
								"notice": "checks if address is excluded from Max Tx"
							},
							"maxTxAmount()": {
								"notice": "maximum transation amount"
							},
							"name()": {
								"notice": "token name"
							},
							"rBalanceOf(address)": {
								"notice": "Used by the standard ERC20 \"balanceOf()\" function /// returns the rAmount divided by the current rate value. "
							},
							"symbol()": {
								"notice": "token symbol"
							},
							"totalSupply()": {
								"notice": "uses \"override\" to return value from _tTotal (tSpace)"
							},
							"transfer(address,uint256)": {
								"notice": "uses \"override\" to call the _transfer function"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "uses \"override\" and calls the  _transfer and the _approve functions"
							},
							"viewTBalanceRBalance(address)": {
								"notice": "verify account balance in both tSpace and rSpace"
							}
						},
						"notice": "Serves as a dynamic reflection token",
						"version": 1
					}
				},
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"METH.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"METH.sol\":{\"keccak256\":\"0x145fff2dc9a0871b0d8e064d78d75040046dbfca82c524eca89f4dc460ed6784\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4433108f12274129d535f2be8e67cf362904d901c12ba074763c350461834140\",\"dweb:/ipfs/QmXjUi2131MKvGYBmayqTNwuXcAXAuMpcF6zxEBcfzYkTu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 333,
								"contract": "METH.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 336,
								"contract": "METH.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 541,
								"contract": "METH.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 549,
								"contract": "METH.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 669,
								"contract": "METH.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"METH.sol": {
				"ast": {
					"absolutePath": "METH.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							329
						],
						"ContextUpgradeable": [
							542
						],
						"IERC20Upgradeable": [
							746
						],
						"Initializable": [
							495
						],
						"METH": [
							2164
						],
						"OwnableUpgradeable": [
							670
						]
					},
					"id": 2165,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "3301:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "AddressUpgradeable",
							"nameLocation": "3380:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "4698:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "4927:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4935:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4927:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4940:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4927:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4949:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4927:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "4920:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "3406:1220:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "4641:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "4692:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4692:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:6:0"
									},
									"scope": 329,
									"src": "4632:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "5962:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5989:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$329",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$329",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5981:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5981:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5981:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5995:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5981:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "6006:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5981:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6014:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5973:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "5973:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6065:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "6060:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6060:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6108:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "6078:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6088:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6078:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "6100:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6078:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6078:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6059:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "6130:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6139:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6122:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "6122:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "4966:919:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "5900:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5926:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "5910:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5910:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5945:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "5937:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5909:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5962:0:0"
									},
									"scope": 329,
									"src": "5891:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "7059:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "7099:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "7107:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7116:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "7077:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7077:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 67,
												"nodeType": "Return",
												"src": "7070:79:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "6216:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "6979:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7000:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "6992:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7021:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "7008:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6991:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "7045:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7044:14:0"
									},
									"scope": 329,
									"src": "6970:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "7538:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "7578:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "7586:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7592:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "7595:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "7556:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7556:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "7549:59:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "7165:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "7396:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "7419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "7444:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7444:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7486:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "7472:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7472:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7408:97:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "7524:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7524:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7523:14:0"
									},
									"scope": 329,
									"src": "7387:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "8104:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "8144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "8152:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "8158:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8165:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "8122:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8122:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "8115:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "7624:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8000:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8030:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "8022:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8051:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "8038:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8038:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8065:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "8057:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8021:50:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "8090:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8090:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8089:14:0"
									},
									"scope": 329,
									"src": "7991:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "8657:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8684:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$329",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$329",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8676:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8676:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8676:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8690:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8676:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "8701:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8676:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8708:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8668:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "8668:81:0"
											},
											{
												"assignments": [
													135,
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8766:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "8761:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8761:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "8788:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "8775:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 136,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8775:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [
														{
															"id": 142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "8828:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 138,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "8802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8809:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8802:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "8821:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8802:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8802:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8760:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "8878:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "8886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 148,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "8895:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 149,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "8907:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 145,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "8851:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8851:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 151,
												"nodeType": "Return",
												"src": "8844:76:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "8225:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8482:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8522:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "8514:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8552:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "8539:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8539:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "8567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8605:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "8591:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8591:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8503:121:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "8643:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8643:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8642:14:0"
									},
									"scope": 329,
									"src": "8473:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "9213:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "9250:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "9258:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9264:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 163,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															199
														],
														"referencedDeclaration": 199,
														"src": "9231:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9231:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "9224:80:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "8936:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9122:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "9141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "9157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9140:35:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "9199:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9198:14:0"
									},
									"scope": 329,
									"src": "9113:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "9666:171:0",
										"statements": [
											{
												"assignments": [
													183,
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9683:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "9678:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9705:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "9692:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9692:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"arguments": [
														{
															"id": 188,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 186,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "9719:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9726:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "9719:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9719:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9677:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "9787:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "9795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 194,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "9804:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "9816:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "9760:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9760:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 181,
												"id": 197,
												"nodeType": "Return",
												"src": "9753:76:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "9320:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9513:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9550:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "9542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9580:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "9567:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9567:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9609:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "9595:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9595:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9531:97:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "9652:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9652:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9651:14:0"
									},
									"scope": 329,
									"src": "9504:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "10121:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "10160:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "10168:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10174:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 209,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															216,
															245
														],
														"referencedDeclaration": 245,
														"src": "10139:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10139:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 208,
												"id": 214,
												"nodeType": "Return",
												"src": "10132:84:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "9845:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10033:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10062:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "10054:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10083:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "10070:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10070:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10053:35:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "10107:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10107:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10106:14:0"
									},
									"scope": 329,
									"src": "10024:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "10577:173:0",
										"statements": [
											{
												"assignments": [
													229,
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10594:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "10589:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10589:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10616:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "10603:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 230,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "10650:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 232,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "10630:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10637:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "10630:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10630:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10588:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "10700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "10708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 240,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "10717:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 241,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "10729:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 237,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "10673:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10673:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 243,
												"nodeType": "Return",
												"src": "10666:76:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "10232:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10427:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "10458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "10483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10525:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "10511:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10511:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10447:97:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "10563:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10563:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10562:14:0"
									},
									"scope": 329,
									"src": "10418:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "11245:445:0",
										"statements": [
											{
												"condition": {
													"id": 259,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "11260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "11623:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "11646:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 278,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "11658:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 276,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "11638:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11638:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "11638:33:0"
														}
													]
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "11256:427:0",
												"trueBody": {
													"id": 275,
													"nodeType": "Block",
													"src": "11269:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 260,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "11288:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11299:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11288:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11309:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11288:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "IfStatement",
															"src": "11284:290:0",
															"trueBody": {
																"id": 271,
																"nodeType": "Block",
																"src": "11312:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 266,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 248,
																							"src": "11517:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 265,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "11506:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11506:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11526:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 264,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11498:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11498:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 270,
																		"nodeType": "ExpressionStatement",
																		"src": "11498:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 273,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "11595:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 258,
															"id": 274,
															"nodeType": "Return",
															"src": "11588:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "10758:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "11055:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11100:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "11092:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "11117:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11117:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "11153:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "11140:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11188:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "11174:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11081:126:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "11231:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11231:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11230:14:0"
									},
									"scope": 329,
									"src": "11046:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12083:141:0",
										"statements": [
											{
												"condition": {
													"id": 296,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "12098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "12157:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "12180:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 302,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "12192:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 300,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "12172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12172:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "12172:33:0"
														}
													]
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "12094:123:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "12107:44:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "12129:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 295,
															"id": 298,
															"nodeType": "Return",
															"src": "12122:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "11698:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "11928:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11960:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "11955:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11955:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "11991:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "11978:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11978:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12026:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12012:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12012:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11944:101:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12069:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12069:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12068:14:0"
									},
									"scope": 329,
									"src": "11919:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "12315:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "12393:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12404:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12393:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12413:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12393:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "12730:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 322,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "12752:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 321,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "12745:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12745:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "12745:20:0"
														}
													]
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "12389:388:0",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "12416:308:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "12577:136:0",
																"nodeType": "YulBlock",
																"src": "12577:136:0",
																"statements": [
																	{
																		"nativeSrc": "12596:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12596:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "12625:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "12625:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "12619:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "12619:5:0"
																			},
																			"nativeSrc": "12619:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "12619:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "12600:15:0",
																				"nodeType": "YulTypedName",
																				"src": "12600:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12665:2:0",
																							"nodeType": "YulLiteral",
																							"src": "12665:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "12669:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "12669:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12661:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "12661:3:0"
																					},
																					"nativeSrc": "12661:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "12661:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "12682:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "12682:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12654:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "12654:6:0"
																			},
																			"nativeSrc": "12654:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "12654:44:0"
																		},
																		"nativeSrc": "12654:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "12654:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12625:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12669:10:0",
																	"valueSize": 1
																}
															],
															"id": 319,
															"nodeType": "InlineAssembly",
															"src": "12568:145:0"
														}
													]
												}
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "12241:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "12262:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "12249:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12249:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12288:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "12274:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12274:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12248:53:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12315:0:0"
									},
									"scope": 329,
									"src": "12232:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2165,
							"src": "3372:9415:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 330,
								"nodeType": "StructuredDocumentation",
								"src": "12793:2258:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 495,
							"linearizedBaseContracts": [
								495
							],
							"name": "Initializable",
							"nameLocation": "15071:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "15092:112:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 333,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "15224:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "15210:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 332,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "15210:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "15245:93:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 336,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "15357:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "15344:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 335,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "15344:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "15379:92:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 341,
									"name": "Initialized",
									"nameLocation": "15483:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "15501:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "15495:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 338,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15494:15:0"
									},
									"src": "15477:33:0"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "15954:498:0",
										"statements": [
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "15970:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "15965:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 344,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15965:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "15987:14:0",
													"subExpression": {
														"id": 346,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "15988:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15965:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 350,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 345,
																			"src": "16035:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 351,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "16053:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16068:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "16053:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "16035:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 355,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16034:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "16075:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 360,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "16114:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$495",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$495",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 359,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "16106:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 358,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "16106:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16106:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 356,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 329,
																						"src": "16076:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$329_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "16095:10:0",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 17,
																					"src": "16076:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16076:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 364,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "16124:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16140:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "16124:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "16075:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 368,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16074:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16034:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16157:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16012:204:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "16012:204:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "16227:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16242:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "16227:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "16227:16:0"
											},
											{
												"condition": {
													"id": 377,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 345,
													"src": "16258:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "16254:67:0",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "16274:47:0",
													"statements": [
														{
															"expression": {
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 378,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "16289:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16305:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "16289:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 381,
															"nodeType": "ExpressionStatement",
															"src": "16289:20:0"
														}
													]
												}
											},
											{
												"id": 384,
												"nodeType": "PlaceholderStatement",
												"src": "16331:1:0"
											},
											{
												"condition": {
													"id": 385,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 345,
													"src": "16347:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 395,
												"nodeType": "IfStatement",
												"src": "16343:102:0",
												"trueBody": {
													"id": 394,
													"nodeType": "Block",
													"src": "16363:82:0",
													"statements": [
														{
															"expression": {
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 386,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "16378:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16394:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "16378:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "16378:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16431:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 390,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "16419:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16419:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 393,
															"nodeType": "EmitStatement",
															"src": "16414:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "15518:407:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 397,
									"name": "initializer",
									"nameLocation": "15940:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15951:2:0"
									},
									"src": "15931:521:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "17583:262:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "17602:14:0",
																"subExpression": {
																	"id": 403,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "17603:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 405,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "17620:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 406,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "17635:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "17620:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17602:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17644:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17594:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "17594:99:0"
											},
											{
												"expression": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 412,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "17704:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 413,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "17719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "17704:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "17704:22:0"
											},
											{
												"expression": {
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 416,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "17737:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17753:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "17737:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "17737:20:0"
											},
											{
												"id": 420,
												"nodeType": "PlaceholderStatement",
												"src": "17768:1:0"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "17780:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17796:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "17780:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "17780:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 426,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "17829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 425,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "17817:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17817:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "EmitStatement",
												"src": "17812:25:0"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "16460:1079:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 430,
									"name": "reinitializer",
									"nameLocation": "17554:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "17574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "17568:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 399,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17568:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17567:15:0"
									},
									"src": "17545:300:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "18089:100:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "18108:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18123:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18100:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "18100:69:0"
											},
											{
												"id": 438,
												"nodeType": "PlaceholderStatement",
												"src": "18180:1:0"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "17853:202:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 440,
									"name": "onlyInitializing",
									"nameLocation": "18070:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18086:2:0"
									},
									"src": "18061:128:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "18734:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "18753:14:0",
															"subExpression": {
																"id": 445,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "18754:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18769:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18745:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "18745:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 450,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "18826:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18847:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 452,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "18847:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 451,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "18842:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18842:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "18854:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "18842:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "18826:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "18822:142:0",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "18859:105:0",
													"statements": [
														{
															"expression": {
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 457,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "18874:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18894:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 459,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "18894:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 458,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "18889:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18889:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "18901:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "18889:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "18874:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 464,
															"nodeType": "ExpressionStatement",
															"src": "18874:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "18941:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 467,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "18941:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 466,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "18936:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18936:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "18948:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "18936:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 465,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "18924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18924:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 472,
															"nodeType": "EmitStatement",
															"src": "18919:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "18197:482:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "18694:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18714:2:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18734:0:0"
									},
									"scope": 495,
									"src": "18685:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "19150:38:0",
										"statements": [
											{
												"expression": {
													"id": 482,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 333,
													"src": "19168:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "19161:19:0"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "18979:101:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "19095:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19117:2:0"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "19143:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 479,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19143:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19142:7:0"
									},
									"scope": 495,
									"src": "19086:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "19365:39:0",
										"statements": [
											{
												"expression": {
													"id": 491,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 336,
													"src": "19383:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 490,
												"id": 492,
												"nodeType": "Return",
												"src": "19376:20:0"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "19196:107:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "19318:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19333:2:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "19359:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19359:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19358:6:0"
									},
									"scope": 495,
									"src": "19309:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2165,
							"src": "15053:4354:0",
							"usedErrors": [],
							"usedEvents": [
								341
							]
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 497,
										"name": "Initializable",
										"nameLocations": [
											"19960:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 495,
										"src": "19960:13:0"
									},
									"id": 498,
									"nodeType": "InheritanceSpecifier",
									"src": "19960:13:0"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 496,
								"nodeType": "StructuredDocumentation",
								"src": "19413:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 542,
							"linearizedBaseContracts": [
								542,
								495
							],
							"name": "ContextUpgradeable",
							"nameLocation": "19938:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "20033:8:0",
										"statements": []
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 501,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 500,
												"name": "onlyInitializing",
												"nameLocations": [
													"20016:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 440,
												"src": "20016:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20016:16:0"
										}
									],
									"name": "__Context_init",
									"nameLocation": "19990:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20004:2:0"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20033:0:0"
									},
									"scope": 542,
									"src": "19981:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "20111:8:0",
										"statements": []
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 506,
												"name": "onlyInitializing",
												"nameLocations": [
													"20094:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 440,
												"src": "20094:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20094:16:0"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "20058:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20082:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20111:0:0"
									},
									"scope": 542,
									"src": "20049:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "20187:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 515,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20205:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20209:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "20205:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 514,
												"id": 517,
												"nodeType": "Return",
												"src": "20198:17:0"
											}
										]
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "20134:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20144:2:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "20178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20177:9:0"
									},
									"scope": 542,
									"src": "20125:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "20298:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 524,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20316:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20320:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "20316:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 523,
												"id": 526,
												"nodeType": "Return",
												"src": "20309:15:0"
											}
										]
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "20240:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20248:2:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "20282:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20282:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20281:16:0"
									},
									"scope": 542,
									"src": "20231:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "20412:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20430:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "20423:8:0"
											}
										]
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "20349:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20369:2:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "20403:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20402:9:0"
									},
									"scope": 542,
									"src": "20340:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "20447:258:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 541,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "20731:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 542,
									"src": "20711:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 538,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "20711:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 540,
										"length": {
											"hexValue": "3530",
											"id": 539,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "20719:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "20711:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2165,
							"src": "19920:820:0",
							"usedErrors": [],
							"usedEvents": [
								341
							]
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 544,
										"name": "Initializable",
										"nameLocations": [
											"21295:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 495,
										"src": "21295:13:0"
									},
									"id": 545,
									"nodeType": "InheritanceSpecifier",
									"src": "21295:13:0"
								},
								{
									"baseName": {
										"id": 546,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"21310:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 542,
										"src": "21310:18:0"
									},
									"id": 547,
									"nodeType": "InheritanceSpecifier",
									"src": "21310:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 543,
								"nodeType": "StructuredDocumentation",
								"src": "20748:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 670,
							"linearizedBaseContracts": [
								670,
								542,
								495
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "21273:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 549,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "21352:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "21336:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 548,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "21336:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 555,
									"name": "OwnershipTransferred",
									"nameLocation": "21373:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "21410:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "21394:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21441:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "21425:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21393:57:0"
									},
									"src": "21367:84:0"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "21610:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 561,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "21621:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21621:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "21621:26:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "21459:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 559,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 558,
												"name": "onlyInitializing",
												"nameLocations": [
													"21593:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 440,
												"src": "21593:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21593:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "21567:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21581:2:0"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21610:0:0"
									},
									"scope": 670,
									"src": "21558:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "21725:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 571,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "21755:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21755:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 570,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "21736:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21736:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "21736:32:0"
											}
										]
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 568,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 567,
												"name": "onlyInitializing",
												"nameLocations": [
													"21708:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 440,
												"src": "21708:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21708:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "21672:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21696:2:0"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21725:0:0"
									},
									"scope": 670,
									"src": "21663:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "21890:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "21901:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21901:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "21901:13:0"
											},
											{
												"id": 582,
												"nodeType": "PlaceholderStatement",
												"src": "21925:1:0"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "21784:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 584,
									"name": "onlyOwner",
									"nameLocation": "21878:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21887:2:0"
									},
									"src": "21869:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "22070:32:0",
										"statements": [
											{
												"expression": {
													"id": 590,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "22088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 589,
												"id": 591,
												"nodeType": "Return",
												"src": "22081:13:0"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "21942:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "22024:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22029:2:0"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "22061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22060:9:0"
									},
									"scope": 670,
									"src": "22015:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "22225:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 598,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "22244:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22244:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 600,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "22255:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22255:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22244:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22269:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22236:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "22236:68:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "22110:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "22189:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22200:2:0"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22225:0:0"
									},
									"scope": 670,
									"src": "22180:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "22710:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22748:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 614,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22740:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22740:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 613,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "22721:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22721:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "22721:30:0"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "22320:330:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 610,
												"name": "onlyOwner",
												"nameLocations": [
													"22700:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 584,
												"src": "22700:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22700:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "22665:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22682:2:0"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22710:0:0"
									},
									"scope": 670,
									"src": "22656:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "22984:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 630,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "23003:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23023:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23015:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23015:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23015:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23003:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23027:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22995:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "22995:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "23098:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "23079:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23079:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "23079:28:0"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "22767:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 626,
												"name": "onlyOwner",
												"nameLocations": [
													"22974:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 584,
												"src": "22974:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22974:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "22923:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22949:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "22941:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22940:18:0"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22984:0:0"
									},
									"scope": 670,
									"src": "22914:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "23338:128:0",
										"statements": [
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "23357:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 663,
														"src": "23349:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 650,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23349:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"id": 652,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "23368:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23349:25:0"
											},
											{
												"expression": {
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 654,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "23385:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 655,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "23394:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23385:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "23385:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 659,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "23439:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "23449:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 658,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "23418:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23418:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "EmitStatement",
												"src": "23413:45:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "23123:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "23284:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23311:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "23303:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23302:18:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23338:0:0"
									},
									"scope": 670,
									"src": "23275:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "23474:258:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 669,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "23758:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "23738:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 666,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "23738:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 668,
										"length": {
											"hexValue": "3439",
											"id": 667,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "23746:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "23738:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2165,
							"src": "21255:2512:0",
							"usedErrors": [],
							"usedEvents": [
								341,
								555
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 671,
								"nodeType": "StructuredDocumentation",
								"src": "23773:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 746,
							"linearizedBaseContracts": [
								746
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "23857:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "23882:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 680,
									"name": "Transfer",
									"nameLocation": "24057:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24082:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "24066:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24104:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "24088:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24116:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "24108:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24065:57:0"
									},
									"src": "24051:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "24131:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 689,
									"name": "Approval",
									"nameLocation": "24294:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24319:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "24303:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24342:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "24326:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24359:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "24351:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24302:63:0"
									},
									"src": "24288:78:0"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "24374:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "24457:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24468:2:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "24494:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24493:9:0"
									},
									"scope": 746,
									"src": "24448:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "24511:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "24600:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24618:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "24610:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24609:17:0"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "24650:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24649:9:0"
									},
									"scope": 746,
									"src": "24591:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "24667:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "24890:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24907:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "24899:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24919:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "24911:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24898:28:0"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "24945:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24945:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24944:6:0"
									},
									"scope": 746,
									"src": "24881:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "24959:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "25244:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25262:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "25254:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25277:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "25269:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25253:32:0"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "25309:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25308:9:0"
									},
									"scope": 746,
									"src": "25235:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "25326:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25996:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "26004:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26029:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "26021:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26003:33:0"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "26055:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26054:6:0"
									},
									"scope": 746,
									"src": "25987:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "26069:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "26379:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26400:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "26392:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26414:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "26406:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26426:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "26418:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26391:42:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "26452:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26452:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26451:6:0"
									},
									"scope": 746,
									"src": "26370:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2165,
							"src": "23847:2614:0",
							"usedErrors": [],
							"usedEvents": [
								680,
								689
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 748,
										"name": "Initializable",
										"nameLocations": [
											"26691:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 495,
										"src": "26691:13:0"
									},
									"id": 749,
									"nodeType": "InheritanceSpecifier",
									"src": "26691:13:0"
								},
								{
									"baseName": {
										"id": 750,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"26706:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 746,
										"src": "26706:17:0"
									},
									"id": 751,
									"nodeType": "InheritanceSpecifier",
									"src": "26706:17:0"
								},
								{
									"baseName": {
										"id": 752,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"26725:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 670,
										"src": "26725:18:0"
									},
									"id": 753,
									"nodeType": "InheritanceSpecifier",
									"src": "26725:18:0"
								}
							],
							"canonicalName": "METH",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 747,
								"nodeType": "StructuredDocumentation",
								"src": "26469:205:0",
								"text": "@title An ERC20 contract named METH\n @author METH Token developer team (info@crystalmeth.xyz)\n @notice Serves as a dynamic reflection token\n @dev Inherits multiple OpenZeppelin standards "
							},
							"fullyImplemented": true,
							"id": 2164,
							"linearizedBaseContracts": [
								2164,
								670,
								542,
								746,
								495
							],
							"name": "METH",
							"nameLocation": "26683:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 755,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "26768:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "26753:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 754,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "26753:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 757,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "26795:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "26780:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 756,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "26780:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 759,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "26823:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "26809:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 758,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "26809:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "26841:52:0",
										"text": "array of address which are excluded from rewards"
									},
									"functionSelector": "4d09deb3",
									"id": 763,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "26916:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "26899:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 761,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26899:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 762,
										"nodeType": "ArrayTypeName",
										"src": "26899:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "26934:48:0",
										"text": "maps an address to an amount owned in tSpace"
									},
									"id": 768,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "27024:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "26988:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 767,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 765,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26996:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "26988:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 766,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "27007:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "27038:48:0",
										"text": "maps an address to an amount owned in rSpace"
									},
									"id": 773,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "27128:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "27092:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 772,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 770,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27100:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27092:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 771,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "27111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "27148:183:0",
										"text": "/// maps an owner to a spender, and the amount of tokens that the spender is \n/// approved to spend on behalf of the owner. Used in the custom _approve function "
									},
									"id": 780,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "27393:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "27337:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 779,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 775,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27345:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27337:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 778,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 776,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "27364:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "27356:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 777,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27375:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "27413:72:0",
										"text": "maps addresses to whether they are excluded from Fees/Rewards or not"
									},
									"id": 785,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "27524:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "27491:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 784,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 782,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27499:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27491:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 783,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "27510:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "27544:70:0",
										"text": "maps addresses to whether they are excluded from the Max Tx or not"
									},
									"id": 790,
									"mutability": "mutable",
									"name": "_isExcludedFromMaxTx",
									"nameLocation": "27653:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "27620:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 789,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 787,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "27628:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "27620:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 788,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "27639:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "27682:50:0",
										"text": "fixed value representing MAX which is 2**256-1"
									},
									"id": 793,
									"mutability": "mutable",
									"name": "_MAX",
									"nameLocation": "27754:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "27738:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 792,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27738:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "27767:49:0",
										"text": "@notice the total fixed supply of METH tokens"
									},
									"functionSelector": "af465a27",
									"id": 796,
									"mutability": "mutable",
									"name": "_tTotal",
									"nameLocation": "27837:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "27822:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 795,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27822:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "27853:155:0",
										"text": "/// rTotal is a calculated value - rTotal = MAX − (MAX mod tTotal)\n/// (Note: value will go down after each buy/sell transaction)  "
									},
									"functionSelector": "45e0b9d4",
									"id": 799,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "28029:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "28014:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28014:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "28045:29:0",
										"text": "maximum transation amount"
									},
									"functionSelector": "8c0b5e22",
									"id": 802,
									"mutability": "mutable",
									"name": "maxTxAmount",
									"nameLocation": "28095:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "28080:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 801,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28080:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4dacf3f5",
									"id": 804,
									"mutability": "mutable",
									"name": "antiWhale",
									"nameLocation": "28127:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "28115:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 803,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "28115:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "28585:1326:0",
										"statements": [
											{
												"documentation": "ownableUpgradeble call __Ownable_init function",
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 809,
															"name": "OwnableUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "28660:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$670_$",
																"typeString": "type(contract OwnableUpgradeable)"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28679:14:0",
														"memberName": "__Ownable_init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "28660:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28660:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "28660:35:0"
											},
											{
												"documentation": "sets token details",
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "28740:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4d455448",
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28748:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_064ba78a8cdb5d9b059e0a37958856e0314d4d2af1b4b75da1eb36c359ade9da",
															"typeString": "literal_string \"METH\""
														},
														"value": "METH"
													},
													"src": "28740:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "28740:14:0"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 818,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "28765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4d455448",
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28775:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_064ba78a8cdb5d9b059e0a37958856e0314d4d2af1b4b75da1eb36c359ade9da",
															"typeString": "literal_string \"METH\""
														},
														"value": "METH"
													},
													"src": "28765:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "28765:16:0"
											},
											{
												"expression": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 822,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "28792:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28804:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "28792:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "28792:14:0"
											},
											{
												"documentation": "total token supply is assigned to _tTotal, expressed in wei (10 Billion)",
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 826,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "28905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030303030303030303030303030303030303030303030303030",
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28915:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000000000"
														},
														"value": "10000000000000000000000000000"
													},
													"src": "28905:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "28905:39:0"
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 830,
														"name": "_MAX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "28989:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "~",
														"prefix": true,
														"src": "28996:11:0",
														"subExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29005:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 831,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28997:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28997:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28989:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "28989:18:0"
											},
											{
												"documentation": "rTotal calculated based on tTotal",
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 838,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "29067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "_MAX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "29078:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 840,
																				"name": "_MAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "29086:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 841,
																				"name": "_tTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "29093:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29086:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 843,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29085:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29078:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 845,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29077:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29067:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "29067:35:0"
											},
											{
												"documentation": "adds the rTotal value to owner array mapping which effectively gives owner initial supply",
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 848,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "29218:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 851,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 849,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "29226:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29226:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29218:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 852,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "29237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29218:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "29218:26:0"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 855,
														"name": "maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "29258:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 856,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "29272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29258:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "29258:21:0"
											},
											{
												"documentation": "exclude These contracts from fees and rewards",
												"expression": {
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 859,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "29353:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 864,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29373:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29365:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29365:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29365:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29353:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29379:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29353:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "29353:30:0"
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 868,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "29394:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 873,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29414:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x000000000000000000000000000000000000dEaD"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29406:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 869,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29406:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29406:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29394:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29461:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29394:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "29394:71:0"
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 877,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "29476:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 882,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030333639",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29496:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x0000000000000000000000000000000000000369"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29488:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29488:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29476:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29543:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29476:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "29476:71:0"
											},
											{
												"documentation": "exclude These contracts from maxTxAmount",
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 886,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "29614:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 891,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29634:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 887,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29626:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29626:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29614:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29640:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29614:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "29614:30:0"
											},
											{
												"expression": {
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 895,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "29655:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 900,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29675:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x000000000000000000000000000000000000dEaD"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29667:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 896,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29667:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29667:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29655:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29722:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29655:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "29655:71:0"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 904,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "29737:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 909,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030333639",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29757:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x0000000000000000000000000000000000000369"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29749:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29749:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29749:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29737:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29804:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29737:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "29737:71:0"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "29821:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29833:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29821:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "29821:16:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29872:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29864:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 918,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29864:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29864:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 922,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "29876:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29876:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "29885:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 917,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "29855:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29855:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "EmitStatement",
												"src": "29850:43:0"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 806,
												"name": "initializer",
												"nameLocations": [
													"28564:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "28564:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28564:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "28491:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28501:62:0"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28585:0:0"
									},
									"scope": 2164,
									"src": "28482:1429:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "30052:31:0",
										"statements": [
											{
												"expression": {
													"id": 934,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 755,
													"src": "30070:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 933,
												"id": 935,
												"nodeType": "Return",
												"src": "30063:12:0"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "29972:22:0",
										"text": "@notice token name"
									},
									"functionSelector": "06fdde03",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "30009:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30013:2:0"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "30037:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30037:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30036:15:0"
									},
									"scope": 2164,
									"src": "30000:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "30175:33:0",
										"statements": [
											{
												"expression": {
													"id": 943,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 757,
													"src": "30193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 942,
												"id": 944,
												"nodeType": "Return",
												"src": "30186:14:0"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "30091:24:0",
										"text": "@notice token symbol"
									},
									"functionSelector": "95d89b41",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "30130:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30136:2:0"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "30160:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 940,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30160:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30159:15:0"
									},
									"scope": 2164,
									"src": "30121:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "30296:35:0",
										"statements": [
											{
												"expression": {
													"id": 952,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 759,
													"src": "30314:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 951,
												"id": 953,
												"nodeType": "Return",
												"src": "30307:16:0"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "30216:26:0",
										"text": "@notice token decimals"
									},
									"functionSelector": "313ce567",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "30257:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30265:2:0"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "30289:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 949,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "30289:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30288:7:0"
									},
									"scope": 2164,
									"src": "30248:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										695
									],
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "30492:33:0",
										"statements": [
											{
												"expression": {
													"id": 963,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 796,
													"src": "30510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 962,
												"id": 964,
												"nodeType": "Return",
												"src": "30503:14:0"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "30339:65:0",
										"text": "@notice uses \"override\" to return value from _tTotal (tSpace)"
									},
									"functionSelector": "18160ddd",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "30419:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 959,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 958,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"30455:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 746,
												"src": "30455:17:0"
											}
										],
										"src": "30445:28:0"
									},
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30430:2:0"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "30483:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30482:9:0"
									},
									"scope": 2164,
									"src": "30410:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "30743:283:0",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 976,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "30819:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 978,
													"indexExpression": {
														"id": 977,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "30831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30819:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "30897:122:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 985,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "30999:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 984,
																	"name": "rBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "30988:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30988:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 975,
															"id": 987,
															"nodeType": "Return",
															"src": "30981:26:0"
														}
													]
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "30815:204:0",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "30841:50:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 979,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "30863:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 981,
																"indexExpression": {
																	"id": 980,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "30871:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30863:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 975,
															"id": 982,
															"nodeType": "Return",
															"src": "30856:23:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "30533:109:0",
										"text": "@notice uses \"override\" - returns tOwned amounts for excluded addresses and rOwned amounts for all others"
									},
									"functionSelector": "70a08231",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "30657:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 972,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 971,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"30706:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 746,
												"src": "30706:17:0"
											}
										],
										"src": "30696:28:0"
									},
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "30667:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30666:17:0"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "30734:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30733:9:0"
									},
									"scope": 2164,
									"src": "30648:378:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										713
									],
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "31202:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1004,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "31223:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31223:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "31237:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "31248:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "31213:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31213:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "31213:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31273:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1002,
												"id": 1011,
												"nodeType": "Return",
												"src": "31266:11:0"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "31034:58:0",
										"text": "@notice uses \"override\" to call the _transfer function"
									},
									"functionSelector": "a9059cbb",
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "31107:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 999,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 998,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"31168:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 746,
												"src": "31168:17:0"
											}
										],
										"src": "31158:28:0"
									},
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "31124:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "31116:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "31135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31115:35:0"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "31196:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31196:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31195:6:0"
									},
									"scope": 2164,
									"src": "31098:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "31552:162:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1028,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "31573:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "31581:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "31592:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1027,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "31563:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31563:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "31563:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1034,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "31619:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1035,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "31627:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31627:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1037,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "31641:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1039,
																	"indexExpression": {
																		"id": 1038,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "31653:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31641:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1042,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1040,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "31661:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31661:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31641:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1043,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "31677:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31641:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "31610:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31610:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "31610:74:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1026,
												"id": 1048,
												"nodeType": "Return",
												"src": "31695:11:0"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "31293:79:0",
										"text": "@notice uses \"override\" and calls the  _transfer and the _approve functions"
									},
									"functionSelector": "23b872dd",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "31387:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1023,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1022,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"31518:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 746,
												"src": "31518:17:0"
											}
										],
										"src": "31508:28:0"
									},
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "31418:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "31410:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "31444:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "31436:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31473:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "31465:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31399:91:0"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "31546:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31545:6:0"
									},
									"scope": 2164,
									"src": "31378:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										723
									],
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "31917:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1062,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "31935:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1064,
														"indexExpression": {
															"id": 1063,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "31947:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31935:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1066,
													"indexExpression": {
														"id": 1065,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "31954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31935:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1061,
												"id": 1067,
												"nodeType": "Return",
												"src": "31928:34:0"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "31722:79:0",
										"text": "@notice uses \"override\" and returns the value from the _allowances function"
									},
									"functionSelector": "dd62ed3e",
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "31816:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1058,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1057,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"31880:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 746,
												"src": "31880:17:0"
											}
										],
										"src": "31870:28:0"
									},
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "31834:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "31826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "31841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31825:32:0"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "31908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31907:9:0"
									},
									"scope": 2164,
									"src": "31807:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										733
									],
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "32153:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1082,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "32173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32173:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "32187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "32196:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1081,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "32164:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32164:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "32164:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32221:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1080,
												"id": 1089,
												"nodeType": "Return",
												"src": "32214:11:0"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "31978:68:0",
										"text": "@notice uses \"override\" and returns the custom _approve function"
									},
									"functionSelector": "095ea7b3",
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "32061:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1077,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1076,
												"name": "IERC20Upgradeable",
												"nameLocations": [
													"32119:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 746,
												"src": "32119:17:0"
											}
										],
										"src": "32109:28:0"
									},
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32077:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "32069:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32094:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "32086:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32068:33:0"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "32147:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1078,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32147:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32146:6:0"
									},
									"scope": 2164,
									"src": "32052:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "32400:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1102,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "32420:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32420:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "32434:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1105,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "32443:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1108,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1106,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "32455:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32455:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32443:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1110,
																"indexExpression": {
																	"id": 1109,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "32469:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32443:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1111,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "32480:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32443:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1101,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "32411:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32411:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "32411:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32509:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1100,
												"id": 1116,
												"nodeType": "Return",
												"src": "32502:11:0"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "32241:59:0",
										"text": "@notice uses \"override\" and calls the _approve function"
									},
									"functionSelector": "39509351",
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "32315:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32341:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "32333:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "32358:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "32350:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32332:37:0"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "32394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32393:6:0"
									},
									"scope": 2164,
									"src": "32306:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "32693:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1129,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "32713:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32713:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "32727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1132,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "32736:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1135,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1133,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "32748:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32748:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32736:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1137,
																"indexExpression": {
																	"id": 1136,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "32762:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32736:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1138,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "32773:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32736:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "32704:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32704:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "32704:85:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1127,
												"id": 1143,
												"nodeType": "Return",
												"src": "32800:11:0"
											}
										]
									},
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "32529:59:0",
										"text": "@notice uses \"override\" and calls the _approve function"
									},
									"functionSelector": "a457c2d7",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "32603:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "32621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "32646:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "32638:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32620:42:0"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "32687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1125,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32686:6:0"
									},
									"scope": 2164,
									"src": "32594:225:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "33069:38:0",
										"statements": [
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1152,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "33080:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1153,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "33092:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "33080:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "33080:19:0"
											}
										]
									},
									"functionSelector": "83f24c09",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1149,
												"name": "onlyOwner",
												"nameLocations": [
													"33059:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 584,
												"src": "33059:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "33059:9:0"
										}
									],
									"name": "setAntiWhaleStatus",
									"nameLocation": "33017:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "33041:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "33036:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33035:14:0"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33069:0:0"
									},
									"scope": 2164,
									"src": "33008:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "33117:76:0",
										"text": "/// @notice checks if address is DEX-related smart contract"
									},
									"id": 1166,
									"mutability": "constant",
									"name": "SELECTOR",
									"nameLocation": "33223:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "33199:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1159,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "33199:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "666163746f72792829",
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33251:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c45a01550ceb4bc5c6b2e6f722b5033a03078f9bd6673457375ba94c26ac1cf0",
															"typeString": "literal_string \"factory()\""
														},
														"value": "factory()"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_c45a01550ceb4bc5c6b2e6f722b5033a03078f9bd6673457375ba94c26ac1cf0",
															"typeString": "literal_string \"factory()\""
														}
													],
													"id": 1162,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967288,
													"src": "33241:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 1164,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "33241:22:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 1161,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "33234:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1160,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "33234:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 1165,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "33234:30:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "33338:152:0",
										"statements": [
											{
												"assignments": [
													1174,
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "33355:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "33350:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1173,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "33350:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "33377:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "33364:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1175,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "33364:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1181,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "33428:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"id": 1179,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "33405:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "33409:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "33405:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33405:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1177,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "33385:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33394:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "33385:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33385:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33349:89:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1185,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "33456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1186,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "33467:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "33472:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "33467:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33481:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "33467:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "33456:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1172,
												"id": 1191,
												"nodeType": "Return",
												"src": "33449:33:0"
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRouter",
									"nameLocation": "33282:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "33299:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "33291:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33290:18:0"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "33332:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33332:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33331:6:0"
									},
									"scope": 2164,
									"src": "33273:217:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "33725:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "33744:30:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1200,
																	"name": "_isExcludedFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "33745:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1202,
																"indexExpression": {
																	"id": 1201,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "33766:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33745:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33776:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33736:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "33736:70:0"
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1207,
															"name": "_isExcludedFromMaxTx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "33817:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1209,
														"indexExpression": {
															"id": 1208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "33838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33817:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33849:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "33817:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "33817:36:0"
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "33498:170:0",
										"text": "/// @notice as address as being excluded from Max Tx (usually DEX)\n/// IMPORTANT: once an address is marked excluded it becomes PERMANENTLY excluded"
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excludeFromMaxTx",
									"nameLocation": "33683:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "33708:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "33700:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33699:17:0"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33725:0:0"
									},
									"scope": 2164,
									"src": "33674:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "34163:535:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "34182:21:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1221,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "34183:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1223,
																"indexExpression": {
																	"id": 1222,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "34195:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34183:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34205:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34174:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "34174:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1228,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "34300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1230,
														"indexExpression": {
															"id": 1229,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "34308:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34300:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34319:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34300:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "if address is not a null address..",
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "34296:214:0",
												"trueBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "34322:188:0",
													"statements": [
														{
															"documentation": "then set tOwned value for account to be value based on \n caling the rBalanceOf() function",
															"expression": {
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1233,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "34460:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1235,
																	"indexExpression": {
																		"id": 1234,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1217,
																		"src": "34468:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "34460:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1237,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "34490:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1236,
																		"name": "rBalanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "34479:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34479:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34460:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1240,
															"nodeType": "ExpressionStatement",
															"src": "34460:38:0"
														}
													]
												}
											},
											{
												"documentation": "also set address as excluded",
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1243,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "34564:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1245,
														"indexExpression": {
															"id": 1244,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "34576:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34564:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34587:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "34564:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "34564:27:0"
											},
											{
												"documentation": "also add address to the array of excluded addresses",
												"expression": {
													"arguments": [
														{
															"id": 1252,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "34682:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1249,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "34667:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34677:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "34667:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34667:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "34667:23:0"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "33869:239:0",
										"text": "/// @notice marks an address as being excluded from rewards (usually DEX)\n/// and then adds the address the excluded address array\n/// IMPORTANT: once an address is marked excluded it becomes PERMANENTLY excluded"
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excludeAddress",
									"nameLocation": "34123:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34146:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "34138:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34137:17:0"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34163:0:0"
									},
									"scope": 2164,
									"src": "34114:584:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "34922:509:0",
										"statements": [
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "rOwned",
														"nameLocation": "34941:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1295,
														"src": "34933:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1269,
												"initialValue": {
													"baseExpression": {
														"id": 1266,
														"name": "_rOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "34950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1268,
													"indexExpression": {
														"id": 1267,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "34958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34950:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34933:33:0"
											},
											{
												"documentation": "first check that rOwned balance is less than the rTotal",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1271,
																"name": "rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "35064:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1272,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "35074:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35064:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35083:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 1270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35056:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "35056:72:0"
											},
											{
												"assignments": [
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "35213:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1295,
														"src": "35205:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "set the currentRate value from the _getRate function",
												"id": 1282,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1280,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "35227:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35227:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35205:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1283,
														"name": "rOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "35252:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35252:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1293,
													"nodeType": "Block",
													"src": "35306:118:0",
													"statements": [
														{
															"documentation": "displays the rOwned amount expressed in tSpace",
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1289,
																	"name": "rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "35392:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1290,
																	"name": "currentRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "35401:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35392:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1263,
															"id": 1292,
															"nodeType": "Return",
															"src": "35385:27:0"
														}
													]
												},
												"id": 1294,
												"nodeType": "IfStatement",
												"src": "35248:176:0",
												"trueBody": {
													"id": 1288,
													"nodeType": "Block",
													"src": "35265:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35287:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1263,
															"id": 1287,
															"nodeType": "Return",
															"src": "35280:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "34706:143:0",
										"text": "/// @notice Used by the standard ERC20 \"balanceOf()\" function\n/// returns the rAmount divided by the current rate value. "
									},
									"functionSelector": "5319e78f",
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rBalanceOf",
									"nameLocation": "34864:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34883:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "34875:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34874:17:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "34913:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34912:9:0"
									},
									"scope": 2164,
									"src": "34855:576:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "35548:211:0",
										"statements": [
											{
												"assignments": [
													1303,
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "35629:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "35621:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1302,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "35646:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "35638:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "retrieve values from _getCurrentSupply function",
												"id": 1308,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1306,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "35657:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35657:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35620:56:0"
											},
											{
												"documentation": "rsupply divided by tsupply",
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1309,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "35734:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1310,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "35744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35734:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1301,
												"id": 1312,
												"nodeType": "Return",
												"src": "35727:24:0"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "35441:51:0",
										"text": "@notice function used by the getValues function"
									},
									"functionSelector": "94e10784",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "35507:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35515:2:0"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "35539:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35538:9:0"
									},
									"scope": 2164,
									"src": "35498:261:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "35924:571:0",
										"statements": [
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "36002:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "35994:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35994:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "firstly set the values to _rTotal and _tTotal",
												"id": 1326,
												"initialValue": {
													"id": 1325,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 799,
													"src": "36012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35994:25:0"
											},
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "36038:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "36030:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"id": 1329,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 796,
													"src": "36048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36030:25:0"
											},
											{
												"body": {
													"id": 1362,
													"nodeType": "Block",
													"src": "36170:280:0",
													"statements": [
														{
															"documentation": "set rSupply to be rSupply minus excluded _rOwned value        ",
															"expression": {
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1342,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "36265:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1343,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "36275:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 1344,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 773,
																			"src": "36285:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1348,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1345,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "36293:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1347,
																			"indexExpression": {
																				"id": 1346,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1332,
																				"src": "36303:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "36293:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "36285:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "36275:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36265:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "36265:41:0"
														},
														{
															"documentation": "set tSupply to be tSupply minus excluded _tOwned value    ",
															"expression": {
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1352,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "36397:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1353,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "36407:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 1354,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "36417:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1358,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1355,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "36425:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1357,
																			"indexExpression": {
																				"id": 1356,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1332,
																				"src": "36435:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "36425:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "36417:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "36407:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36397:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1361,
															"nodeType": "ExpressionStatement",
															"src": "36397:41:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1335,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "36143:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1336,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "36147:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36157:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "36147:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36143:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "loop for each excluded address:          ",
												"id": 1363,
												"initializationExpression": {
													"assignments": [
														1332
													],
													"declarations": [
														{
															"constant": false,
															"id": 1332,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "36136:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1363,
															"src": "36128:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1331,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36128:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1334,
													"initialValue": {
														"hexValue": "30",
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "36128:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "36165:3:0",
														"subExpression": {
															"id": 1339,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "36165:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1341,
													"nodeType": "ExpressionStatement",
													"src": "36165:3:0"
												},
												"nodeType": "ForStatement",
												"src": "36123:327:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1364,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "36470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1365,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "36479:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1366,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "36469:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1321,
												"id": 1367,
												"nodeType": "Return",
												"src": "36462:25:0"
											}
										]
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "35767:83:0",
										"text": "@notice used by the _getRate function to return two values: rSupply and tSupply"
									},
									"functionSelector": "97a9d560",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "35865:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35882:2:0"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "35906:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "35915:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35905:18:0"
									},
									"scope": 2164,
									"src": "35856:639:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "36687:398:0",
										"statements": [
											{
												"documentation": "check that owner and spender are not 0 addresses",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1380,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "36770:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36787:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36779:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1381,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36779:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36779:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "36770:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36791:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36762:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "36762:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1390,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "36849:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36868:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36860:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1391,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36860:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36860:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "36849:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36872:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36841:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "36841:68:0"
											},
											{
												"documentation": "adds the amount to the owner->spender _allowances mapping",
												"expression": {
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1399,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "36993:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1402,
															"indexExpression": {
																"id": 1400,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "37005:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36993:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1403,
														"indexExpression": {
															"id": 1401,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "37012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36993:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1404,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "37023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36993:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "36993:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1408,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "37054:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "37061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "37070:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1407,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "37045:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37045:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "EmitStatement",
												"src": "37040:37:0"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "36503:70:0",
										"text": "@notice CUSTOM approve function to override ERC20 approve function"
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "36588:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "36615:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "36607:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "36639:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "36631:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36665:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "36657:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36596:82:0"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36687:0:0"
									},
									"scope": 2164,
									"src": "36579:506:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1417,
									"mutability": "mutable",
									"name": "mutex",
									"nameLocation": "37108:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2164,
									"src": "37095:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1415,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "37095:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "37116:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "37311:2402:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1428,
																"name": "mutex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "37367:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37376:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "37367:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37359:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "37359:23:0"
											},
											{
												"expression": {
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1433,
														"name": "mutex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "37393:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37401:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "37393:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "37393:12:0"
											},
											{
												"documentation": "checks all inputs are greater than 0",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1438,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "37476:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37492:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37484:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1439,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "37484:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37484:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "37476:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37496:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37468:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "37468:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1448,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "37555:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37569:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37561:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1449,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "37561:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37561:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "37555:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37573:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37547:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "37547:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1458,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "37630:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37630:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37642:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37622:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37622:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "37622:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1465,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "37940:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1464,
																	"name": "isRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "37931:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37931:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37949:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "37931:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "37971:27:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1469,
																	"name": "_isExcludedFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "37972:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1471,
																"indexExpression": {
																	"id": 1470,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "37993:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "37972:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "37931:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "38015:18:0",
														"subExpression": {
															"baseExpression": {
																"id": 1474,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "38016:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1476,
															"indexExpression": {
																"id": 1475,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "38028:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "38016:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "37931:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "checks if the \"from\" address or the \"to\" address is a V2 Router\n If it is, and it's not already in the  _isExcluded and _isExcludedFromMaxTx arrays,\n then it should be added.",
												"id": 1488,
												"nodeType": "IfStatement",
												"src": "37913:228:0",
												"trueBody": {
													"id": 1487,
													"nodeType": "Block",
													"src": "38049:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1480,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "38085:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1479,
																	"name": "excludeFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "38068:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38068:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1482,
															"nodeType": "ExpressionStatement",
															"src": "38068:22:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1484,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "38124:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1483,
																	"name": "excludeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "38109:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38109:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1486,
															"nodeType": "ExpressionStatement",
															"src": "38109:20:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1490,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "38180:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1489,
																	"name": "isRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "38171:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38171:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38187:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "38171:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "38209:25:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1494,
																	"name": "_isExcludedFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "38210:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1496,
																"indexExpression": {
																	"id": 1495,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "38231:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "38210:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "38171:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "38251:16:0",
														"subExpression": {
															"baseExpression": {
																"id": 1499,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "38252:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1501,
															"indexExpression": {
																"id": 1500,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "38264:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "38252:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "38171:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1513,
												"nodeType": "IfStatement",
												"src": "38153:218:0",
												"trueBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "38283:88:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1505,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "38319:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1504,
																	"name": "excludeFromMaxTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "38302:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38302:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1507,
															"nodeType": "ExpressionStatement",
															"src": "38302:20:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1509,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "38356:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1508,
																	"name": "excludeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "38341:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38341:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1511,
															"nodeType": "ExpressionStatement",
															"src": "38341:18:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1514,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "38466:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1515,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "38474:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38474:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "38466:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "38485:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1519,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "38491:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38491:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "38485:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "38466:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "checks if contract owner is either the \"from\" or the \"to\" address",
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "38462:463:0",
												"trueBody": {
													"id": 1541,
													"nodeType": "Block",
													"src": "38500:425:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "38688:27:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1523,
																			"name": "_isExcludedFromMaxTx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 790,
																			"src": "38689:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1525,
																		"indexExpression": {
																			"id": 1524,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1420,
																			"src": "38710:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "38689:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "38719:25:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1527,
																			"name": "_isExcludedFromMaxTx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 790,
																			"src": "38720:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1529,
																		"indexExpression": {
																			"id": 1528,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "38741:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "38720:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "38688:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"documentation": "/// assuming neither addresses are owner, \n/// then if the from AND to addresses are NOT excluded from MAX Tx",
															"id": 1540,
															"nodeType": "IfStatement",
															"src": "38684:230:0",
															"trueBody": {
																"id": 1539,
																"nodeType": "Block",
																"src": "38746:168:0",
																"statements": [
																	{
																		"documentation": "check amount is less than maxTxAmount",
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1535,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1533,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "38832:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 1534,
																						"name": "maxTxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "38842:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "38832:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5472616e7366657220616d6f756e74206578636565647320746865206d61785478416d6f756e742e",
																					"id": 1536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "38855:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																						"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																					},
																					"value": "Transfer amount exceeds the maxTxAmount."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																						"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																					}
																				],
																				"id": 1532,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "38824:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38824:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1538,
																		"nodeType": "ExpressionStatement",
																		"src": "38824:74:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "39000:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1544,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "39008:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39008:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "39000:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1547,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "39019:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1548,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "39025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39025:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "39019:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39000:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "checks if from AND to addresses are NOT owner",
												"id": 1571,
												"nodeType": "IfStatement",
												"src": "38996:452:0",
												"trueBody": {
													"id": 1570,
													"nodeType": "Block",
													"src": "39034:414:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "39211:27:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1552,
																			"name": "_isExcludedFromMaxTx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 790,
																			"src": "39212:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1554,
																		"indexExpression": {
																			"id": 1553,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1420,
																			"src": "39233:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "39212:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "39242:25:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 1556,
																			"name": "_isExcludedFromMaxTx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 790,
																			"src": "39243:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1558,
																		"indexExpression": {
																			"id": 1557,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "39264:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "39243:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "39211:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"documentation": "/// assuming neither addresses are owner...\n/// then if the from and to addresses are not excluded",
															"id": 1569,
															"nodeType": "IfStatement",
															"src": "39207:230:0",
															"trueBody": {
																"id": 1568,
																"nodeType": "Block",
																"src": "39269:168:0",
																"statements": [
																	{
																		"documentation": "check amount is less than maxTxAmount",
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1562,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "39355:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 1563,
																						"name": "maxTxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "39365:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "39355:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5472616e7366657220616d6f756e74206578636565647320746865206d61785478416d6f756e742e",
																					"id": 1565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "39378:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																						"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																					},
																					"value": "Transfer amount exceeds the maxTxAmount."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd",
																						"typeString": "literal_string \"Transfer amount exceeds the maxTxAmount.\""
																					}
																				],
																				"id": 1561,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "39347:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "39347:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1567,
																		"nodeType": "ExpressionStatement",
																		"src": "39347:74:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"documentation": "/// transfer amount, by calling the _tokenTransfer function. It will also pass in takeFee boolean\n/// (part of custom \"_transfer\" function)",
												"expression": {
													"arguments": [
														{
															"id": 1573,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "39662:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "39668:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "39672:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1572,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "39647:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39647:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "39647:32:0"
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1578,
														"name": "mutex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "39692:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39700:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "39692:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "39692:13:0"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "37130:72:0",
										"text": "@notice CUSTOM transfer function to override ERC20 transfer function"
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "37217:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37245:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "37237:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37268:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "37260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "37281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37226:76:0"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37311:0:0"
									},
									"scope": 2164,
									"src": "37208:2505:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "39876:872:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1593,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "39944:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1595,
														"indexExpression": {
															"id": 1594,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "39956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39944:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "39967:23:0",
														"subExpression": {
															"baseExpression": {
																"id": 1596,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "39968:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1598,
															"indexExpression": {
																"id": 1597,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "39980:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "39968:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39944:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "SENDER EXCLUDED ADDRESS - (Token buy)",
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "40213:20:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1608,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "40214:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1610,
																"indexExpression": {
																	"id": 1609,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "40226:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "40214:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 1612,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "40237:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1614,
															"indexExpression": {
																"id": 1613,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "40249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "40237:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "40213:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1623,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "40486:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1625,
																"indexExpression": {
																	"id": 1624,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "40498:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "40486:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"baseExpression": {
																	"id": 1626,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "40509:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1628,
																"indexExpression": {
																	"id": 1627,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "40521:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "40509:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "40486:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1643,
															"nodeType": "Block",
															"src": "40670:71:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1638,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1586,
																				"src": "40703:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1639,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "40711:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1640,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1590,
																				"src": "40722:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1637,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2110,
																			"src": "40685:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40685:44:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1642,
																	"nodeType": "ExpressionStatement",
																	"src": "40685:44:0"
																}
															]
														},
														"id": 1644,
														"nodeType": "IfStatement",
														"src": "40482:259:0",
														"trueBody": {
															"id": 1636,
															"nodeType": "Block",
															"src": "40533:131:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1631,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1586,
																				"src": "40571:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1632,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "40579:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1633,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1590,
																				"src": "40590:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1630,
																			"name": "_transferBothExcluded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2034,
																			"src": "40549:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40549:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1635,
																	"nodeType": "ExpressionStatement",
																	"src": "40549:48:0"
																}
															]
														}
													},
													"id": 1645,
													"nodeType": "IfStatement",
													"src": "40209:532:0",
													"trueBody": {
														"id": 1622,
														"nodeType": "Block",
														"src": "40261:215:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1617,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "40296:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1618,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "40304:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1619,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "40315:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1616,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "40276:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40276:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1621,
																"nodeType": "ExpressionStatement",
																"src": "40276:46:0"
															}
														]
													}
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "39940:801:0",
												"trueBody": {
													"id": 1607,
													"nodeType": "Block",
													"src": "39992:211:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1602,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "40030:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1603,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "40038:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1604,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "40049:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1601,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1956,
																	"src": "40008:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40008:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1606,
															"nodeType": "ExpressionStatement",
															"src": "40008:48:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "39723:64:0",
										"text": "@notice CUSTOM token transfer function called by _transfer()"
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "39802:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "39825:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "39817:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "39841:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "39833:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "39860:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "39852:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39816:51:0"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39876:0:0"
									},
									"scope": 2164,
									"src": "39793:955:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "METH.TransferData",
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "40758:46:0",
										"text": "@notice struct used for transfer functions"
									},
									"id": 1668,
									"members": [
										{
											"constant": false,
											"id": 1651,
											"mutability": "mutable",
											"name": "tAmountSent",
											"nameLocation": "40849:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "40841:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1650,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "40841:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1653,
											"mutability": "mutable",
											"name": "rAmountSent",
											"nameLocation": "40879:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "40871:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1652,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "40871:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1655,
											"mutability": "mutable",
											"name": "totalBuyTaxBps",
											"nameLocation": "40909:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "40901:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1654,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "40901:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1657,
											"mutability": "mutable",
											"name": "totalSellTaxBps",
											"nameLocation": "40942:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "40934:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1656,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "40934:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1659,
											"mutability": "mutable",
											"name": "tBuyFeeTotal",
											"nameLocation": "40976:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "40968:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1658,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "40968:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1661,
											"mutability": "mutable",
											"name": "rBuyFeeTotal",
											"nameLocation": "41007:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "40999:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1660,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "40999:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1663,
											"mutability": "mutable",
											"name": "tSellFeeTotal",
											"nameLocation": "41038:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "41030:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1662,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "41030:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1665,
											"mutability": "mutable",
											"name": "rSellFeeTotal",
											"nameLocation": "41070:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "41062:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1664,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "41062:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1667,
											"mutability": "mutable",
											"name": "reflectedAmount",
											"nameLocation": "41102:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "41094:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1666,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "41094:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferData",
									"nameLocation": "40817:12:0",
									"nodeType": "StructDefinition",
									"scope": 2164,
									"src": "40810:315:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ff000e16c1c0d33b07404c2b2abb9832356b5cfd57566d73c9d09611f030890d",
									"id": 1674,
									"name": "TransferToExcluded",
									"nameLocation": "41139:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSent",
												"nameLocation": "41166:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "41158:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "41186:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "41178:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41157:44:0"
									},
									"src": "41133:69:0"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "41358:1671:0",
										"statements": [
											{
												"assignments": [
													1686
												],
												"declarations": [
													{
														"constant": false,
														"id": 1686,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "41389:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1811,
														"src": "41369:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
															"typeString": "struct METH.TransferData"
														},
														"typeName": {
															"id": 1685,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1684,
																"name": "TransferData",
																"nameLocations": [
																	"41369:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1668,
																"src": "41369:12:0"
															},
															"referencedDeclaration": 1668,
															"src": "41369:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_storage_ptr",
																"typeString": "struct METH.TransferData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1687,
												"nodeType": "VariableDeclarationStatement",
												"src": "41369:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1689,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "41535:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1691,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1677,
																			"src": "41557:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1690,
																		"name": "rBalanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "41546:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41546:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41567:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "41546:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41535:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742073656c6c206d6f7265207468616e20313025206f662062616c616e636520696e2073696e676c65207472616e73616374696f6e",
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41571:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac",
																"typeString": "literal_string \"Cannot sell more than 10% of balance in single transaction\""
															},
															"value": "Cannot sell more than 10% of balance in single transaction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dee2aed319b9336934c30c5f7533a4ae541593ad067c478d8601c31f797d04ac",
																"typeString": "literal_string \"Cannot sell more than 10% of balance in single transaction\""
															}
														],
														"id": 1688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41527:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "41527:105:0"
											},
											{
												"expression": {
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "41693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "41698:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "41693:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1702,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "41712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41693:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "41693:26:0"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1705,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "41730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "41735:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "41730:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1708,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "41749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1709,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "41759:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41759:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41749:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41730:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "41730:39:0"
											},
											{
												"expression": {
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1714,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "41782:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1716,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "41787:15:0",
														"memberName": "totalSellTaxBps",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1657,
														"src": "41782:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41805:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "41782:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "41782:24:0"
											},
											{
												"expression": {
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1720,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "41874:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "41879:13:0",
														"memberName": "tSellFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1663,
														"src": "41874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1723,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "41896:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1724,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "41906:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1725,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "41911:15:0",
																		"memberName": "totalSellTaxBps",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1657,
																		"src": "41906:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41896:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1727,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41895:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41930:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "41895:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41874:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "41874:61:0"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "41946:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "41951:13:0",
														"memberName": "rSellFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1665,
														"src": "41946:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1735,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "41967:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1736,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41972:13:0",
															"memberName": "tSellFeeTotal",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1663,
															"src": "41967:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1737,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "41988:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41988:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41967:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41946:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "41946:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1742,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "42084:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42089:13:0",
														"memberName": "rSellFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1665,
														"src": "42084:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42084:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1754,
												"nodeType": "IfStatement",
												"src": "42080:97:0",
												"trueBody": {
													"id": 1753,
													"nodeType": "Block",
													"src": "42109:68:0",
													"statements": [
														{
															"expression": {
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1746,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "42124:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "42129:15:0",
																	"memberName": "reflectedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1667,
																	"src": "42124:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1749,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "42147:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42152:13:0",
																	"memberName": "rSellFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1665,
																	"src": "42147:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42124:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1752,
															"nodeType": "ExpressionStatement",
															"src": "42124:41:0"
														}
													]
												}
											},
											{
												"documentation": "rOwned values reduced for the SENDER by the FULL amount",
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1755,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "42309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1757,
														"indexExpression": {
															"id": 1756,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "42317:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "42309:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1758,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "42328:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1759,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42333:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "42328:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42309:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "42309:35:0"
											},
											{
												"documentation": "tOwned and rOwned value updated for the recipient (non-excluded address) increased by the amount minus the fee",
												"expression": {
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1762,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "42481:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1764,
														"indexExpression": {
															"id": 1763,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "42489:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "42481:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1765,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "42504:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42509:11:0",
																	"memberName": "tAmountSent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1651,
																	"src": "42504:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1767,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "42523:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42528:13:0",
																	"memberName": "tSellFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1663,
																	"src": "42523:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42504:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1770,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "42503:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42481:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "42481:61:0"
											},
											{
												"expression": {
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1773,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "42553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1775,
														"indexExpression": {
															"id": 1774,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "42561:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "42553:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1776,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "42576:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42581:11:0",
																	"memberName": "rAmountSent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1653,
																	"src": "42576:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1778,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "42595:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42600:13:0",
																	"memberName": "rSellFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1665,
																	"src": "42595:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42576:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1781,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "42575:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42553:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "42553:61:0"
											},
											{
												"expression": {
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1784,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "42709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "42720:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42725:15:0",
														"memberName": "reflectedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1667,
														"src": "42720:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42709:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "42709:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1790,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "42826:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1791,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "42834:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1792,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "42846:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "42851:11:0",
																		"memberName": "tAmountSent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1651,
																		"src": "42846:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1794,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "42865:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "42870:13:0",
																		"memberName": "tSellFeeTotal",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1663,
																		"src": "42865:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "42846:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1797,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "42845:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "42817:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42817:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "EmitStatement",
												"src": "42812:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1801,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "42936:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "42941:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "42936:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1803,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "42968:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "42973:11:0",
																		"memberName": "tAmountSent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1651,
																		"src": "42968:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1805,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1686,
																			"src": "42987:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "42992:13:0",
																		"memberName": "tSellFeeTotal",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1663,
																		"src": "42987:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "42968:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1808,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "42967:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1800,
														"name": "TransferToExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "42903:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42903:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "EmitStatement",
												"src": "42898:123:0"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "41210:53:0",
										"text": "@notice RECIPIENT excluded (usually a token sell)"
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "41278:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "41306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "41298:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "41322:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "41314:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "41341:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "41333:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41297:52:0"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41358:0:0"
									},
									"scope": 2164,
									"src": "41269:1760:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e6ef78c5a1f105fc4b9500eeb7cd09b041367bdee35f1d85761735ee78b3ff2e",
									"id": 1818,
									"name": "TransferFromExcluded",
									"nameLocation": "43043:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSent",
												"nameLocation": "43072:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "43064:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "43092:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "43084:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43063:44:0"
									},
									"src": "43037:71:0"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "43262:1706:0",
										"statements": [
											{
												"assignments": [
													1830
												],
												"declarations": [
													{
														"constant": false,
														"id": 1830,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "43293:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1955,
														"src": "43273:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
															"typeString": "struct METH.TransferData"
														},
														"typeName": {
															"id": 1829,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1828,
																"name": "TransferData",
																"nameLocations": [
																	"43273:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1668,
																"src": "43273:12:0"
															},
															"referencedDeclaration": 1668,
															"src": "43273:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_storage_ptr",
																"typeString": "struct METH.TransferData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"nodeType": "VariableDeclarationStatement",
												"src": "43273:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1832,
														"name": "antiWhale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "43375:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43388:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "43375:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1846,
												"nodeType": "IfStatement",
												"src": "43372:157:0",
												"trueBody": {
													"id": 1845,
													"nodeType": "Block",
													"src": "43394:135:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1836,
																			"name": "tAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1825,
																			"src": "43417:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1839,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1837,
																						"name": "_tTotal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 796,
																						"src": "43429:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "31303030",
																						"id": 1838,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "43439:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000_by_1",
																							"typeString": "int_const 1000"
																						},
																						"value": "1000"
																					},
																					"src": "43429:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1840,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "43428:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "43417:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43616e6e6f74207075726368617365206d6f7265207468616e2031306d2028302e312529206f6620737570706c7920696e2073696e676c65207472616e73616374696f6e",
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43446:70:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069",
																			"typeString": "literal_string \"Cannot purchase more than 10m (0.1%) of supply in single transaction\""
																		},
																		"value": "Cannot purchase more than 10m (0.1%) of supply in single transaction"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6a995814794c20a9a252653377513d5b2c09349a21e721542d369c9060266069",
																			"typeString": "literal_string \"Cannot purchase more than 10m (0.1%) of supply in single transaction\""
																		}
																	],
																	"id": 1835,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "43409:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43409:108:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1844,
															"nodeType": "ExpressionStatement",
															"src": "43409:108:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1847,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "43587:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "43592:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "43587:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1850,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "43606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43587:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "43587:26:0"
											},
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1853,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "43624:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "43629:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "43624:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1856,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "43643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1857,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "43653:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43653:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43643:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43624:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "43624:39:0"
											},
											{
												"expression": {
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1862,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "43731:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "43736:14:0",
														"memberName": "totalBuyTaxBps",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1655,
														"src": "43731:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43753:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43731:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "43731:23:0"
											},
											{
												"expression": {
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1868,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "43822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "43827:12:0",
														"memberName": "tBuyFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1659,
														"src": "43822:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1871,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "43843:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1872,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "43853:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "43858:14:0",
																		"memberName": "totalBuyTaxBps",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1655,
																		"src": "43853:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "43843:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1875,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "43842:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43876:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "43842:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43822:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "43822:59:0"
											},
											{
												"expression": {
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1880,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "43892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "43897:12:0",
														"memberName": "rBuyFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1661,
														"src": "43892:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1883,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "43912:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "43917:12:0",
															"memberName": "tBuyFeeTotal",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1659,
															"src": "43912:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1885,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "43932:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43932:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43912:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "43892:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "43892:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1890,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "44042:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44047:12:0",
														"memberName": "rBuyFeeTotal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1661,
														"src": "44042:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "44062:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "44042:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1902,
												"nodeType": "IfStatement",
												"src": "44024:108:0",
												"trueBody": {
													"id": 1901,
													"nodeType": "Block",
													"src": "44065:67:0",
													"statements": [
														{
															"expression": {
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1894,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "44080:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "44085:15:0",
																	"memberName": "reflectedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1667,
																	"src": "44080:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1897,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "44103:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "44108:12:0",
																	"memberName": "rBuyFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1661,
																	"src": "44103:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44080:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1900,
															"nodeType": "ExpressionStatement",
															"src": "44080:40:0"
														}
													]
												}
											},
											{
												"documentation": "both tOwned AND rOwned values reduced for the SENDER by the FULL amount",
												"expression": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1903,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "44278:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1905,
														"indexExpression": {
															"id": 1904,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "44286:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "44278:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1906,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "44297:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44302:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "44297:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44278:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "44278:35:0"
											},
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1910,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "44324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1912,
														"indexExpression": {
															"id": 1911,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "44332:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "44324:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1913,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "44343:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44348:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "44343:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44324:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "44324:35:0"
											},
											{
												"documentation": "rOwned value updated for the recipient (non-excluded address) increased by the amount minus the fee",
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1917,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "44485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1919,
														"indexExpression": {
															"id": 1918,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "44493:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "44485:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1920,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "44508:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "44513:11:0",
																	"memberName": "rAmountSent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1653,
																	"src": "44508:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1922,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "44527:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "44532:12:0",
																	"memberName": "rBuyFeeTotal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1661,
																	"src": "44527:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44508:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1925,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "44507:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44485:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "44485:60:0"
											},
											{
												"expression": {
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1928,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "44640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1929,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "44651:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1930,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44656:15:0",
														"memberName": "reflectedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1667,
														"src": "44651:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44640:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "44640:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1934,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "44757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1935,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "44765:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1936,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "44777:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "44782:11:0",
																		"memberName": "tAmountSent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1651,
																		"src": "44777:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1938,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "44796:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "44801:12:0",
																		"memberName": "tBuyFeeTotal",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1659,
																		"src": "44796:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44777:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1941,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "44776:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1933,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "44748:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44748:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1943,
												"nodeType": "EmitStatement",
												"src": "44743:72:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1945,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "44876:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "44881:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "44876:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1947,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "44908:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "44913:11:0",
																		"memberName": "tAmountSent",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1651,
																		"src": "44908:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1949,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "44927:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																				"typeString": "struct METH.TransferData memory"
																			}
																		},
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "44932:12:0",
																		"memberName": "tBuyFeeTotal",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1659,
																		"src": "44927:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44908:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1952,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "44907:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1944,
														"name": "TransferFromExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "44841:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44841:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "EmitStatement",
												"src": "44836:124:0"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "43116:49:0",
										"text": "@notice SENDER excluded (usually a token buy)"
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "43180:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "43210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "43202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "43226:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "43218:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "43245:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "43237:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43201:52:0"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43262:0:0"
									},
									"scope": 2164,
									"src": "43171:1797:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2541109a23d530c06d62a3bf63d8d03107194870126fddb7170c0daef360cd8a",
									"id": 1962,
									"name": "TransferBothExcluded",
									"nameLocation": "44982:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSent",
												"nameLocation": "45011:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "45003:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "45031:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "45023:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45002:44:0"
									},
									"src": "44976:71:0"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "45232:845:0",
										"statements": [
											{
												"assignments": [
													1974
												],
												"declarations": [
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "45263:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "45243:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
															"typeString": "struct METH.TransferData"
														},
														"typeName": {
															"id": 1973,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1972,
																"name": "TransferData",
																"nameLocations": [
																	"45243:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1668,
																"src": "45243:12:0"
															},
															"referencedDeclaration": 1668,
															"src": "45243:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_storage_ptr",
																"typeString": "struct METH.TransferData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"nodeType": "VariableDeclarationStatement",
												"src": "45243:24:0"
											},
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1976,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "45381:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "45386:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "45381:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1979,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "45400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45381:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "45381:26:0"
											},
											{
												"expression": {
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1982,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "45418:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "45423:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "45418:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1985,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "45437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1986,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "45447:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45447:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "45437:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45418:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1990,
												"nodeType": "ExpressionStatement",
												"src": "45418:39:0"
											},
											{
												"documentation": "both tOwned AND rOwned values reduced for the SENDER by the FULL amount",
												"expression": {
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1991,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "45555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1993,
														"indexExpression": {
															"id": 1992,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "45563:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "45555:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1994,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "45574:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45579:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "45574:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45555:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1997,
												"nodeType": "ExpressionStatement",
												"src": "45555:35:0"
											},
											{
												"expression": {
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1998,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "45601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2000,
														"indexExpression": {
															"id": 1999,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "45609:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "45601:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 2001,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "45620:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45625:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "45620:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45601:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "45601:35:0"
											},
											{
												"documentation": "both tOwned AND rOwned values are updated for recipient",
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2005,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "45718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2007,
														"indexExpression": {
															"id": 2006,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "45726:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "45718:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 2008,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "45740:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45745:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "45740:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45718:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "45718:38:0"
											},
											{
												"expression": {
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2012,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "45767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2014,
														"indexExpression": {
															"id": 2013,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "45775:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "45767:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 2015,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "45789:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "45794:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "45789:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45767:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2018,
												"nodeType": "ExpressionStatement",
												"src": "45767:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2020,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "45891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2021,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "45899:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2022,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "45910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "45915:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "45910:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2019,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "45882:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45882:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2025,
												"nodeType": "EmitStatement",
												"src": "45877:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2027,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "45980:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "45985:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "45980:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2029,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "46011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "46016:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "46011:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2026,
														"name": "TransferBothExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "45945:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45945:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2032,
												"nodeType": "EmitStatement",
												"src": "45940:129:0"
											}
										]
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "45059:76:0",
										"text": "@notice both excluded (token transfer from DEX to DEX) - no fees applied"
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "45150:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "45180:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "45172:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "45196:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "45188:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "45215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "45207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45171:52:0"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45232:0:0"
									},
									"scope": 2164,
									"src": "45141:936:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "d9923e08d9d88ff7a7e9b8460f3163dc6b887fabe315449da3b5cd16bb5e9340",
									"id": 2040,
									"name": "TransferStandard",
									"nameLocation": "46091:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSent",
												"nameLocation": "46116:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "46108:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "46136:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "46128:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46107:44:0"
									},
									"src": "46085:67:0"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "46305:840:0",
										"statements": [
											{
												"assignments": [
													2052
												],
												"declarations": [
													{
														"constant": false,
														"id": 2052,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "46336:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2109,
														"src": "46316:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
															"typeString": "struct METH.TransferData"
														},
														"typeName": {
															"id": 2051,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2050,
																"name": "TransferData",
																"nameLocations": [
																	"46316:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1668,
																"src": "46316:12:0"
															},
															"referencedDeclaration": 1668,
															"src": "46316:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_storage_ptr",
																"typeString": "struct METH.TransferData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2053,
												"nodeType": "VariableDeclarationStatement",
												"src": "46316:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2055,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "46454:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2057,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "46476:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2056,
																		"name": "rBalanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "46465:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46465:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46486:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "46465:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46454:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520676f747461206b6565702031204d45544820616c7761797321",
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46507:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c",
																"typeString": "literal_string \"You gotta keep 1 METH always!\""
															},
															"value": "You gotta keep 1 METH always!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02cd4d827c08f28aefac5feb937c7be1648c27415766df5bba8c0ad3c0d7a52c",
																"typeString": "literal_string \"You gotta keep 1 METH always!\""
															}
														],
														"id": 2054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46446:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46446:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2064,
												"nodeType": "ExpressionStatement",
												"src": "46446:93:0"
											},
											{
												"expression": {
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2065,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "46598:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "46603:11:0",
														"memberName": "tAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "46598:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2068,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "46617:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46598:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "46598:26:0"
											},
											{
												"expression": {
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2071,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "46635:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "46640:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "46635:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2074,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "46654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2075,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "46664:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46664:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "46654:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46635:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "46635:39:0"
											},
											{
												"documentation": "rOwned value reduced for the SENDER by the FULL amount",
												"expression": {
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2080,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "46791:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2082,
														"indexExpression": {
															"id": 2081,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "46799:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46791:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 2083,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "46810:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46815:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "46810:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46791:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "46791:35:0"
											},
											{
												"expression": {
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2087,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "46923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2089,
														"indexExpression": {
															"id": 2088,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "46931:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46923:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 2090,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "46945:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																"typeString": "struct METH.TransferData memory"
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46950:11:0",
														"memberName": "rAmountSent",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "46945:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46923:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "46923:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2095,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "46988:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2096,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "46996:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"components": [
																{
																	"expression": {
																		"id": 2097,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "47008:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																			"typeString": "struct METH.TransferData memory"
																		}
																	},
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "47013:11:0",
																	"memberName": "tAmountSent",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1651,
																	"src": "47008:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2099,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "47007:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2094,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "46979:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46979:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2101,
												"nodeType": "EmitStatement",
												"src": "46974:52:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2103,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "47075:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "47080:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "47075:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2105,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "47106:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$1668_memory_ptr",
																	"typeString": "struct METH.TransferData memory"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "47111:11:0",
															"memberName": "tAmountSent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "47106:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2102,
														"name": "TransferStandard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2040,
														"src": "47044:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47044:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2108,
												"nodeType": "EmitStatement",
												"src": "47039:98:0"
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "46164:48:0",
										"text": "@notice standard transfer (wallet to wallet)"
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "46227:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "46253:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "46245:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "46269:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "46261:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "46288:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "46280:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46244:52:0"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46305:0:0"
									},
									"scope": 2164,
									"src": "46218:927:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "47287:55:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2118,
														"name": "_isExcludedFromMaxTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "47305:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2120,
													"indexExpression": {
														"id": 2119,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2113,
														"src": "47326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "47305:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2121,
												"nodeType": "Return",
												"src": "47298:36:0"
											}
										]
									},
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "47155:53:0",
										"text": "@notice checks if address is excluded from Max Tx"
									},
									"functionSelector": "658c27a9",
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromMaxTx",
									"nameLocation": "47223:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "47251:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "47243:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47242:17:0"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "47281:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47281:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47280:6:0"
									},
									"scope": 2164,
									"src": "47214:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2135,
										"nodeType": "Block",
										"src": "47485:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2131,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "47503:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2133,
													"indexExpression": {
														"id": 2132,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "47515:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "47503:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2134,
												"nodeType": "Return",
												"src": "47496:27:0"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "47350:65:0",
										"text": "@notice checks if address is excluded from reflection rewards"
									},
									"functionSelector": "cba0e996",
									"id": 2136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcluded",
									"nameLocation": "47430:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "47449:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "47441:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47440:17:0"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "47479:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47478:6:0"
									},
									"scope": 2164,
									"src": "47421:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "47855:139:0",
										"statements": [
											{
												"assignments": [
													2147
												],
												"declarations": [
													{
														"constant": false,
														"id": 2147,
														"mutability": "mutable",
														"name": "tBalance",
														"nameLocation": "47874:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2162,
														"src": "47866:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2151,
												"initialValue": {
													"baseExpression": {
														"id": 2148,
														"name": "_tOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "47885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2150,
													"indexExpression": {
														"id": 2149,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2139,
														"src": "47893:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "47885:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47866:36:0"
											},
											{
												"assignments": [
													2153
												],
												"declarations": [
													{
														"constant": false,
														"id": 2153,
														"mutability": "mutable",
														"name": "rBalance",
														"nameLocation": "47921:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2162,
														"src": "47913:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2157,
												"initialValue": {
													"baseExpression": {
														"id": 2154,
														"name": "_rOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "47932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2156,
													"indexExpression": {
														"id": 2155,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2139,
														"src": "47940:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "47932:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47913:36:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2158,
															"name": "tBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "47967:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2159,
															"name": "rBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "47977:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2160,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "47966:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2145,
												"id": 2161,
												"nodeType": "Return",
												"src": "47960:26:0"
											}
										]
									},
									"documentation": {
										"id": 2137,
										"nodeType": "StructuredDocumentation",
										"src": "47702:60:0",
										"text": "@notice verify account balance in both tSpace and rSpace"
									},
									"functionSelector": "80da2287",
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewTBalanceRBalance",
									"nameLocation": "47777:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "47806:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "47798:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47797:18:0"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "47837:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "47846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47836:18:0"
									},
									"scope": 2164,
									"src": "47768:226:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2165,
							"src": "26674:21434:0",
							"usedErrors": [],
							"usedEvents": [
								341,
								555,
								680,
								689,
								1674,
								1818,
								1962,
								2040
							]
						}
					],
					"src": "42:48068:0"
				},
				"id": 0
			}
		}
	}
}